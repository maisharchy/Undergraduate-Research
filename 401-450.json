{
    "300": [
        {
            "Word": "SearchResponse",
            "WordID": "1",
            "SentID": 559,
            "TokenID": "0",
            "Context": "SearchResponse searchResponse = searchRequestBuilder . execute ( ) . actionGet ( ) ;"
        },
        {
            "Word": "searchResponse",
            "WordID": "2",
            "SentID": 560,
            "TokenID": "2",
            "Context": "if ( searchResponse == null ) {"
        },
        {
            "Word": "searchResponse",
            "WordID": "3",
            "SentID": 561,
            "TokenID": "1",
            "Context": "return searchResponse . getHits ( ) ;"
        },
        {
            "Word": "compressedResponse",
            "WordID": "1",
            "SentID": 819,
            "TokenID": "4",
            "Context": "if ( this . compressedResponse ) {"
        },
        {
            "Word": "CompressedResponse",
            "WordID": "1",
            "SentID": 820,
            "TokenID": "0",
            "Context": "CompressedResponse compressedResponse = new CompressedResponse ( jsonObject ) ;"
        },
        {
            "Word": "CompressedResponse",
            "WordID": "2",
            "SentID": 820,
            "TokenID": "4",
            "Context": "CompressedResponse compressedResponse = new CompressedResponse ( jsonObject ) ;"
        },
        {
            "Word": "compressedResponse",
            "WordID": "3",
            "SentID": 822,
            "TokenID": "4",
            "Context": "UtilGlobal . decodeBase64 ( compressedResponse . getDataBase64 ( ) ) ;"
        },
        {
            "Word": "AuthResponse",
            "WordID": "1",
            "SentID": 1601,
            "TokenID": "0",
            "Context": "AuthResponse authResponse ;"
        },
        {
            "Word": "authResponse",
            "WordID": "1",
            "SentID": 1601,
            "TokenID": "1",
            "Context": "AuthResponse authResponse ;"
        },
        {
            "Word": "AuthResponse",
            "WordID": "2",
            "SentID": 1602,
            "TokenID": "3",
            "Context": "authResponse = new AuthResponse ("
        },
        {
            "Word": "authResponse",
            "WordID": "3",
            "SentID": 1609,
            "TokenID": "6",
            "Context": "this . initializeSession ( passwordParam , authResponse ) ;"
        },
        {
            "Word": "authResponse",
            "WordID": "4",
            "SentID": 1611,
            "TokenID": "0",
            "Context": "authResponse . getServiceTicketBase64 ( ) ,"
        },
        {
            "Word": "authResponse",
            "WordID": "5",
            "SentID": 1614,
            "TokenID": "4",
            "Context": "appReqToken . setSalt ( authResponse . getSalt ( ) ) ;"
        },
        {
            "Word": "hMacFromResponse",
            "WordID": "1",
            "SentID": 1625,
            "TokenID": "3",
            "Context": "byte [ ] hMacFromResponse = UtilGlobal . decodeBase64 ("
        },
        {
            "Word": "hMacFromResponse",
            "WordID": "2",
            "SentID": 1629,
            "TokenID": "7",
            "Context": "if ( ! Arrays . equals ( hMacFromResponse , localGeneratedHMac ) ) {"
        },
        {
            "Word": "GetIndexResponse",
            "WordID": "1",
            "SentID": 2398,
            "TokenID": "0",
            "Context": "GetIndexResponse getExistingIndex = this . getOrCreateIndex ( indexParam ) ;"
        },
        {
            "Word": "PutMappingResponse",
            "WordID": "1",
            "SentID": 2421,
            "TokenID": "0",
            "Context": "PutMappingResponse putMappingResponse = putMappingRequestBuilder . get ( ) ;"
        },
        {
            "Word": "putMappingResponse",
            "WordID": "2",
            "SentID": 2422,
            "TokenID": "3",
            "Context": "if ( ! putMappingResponse . isAcknowledged ( ) ) {"
        },
        {
            "Word": "GetIndexResponse",
            "WordID": "2",
            "SentID": 2444,
            "TokenID": "2",
            "Context": "} public GetIndexResponse getOrCreateIndex ( String indexParam ) {"
        },
        {
            "Word": "CreateIndexResponse",
            "WordID": "1",
            "SentID": 2449,
            "TokenID": "0",
            "Context": "CreateIndexResponse mappingCreateResponse ="
        },
        {
            "Word": "mappingCreateResponse",
            "WordID": "1",
            "SentID": 2449,
            "TokenID": "1",
            "Context": "CreateIndexResponse mappingCreateResponse ="
        },
        {
            "Word": "mappingCreateResponse",
            "WordID": "2",
            "SentID": 2451,
            "TokenID": "3",
            "Context": "if ( ! mappingCreateResponse . isAcknowledged ( ) ) {"
        },
        {
            "Word": "handleResponse",
            "WordID": "1",
            "SentID": 2975,
            "TokenID": "2",
            "Context": "public String handleResponse ( final HttpResponse responseParam ) throws IOException {"
        },
        {
            "Word": "HttpResponse",
            "WordID": "1",
            "SentID": 2975,
            "TokenID": "5",
            "Context": "public String handleResponse ( final HttpResponse responseParam ) throws IOException {"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "1",
            "SentID": 3773,
            "TokenID": "10",
            "Context": "public boolean getAllowRobots ( ServletContext servletContext , HttpServletRequest request , HttpServletResponse response , Page page ) throws ServletException , IOException {"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "2",
            "SentID": 3992,
            "TokenID": "0",
            "Context": "HttpServletResponse httpResponse = context . getResponse ( ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "2",
            "SentID": 4010,
            "TokenID": "0",
            "Context": "httpResponse . setCharacterEncoding ( \"UTF-8\" ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "3",
            "SentID": 4012,
            "TokenID": "0",
            "Context": "httpResponse . setStatus ( HttpServletResponse . SC_NO_CONTENT ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "4",
            "SentID": 4014,
            "TokenID": "0",
            "Context": "httpResponse . setStatus ( HttpServletResponse . SC_OK ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "5",
            "SentID": 4015,
            "TokenID": "0",
            "Context": "httpResponse . setContentType ( contentType . getValue ( ) ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "6",
            "SentID": 4017,
            "TokenID": "4",
            "Context": "valueWriter . write ( httpResponse , value ) ;"
        },
        {
            "Word": "HttpResponse",
            "WordID": "2",
            "SentID": 4327,
            "TokenID": "2",
            "Context": "} protected HttpResponse executeAndHandle ( Request request )"
        },
        {
            "Word": "HttpResponse",
            "WordID": "3",
            "SentID": 4329,
            "TokenID": "0",
            "Context": "HttpResponse response = execute ( request ) ;"
        },
        {
            "Word": "handleResponse",
            "WordID": "2",
            "SentID": 4330,
            "TokenID": "0",
            "Context": "handleResponse ( response , request ) ;"
        },
        {
            "Word": "HttpResponse",
            "WordID": "4",
            "SentID": 4331,
            "TokenID": "2",
            "Context": "} protected HttpResponse execute ( Request request )"
        },
        {
            "Word": "returnResponse",
            "WordID": "1",
            "SentID": 4333,
            "TokenID": "8",
            "Context": "return executor . execute ( request ) . returnResponse ( ) ;"
        },
        {
            "Word": "handleResponse",
            "WordID": "3",
            "SentID": 4334,
            "TokenID": "3",
            "Context": "} protected void handleResponse ( HttpResponse response , Request request )"
        },
        {
            "Word": "HttpResponse",
            "WordID": "5",
            "SentID": 4334,
            "TokenID": "5",
            "Context": "} protected void handleResponse ( HttpResponse response , Request request )"
        },
        {
            "Word": "HttpResponse",
            "WordID": "6",
            "SentID": 4338,
            "TokenID": "5",
            "Context": "} protected void handleErrors ( HttpResponse response , Request request )"
        },
        {
            "Word": "HttpResponse",
            "WordID": "7",
            "SentID": 4369,
            "TokenID": "4",
            "Context": "private void handleLinks ( HttpResponse response ) {"
        },
        {
            "Word": "HttpResponse",
            "WordID": "8",
            "SentID": 4377,
            "TokenID": "5",
            "Context": "} protected void handleHeaderLinks ( HttpResponse response , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "HttpResponse",
            "WordID": "9",
            "SentID": 4409,
            "TokenID": "5",
            "Context": "} protected void handleCapabilities ( HttpResponse response ) {"
        },
        {
            "Word": "response",
            "WordID": "17",
            "SentID": 4410,
            "TokenID": "6",
            "Context": "allowedMethods = unmodifiableSet ( stream ( response . getHeaders ( \"Allow\" ) )"
        },
        {
            "Word": "PartialResponse",
            "WordID": "1",
            "SentID": 4611,
            "TokenID": "0",
            "Context": "PartialResponse < TEntity > response ;"
        },
        {
            "Word": "response",
            "WordID": "19",
            "SentID": 4612,
            "TokenID": "0",
            "Context": "response = ( currentStartIndex >= 0 )"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "5",
            "SentID": 4660,
            "TokenID": "4",
            "Context": "public void write ( HttpServletResponse httpResponse , Object value ) throws IOException {"
        },
        {
            "Word": "httpResponse",
            "WordID": "7",
            "SentID": 4660,
            "TokenID": "5",
            "Context": "public void write ( HttpServletResponse httpResponse , Object value ) throws IOException {"
        },
        {
            "Word": "httpResponse",
            "WordID": "8",
            "SentID": 4662,
            "TokenID": "7",
            "Context": "document . serialize ( new OutputStreamWriter ( httpResponse . getOutputStream ( ) , \"UTF-8\" ) ) ;"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "6",
            "SentID": 4666,
            "TokenID": "8",
            "Context": "} public void attach ( HttpServletRequest httpRequest , HttpServletResponse httpResponse ) {"
        },
        {
            "Word": "httpRequest",
            "WordID": "24",
            "SentID": 4673,
            "TokenID": "2",
            "Context": "this . httpRequest = httpRequest ;"
        },
        {
            "Word": "httpRequest",
            "WordID": "25",
            "SentID": 4673,
            "TokenID": "4",
            "Context": "this . httpRequest = httpRequest ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "10",
            "SentID": 4674,
            "TokenID": "2",
            "Context": "this . httpResponse = httpResponse ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "11",
            "SentID": 4674,
            "TokenID": "4",
            "Context": "this . httpResponse = httpResponse ;"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "7",
            "SentID": 4747,
            "TokenID": "7",
            "Context": "protected void service ( HttpServletRequest httpRequest , HttpServletResponse httpResponse ) throws IOException , ServletException {"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "8",
            "SentID": 4775,
            "TokenID": "1",
            "Context": "final HttpServletResponse httpResponse = context . getResponse ( ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "16",
            "SentID": 4776,
            "TokenID": "2",
            "Context": "if ( httpResponse . isCommitted ( ) ) {"
        },
        {
            "Word": "httpResponse",
            "WordID": "17",
            "SentID": 4779,
            "TokenID": "0",
            "Context": "httpResponse . setHeader ( HttpHeader . X_HEADER_LOCATION , container . getLoginPage ( ) ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "18",
            "SentID": 4780,
            "TokenID": "0",
            "Context": "httpResponse . setStatus ( HttpServletResponse . SC_UNAUTHORIZED ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "19",
            "SentID": 4799,
            "TokenID": "0",
            "Context": "httpResponse . setStatus ( statusCode ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "20",
            "SentID": 4800,
            "TokenID": "0",
            "Context": "httpResponse . setContentType ( ContentType . APPLICATION_JSON . getValue ( ) ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "21",
            "SentID": 4801,
            "TokenID": "0",
            "Context": "httpResponse . setContentLength ( bytes . length ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "22",
            "SentID": 4802,
            "TokenID": "0",
            "Context": "httpResponse . setHeader ( \"Content-Language\" , context . getLocale ( ) . toLanguageTag ( ) ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "23",
            "SentID": 4803,
            "TokenID": "0",
            "Context": "httpResponse . getOutputStream ( ) . write ( bytes ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "24",
            "SentID": 4804,
            "TokenID": "0",
            "Context": "httpResponse . getOutputStream ( ) . flush ( ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "25",
            "SentID": 4805,
            "TokenID": "12",
            "Context": "( ( StreamHandler < ? > ) value ) . invokeHandler ( httpResponse . getOutputStream ( ) ) ;"
        },
        {
            "Word": "HttpResponse",
            "WordID": "10",
            "SentID": 4833,
            "TokenID": "9",
            "Context": "} public static Iterable < LinkHeader > getLinkHeaders ( HttpResponse response ) {"
        },
        {
            "Word": "httpResponse",
            "WordID": "26",
            "SentID": 4840,
            "TokenID": "7",
            "Context": "json . stringify ( new OutputStreamWriter ( httpResponse . getOutputStream ( ) , \"UTF-8\" ) , value ) ;"
        },
        {
            "Labels": [
                "\"Handling and Managing HTTP Responses in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Response, HTTP",
            "Semantic": "Network",
            "Syntactic": "object, method",
            "Description": "objects and methods with \"Respones\" and \"HTTP\" in the name relating to network",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Lexicographic",
            "Q6_Answer": "None"
        }
    ],
    "322": [
        {
            "Word": "searchRequestBuilder",
            "WordID": "10",
            "SentID": 559,
            "TokenID": "3",
            "Context": "SearchResponse searchResponse = searchRequestBuilder . execute ( ) . actionGet ( ) ;"
        },
        {
            "Word": "builder",
            "WordID": "1",
            "SentID": 785,
            "TokenID": "0",
            "Context": "builder . append ( selectedChoice ) ;"
        },
        {
            "Word": "putMappingRequestBuilder",
            "WordID": "6",
            "SentID": 2421,
            "TokenID": "3",
            "Context": "PutMappingResponse putMappingResponse = putMappingRequestBuilder . get ( ) ;"
        },
        {
            "Word": "strBuilder",
            "WordID": "2",
            "SentID": 2918,
            "TokenID": "0",
            "Context": "strBuilder . append ( nameValue . getName ( ) ) ;"
        },
        {
            "Word": "strBuilder",
            "WordID": "3",
            "SentID": 2919,
            "TokenID": "0",
            "Context": "strBuilder . append ( EQUALS ) ;"
        },
        {
            "Word": "strBuilder",
            "WordID": "4",
            "SentID": 2920,
            "TokenID": "0",
            "Context": "strBuilder . append ( nameValue . getValue ( ) ) ;"
        },
        {
            "Word": "strBuilder",
            "WordID": "5",
            "SentID": 2921,
            "TokenID": "0",
            "Context": "strBuilder . append ( AMP ) ;"
        },
        {
            "Word": "strBuilder",
            "WordID": "6",
            "SentID": 2922,
            "TokenID": "3",
            "Context": "String bodyJsonString = strBuilder . toString ( ) ;"
        },
        {
            "Word": "stringBuilder",
            "WordID": "2",
            "SentID": 3561,
            "TokenID": "0",
            "Context": "stringBuilder . append ( child . getTextContent ( ) ) ;"
        },
        {
            "Word": "stringBuilder",
            "WordID": "3",
            "SentID": 3562,
            "TokenID": "1",
            "Context": "return stringBuilder . toString ( ) ;"
        },
        {
            "Word": "builder",
            "WordID": "16",
            "SentID": 4231,
            "TokenID": "0",
            "Context": "builder . append ( descriptor . getName ( ) ) ;"
        },
        {
            "Word": "builder",
            "WordID": "17",
            "SentID": 4232,
            "TokenID": "0",
            "Context": "builder . append ( ':' ) ;"
        },
        {
            "Word": "builder",
            "WordID": "18",
            "SentID": 4234,
            "TokenID": "0",
            "Context": "builder . append ( implementationClass . getName ( ) ) ;"
        },
        {
            "Word": "builder",
            "WordID": "19",
            "SentID": 4236,
            "TokenID": "0",
            "Context": "builder . append ( interfaceClass . getName ( ) ) ;"
        },
        {
            "Word": "builder",
            "WordID": "20",
            "SentID": 4237,
            "TokenID": "0",
            "Context": "builder . append ( instanceType ) ;"
        },
        {
            "Word": "builder",
            "WordID": "21",
            "SentID": 4238,
            "TokenID": "0",
            "Context": "builder . append ( instanceScope ) ;"
        },
        {
            "Word": "builder",
            "WordID": "22",
            "SentID": 4239,
            "TokenID": "0",
            "Context": "builder . append ( remotelyAccessible ? \"NET\" : \"LOCAL\" ) ;"
        },
        {
            "Word": "builder",
            "WordID": "23",
            "SentID": 4241,
            "TokenID": "0",
            "Context": "builder . append ( implementationURL ) ;"
        },
        {
            "Word": "builder",
            "WordID": "24",
            "SentID": 4282,
            "TokenID": "0",
            "Context": "builder . append ( stackTraceClass . getName ( ) ) ;"
        },
        {
            "Word": "builder",
            "WordID": "25",
            "SentID": 4283,
            "TokenID": "0",
            "Context": "builder . append ( \"\\r\\n\" ) ;"
        },
        {
            "Word": "builder",
            "WordID": "27",
            "SentID": 4419,
            "TokenID": "0",
            "Context": "builder . append ( throwable . getLocalizedMessage ( ) ) . append ( \"\\n\" ) ;"
        },
        {
            "Labels": [
                "\"Building and Managing Search Requests in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "builder",
            "Syntactic": "Object",
            "Semantic": "Function Calls",
            "Description": "Objects with \"builder\" in the name many with the append function being called.",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Lexicographic",
            "Q6_Answer": "None"
        }
    ],
    "3": [
        {
            "Word": "execute",
            "WordID": "1",
            "SentID": 559,
            "TokenID": "5",
            "Context": "SearchResponse searchResponse = searchRequestBuilder . execute ( ) . actionGet ( ) ;"
        },
        {
            "Word": "admin",
            "WordID": "1",
            "SentID": 629,
            "TokenID": "5",
            "Context": "return this . client . admin ( ) . cluster ( )"
        },
        {
            "Word": "cluster",
            "WordID": "1",
            "SentID": 629,
            "TokenID": "9",
            "Context": "return this . client . admin ( ) . cluster ( )"
        },
        {
            "Word": "execute",
            "WordID": "2",
            "SentID": 630,
            "TokenID": "5",
            "Context": ". prepareState ( ) . execute ( )"
        },
        {
            "Word": "start",
            "WordID": "1",
            "SentID": 637,
            "TokenID": "2",
            "Context": "closeConnThread . start ( ) ;"
        },
        {
            "Word": "split",
            "WordID": "1",
            "SentID": 718,
            "TokenID": "7",
            "Context": "String [ ] latitudeAndLongitude = textToCheckParam . split ( REG_EX_PIPE ) ;"
        },
        {
            "Word": "split",
            "WordID": "2",
            "SentID": 720,
            "TokenID": "4",
            "Context": "latitudeAndLongitude = textToCheckParam . split ( REG_EX_COMMA ) ;"
        },
        {
            "Word": "split",
            "WordID": "3",
            "SentID": 726,
            "TokenID": "7",
            "Context": "String [ ] latitudeAndLongitude = textToCheckParam . split ( REG_EX_COMMA ) ;"
        },
        {
            "Word": "split",
            "WordID": "4",
            "SentID": 727,
            "TokenID": "4",
            "Context": "latitudeAndLongitude = textToCheckParam . split ( REG_EX_PIPE ) ;"
        },
        {
            "Word": "getDecoder",
            "WordID": "1",
            "SentID": 747,
            "TokenID": "3",
            "Context": "return Base64 . getDecoder ( ) . decode ( base64StringParam ) ;"
        },
        {
            "Word": "decode",
            "WordID": "1",
            "SentID": 747,
            "TokenID": "7",
            "Context": "return Base64 . getDecoder ( ) . decode ( base64StringParam ) ;"
        },
        {
            "Word": "digit",
            "WordID": "1",
            "SentID": 759,
            "TokenID": "14",
            "Context": "data [ i / 2 ] = ( byte ) ( ( Character . digit ( stringParam . charAt ( i ) , 16 ) << 4 )"
        },
        {
            "Word": "digit",
            "WordID": "2",
            "SentID": 760,
            "TokenID": "3",
            "Context": "+ Character . digit ( stringParam . charAt ( i + 1 ) , 16 ) ) ;"
        },
        {
            "Word": "getEncoder",
            "WordID": "1",
            "SentID": 762,
            "TokenID": "3",
            "Context": "return Base64 . getEncoder ( ) . encodeToString ( bytesParam ) ;"
        },
        {
            "Word": "uncompress",
            "WordID": "1",
            "SentID": 824,
            "TokenID": "4",
            "Context": "uncompressedJson = this . uncompress ( compressedJsonList ) ;"
        },
        {
            "Word": "remove",
            "WordID": "1",
            "SentID": 833,
            "TokenID": "4",
            "Context": "this . expectedEchoMessagesBeforeComplete . remove ( echo ) ;"
        },
        {
            "Word": "complete",
            "WordID": "1",
            "SentID": 835,
            "TokenID": "4",
            "Context": "this . completableFuture . complete ( this . returnValue ) ;"
        },
        {
            "Word": "close",
            "WordID": "1",
            "SentID": 880,
            "TokenID": "2",
            "Context": "zis . close ( ) ;"
        },
        {
            "Word": "flush",
            "WordID": "1",
            "SentID": 881,
            "TokenID": "2",
            "Context": "bos . flush ( ) ;"
        },
        {
            "Word": "close",
            "WordID": "2",
            "SentID": 882,
            "TokenID": "2",
            "Context": "bos . close ( ) ;"
        },
        {
            "Word": "setState",
            "WordID": "1",
            "SentID": 1074,
            "TokenID": "2",
            "Context": "previousMappedForm . setState ( Form . State . OPEN ) ;"
        },
        {
            "Word": "setState",
            "WordID": "2",
            "SentID": 1076,
            "TokenID": "2",
            "Context": "previousMappedForm . setState ( Form . State . LOCKED ) ;"
        },
        {
            "Word": "split",
            "WordID": "5",
            "SentID": 1095,
            "TokenID": "7",
            "Context": "String [ ] listOfRoles = roleListingParam . split ( UtilGlobal . REG_EX_COMMA ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "1",
            "SentID": 1176,
            "TokenID": "5",
            "Context": "Object getWordObj = CacheUtil . invoke ( methodGetWord , objWithKeyParam ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "2",
            "SentID": 1186,
            "TokenID": "2",
            "Context": "CacheUtil . invoke ( methodAvailableChoices , objWithKeyParam ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "3",
            "SentID": 1192,
            "TokenID": "0",
            "Context": "invoke ( methodSelectedChoices , objWithKeyParam ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "4",
            "SentID": 1196,
            "TokenID": "4",
            "Context": "getValueObj = CacheUtil . invoke ( methodGetValue , objWithKeyParam ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "6",
            "SentID": 1209,
            "TokenID": "3",
            "Context": "return methodParam . invoke ( objParam ) ;"
        },
        {
            "Word": "shutdown",
            "WordID": "1",
            "SentID": 1228,
            "TokenID": "4",
            "Context": "this . memcachedClient . shutdown ( ) ;"
        },
        {
            "Word": "closeAndClean",
            "WordID": "1",
            "SentID": 1492,
            "TokenID": "3",
            "Context": "} public void closeAndClean ( ) {"
        },
        {
            "Word": "closeAndClean",
            "WordID": "2",
            "SentID": 1494,
            "TokenID": "4",
            "Context": "this . sqlUtilClient . closeAndClean ( ) ;"
        },
        {
            "Word": "closeAndClean",
            "WordID": "3",
            "SentID": 1496,
            "TokenID": "4",
            "Context": "this . getAncestorClient . closeAndClean ( ) ;"
        },
        {
            "Word": "closeAndClean",
            "WordID": "4",
            "SentID": 1497,
            "TokenID": "4",
            "Context": "this . getDescendantsClient . closeAndClean ( ) ;"
        },
        {
            "Word": "closeAndClean",
            "WordID": "5",
            "SentID": 1498,
            "TokenID": "4",
            "Context": "this . getTableFormsClient . closeAndClean ( ) ;"
        },
        {
            "Word": "closeAndClean",
            "WordID": "6",
            "SentID": 1499,
            "TokenID": "4",
            "Context": "this . getFormFieldsClient . closeAndClean ( ) ;"
        },
        {
            "Word": "parse",
            "WordID": "1",
            "SentID": 1529,
            "TokenID": "4",
            "Context": "validDate = format . parse ( ( String ) objectAtIndex ) ;"
        },
        {
            "Word": "login",
            "WordID": "2",
            "SentID": 1595,
            "TokenID": "3",
            "Context": "return this . login ( usernameParam , passwordParam , TimeUnit . HOURS . toSeconds ( 9 ) ) ;"
        },
        {
            "Word": "MAIL_MESSAGES_TO_SEND",
            "WordID": "1",
            "SentID": 1690,
            "TokenID": "6",
            "Context": "returnVal . put ( JSONMapping . MAIL_MESSAGES_TO_SEND , jsonArray ) ;"
        },
        {
            "Word": "ENCODING_UTF_8",
            "WordID": "1",
            "SentID": 1927,
            "TokenID": "7",
            "Context": "Charset charset = Charset . forName ( ENCODING_UTF_8 ) ;"
        },
        {
            "Word": "exec",
            "WordID": "1",
            "SentID": 1930,
            "TokenID": "8",
            "Context": "process = Runtime . getRuntime ( ) . exec ( commandParams [ 0 ] ) ;"
        },
        {
            "Word": "exec",
            "WordID": "2",
            "SentID": 1931,
            "TokenID": "8",
            "Context": "process = Runtime . getRuntime ( ) . exec ( commandParams ) ;"
        },
        {
            "Word": "keys",
            "WordID": "1",
            "SentID": 2174,
            "TokenID": "8",
            "Context": "Iterator < String > iterKeys = convertedFieldObj . keys ( ) ;"
        },
        {
            "Word": "getDecoder",
            "WordID": "2",
            "SentID": 2251,
            "TokenID": "7",
            "Context": "byte [ ] base64Bytes = Base64 . getDecoder ( ) . decode ( serviceTicket ) ;"
        },
        {
            "Word": "decode",
            "WordID": "2",
            "SentID": 2251,
            "TokenID": "11",
            "Context": "byte [ ] base64Bytes = Base64 . getDecoder ( ) . decode ( serviceTicket ) ;"
        },
        {
            "Word": "keys",
            "WordID": "2",
            "SentID": 2400,
            "TokenID": "11",
            "Context": "for ( ObjectCursor mappingKey : getExistingIndex . getMappings ( ) . keys ( ) ) {"
        },
        {
            "Word": "source",
            "WordID": "5",
            "SentID": 2408,
            "TokenID": "7",
            "Context": "existingPropsToUpdate = new JSONObject ( mappingMetaData . source ( ) . string ( ) ) ;"
        },
        {
            "Word": "admin",
            "WordID": "2",
            "SentID": 2417,
            "TokenID": "4",
            "Context": "this . client . admin ( ) . indices ( ) . preparePutMapping ( indexParam ) ;"
        },
        {
            "Word": "indices",
            "WordID": "1",
            "SentID": 2417,
            "TokenID": "8",
            "Context": "this . client . admin ( ) . indices ( ) . preparePutMapping ( indexParam ) ;"
        },
        {
            "Word": "admin",
            "WordID": "3",
            "SentID": 2446,
            "TokenID": "5",
            "Context": "return this . client . admin ( ) . indices ( ) . prepareGetIndex ( ) . get ( ) ;"
        },
        {
            "Word": "indices",
            "WordID": "2",
            "SentID": 2446,
            "TokenID": "9",
            "Context": "return this . client . admin ( ) . indices ( ) . prepareGetIndex ( ) . get ( ) ;"
        },
        {
            "Word": "admin",
            "WordID": "4",
            "SentID": 2448,
            "TokenID": "4",
            "Context": "this . client . admin ( ) . indices ( ) . prepareCreate ( indexParam ) ;"
        },
        {
            "Word": "indices",
            "WordID": "3",
            "SentID": 2448,
            "TokenID": "8",
            "Context": "this . client . admin ( ) . indices ( ) . prepareCreate ( indexParam ) ;"
        },
        {
            "Word": "execute",
            "WordID": "3",
            "SentID": 2450,
            "TokenID": "2",
            "Context": "createIndexRequestBuilder . execute ( ) . actionGet ( ) ;"
        },
        {
            "Word": "clear",
            "WordID": "1",
            "SentID": 2568,
            "TokenID": "2",
            "Context": "LOCAL_MAPPING . clear ( ) ;"
        },
        {
            "Word": "init",
            "WordID": "1",
            "SentID": 2660,
            "TokenID": "2",
            "Context": "hmac . init ( new SecretKeySpec ( hMacKeyParam , HMAC_ALGO ) ) ;"
        },
        {
            "Word": "doFinal",
            "WordID": "1",
            "SentID": 2661,
            "TokenID": "3",
            "Context": "return hmac . doFinal ( encryptedDataParam ) ;"
        },
        {
            "Word": "init",
            "WordID": "2",
            "SentID": 2692,
            "TokenID": "2",
            "Context": "cipher . init ( Cipher . DECRYPT_MODE , key , new IvParameterSpec ( ivParam ) ) ;"
        },
        {
            "Word": "doFinal",
            "WordID": "2",
            "SentID": 2693,
            "TokenID": "3",
            "Context": "return cipher . doFinal ( dataToDecryptParam ) ;"
        },
        {
            "Word": "init",
            "WordID": "3",
            "SentID": 2702,
            "TokenID": "2",
            "Context": "cipher . init ( Cipher . ENCRYPT_MODE , key , new IvParameterSpec ( ivParam ) ) ;"
        },
        {
            "Word": "doFinal",
            "WordID": "3",
            "SentID": 2703,
            "TokenID": "3",
            "Context": "return cipher . doFinal ( dataToEncryptParam ) ;"
        },
        {
            "Word": "digest",
            "WordID": "3",
            "SentID": 2707,
            "TokenID": "3",
            "Context": "return digest . digest ( dataParam ) ;"
        },
        {
            "Word": "closeAndClean",
            "WordID": "7",
            "SentID": 2719,
            "TokenID": "2",
            "Context": "public void closeAndClean ( )"
        },
        {
            "Word": "create",
            "WordID": "1",
            "SentID": 2726,
            "TokenID": "5",
            "Context": "URI uri = URI . create ( webServiceURLParam ) ;"
        },
        {
            "Word": "execute",
            "WordID": "4",
            "SentID": 2838,
            "TokenID": "5",
            "Context": "Object returnedObj = httpClientParam . execute ( httpUriRequestParam , responseHandlerParam ) ;"
        },
        {
            "Word": "build",
            "WordID": "1",
            "SentID": 2941,
            "TokenID": "4",
            "Context": "uriRequest = builder . build ( ) ;"
        },
        {
            "Word": "split",
            "WordID": "6",
            "SentID": 2964,
            "TokenID": "7",
            "Context": "String [ ] nameValuePairs = formDataToAddParam . split ( REGEX_AMP ) ;"
        },
        {
            "Word": "split",
            "WordID": "7",
            "SentID": 2967,
            "TokenID": "7",
            "Context": "String [ ] nameValuePairArr = nameValuePair . split ( REGEX_EQUALS ) ;"
        },
        {
            "Word": "encode",
            "WordID": "1",
            "SentID": 2991,
            "TokenID": "3",
            "Context": "return URLEncoder . encode ( textParam , ENCODING_UTF_8 ) ;"
        },
        {
            "Word": "ENCODING_UTF_8",
            "WordID": "2",
            "SentID": 2991,
            "TokenID": "7",
            "Context": "return URLEncoder . encode ( textParam , ENCODING_UTF_8 ) ;"
        },
        {
            "Word": "build",
            "WordID": "2",
            "SentID": 3016,
            "TokenID": "5",
            "Context": "SSLContext sslContext = builder . build ( ) ;"
        },
        {
            "Word": "custom",
            "WordID": "1",
            "SentID": 3017,
            "TokenID": "6",
            "Context": "this . closeableHttpClient = HttpClients . custom ( ) . setSSLSocketFactory ("
        },
        {
            "Word": "build",
            "WordID": "3",
            "SentID": 3018,
            "TokenID": "7",
            "Context": "new SSLConnectionSocketFactory ( sslContext ) ) . build ( ) ;"
        },
        {
            "Word": "createDefault",
            "WordID": "1",
            "SentID": 3025,
            "TokenID": "6",
            "Context": "this . closeableHttpClient = HttpClients . createDefault ( ) ;"
        },
        {
            "Word": "close",
            "WordID": "3",
            "SentID": 3034,
            "TokenID": "4",
            "Context": "this . closeableHttpClient . close ( ) ;"
        },
        {
            "Word": "close",
            "WordID": "4",
            "SentID": 3041,
            "TokenID": "4",
            "Context": "this . connection . close ( ) ;"
        },
        {
            "Word": "close",
            "WordID": "5",
            "SentID": 3052,
            "TokenID": "2",
            "Context": "resultSetParam . close ( ) ;"
        },
        {
            "Word": "close",
            "WordID": "6",
            "SentID": 3055,
            "TokenID": "2",
            "Context": "preparedStatementParam . close ( ) ;"
        },
        {
            "Word": "values",
            "WordID": "1",
            "SentID": 3090,
            "TokenID": "4",
            "Context": "this . messageHandlers . values ( ) . forEach ( handle -> {"
        },
        {
            "Word": "values",
            "WordID": "2",
            "SentID": 3095,
            "TokenID": "14",
            "Context": "for ( IMessageResponseHandler handler : new ArrayList < > ( this . messageHandlers . values ( ) ) ) {"
        },
        {
            "Word": "close",
            "WordID": "7",
            "SentID": 3111,
            "TokenID": "4",
            "Context": "this . userSession . close ( ) ;"
        },
        {
            "Word": "stream",
            "WordID": "1",
            "SentID": 3355,
            "TokenID": "2",
            "Context": "attributeGroups . stream ( )"
        },
        {
            "Word": "remove",
            "WordID": "2",
            "SentID": 3358,
            "TokenID": "2",
            "Context": "attributeGroups . remove ( referenceBase ) ;"
        },
        {
            "Word": "stream",
            "WordID": "2",
            "SentID": 3363,
            "TokenID": "2",
            "Context": "attributes . stream ( )"
        },
        {
            "Word": "remove",
            "WordID": "3",
            "SentID": 3365,
            "TokenID": "2",
            "Context": "attributes . remove ( referenceBase ) ;"
        },
        {
            "Word": "parse",
            "WordID": "2",
            "SentID": 3377,
            "TokenID": "2",
            "Context": "XsdSchema . parse ( this , schemaNode ) ;"
        },
        {
            "Word": "getResource",
            "WordID": "1",
            "SentID": 3382,
            "TokenID": "5",
            "Context": "URL url = originalCl . getResource ( jarPath ) ;"
        },
        {
            "Word": "stream",
            "WordID": "3",
            "SentID": 3395,
            "TokenID": "2",
            "Context": "parseElements . stream ( )"
        },
        {
            "Word": "collect",
            "WordID": "1",
            "SentID": 3398,
            "TokenID": "1",
            "Context": ". collect ( groupingBy ( NamedConcreteElement :: getName ) ) ;"
        },
        {
            "Word": "clone",
            "WordID": "1",
            "SentID": 3407,
            "TokenID": "9",
            "Context": "XsdNamedElements substitutionElement = concreteElement . getElement ( ) . clone ( oldElementAttributes ) ;"
        },
        {
            "Word": "stream",
            "WordID": "4",
            "SentID": 3416,
            "TokenID": "2",
            "Context": "parserUnsolvedElementsMap . stream ( )"
        },
        {
            "Word": "addFileToParse",
            "WordID": "1",
            "SentID": 3423,
            "TokenID": "3",
            "Context": "} public void addFileToParse ( String schemaLocation ) {"
        },
        {
            "Word": "getOrDefault",
            "WordID": "1",
            "SentID": 3443,
            "TokenID": "5",
            "Context": "XsdRestriction existingRestriction = restrictions . getOrDefault ( xsdBuiltinTypes . get ( unionMemberRestriction . getBase ( ) ) , null ) ;"
        },
        {
            "Word": "values",
            "WordID": "3",
            "SentID": 3448,
            "TokenID": "8",
            "Context": "return new ArrayList < > ( restrictions . values ( ) ) ;"
        },
        {
            "Word": "stream",
            "WordID": "5",
            "SentID": 3491,
            "TokenID": "4",
            "Context": "if ( existingEnumeration . stream ( ) . noneMatch ( existingEnumerationElem -> existingEnumerationElem . getValue ( ) . equals ( enumerationElem . getValue ( ) ) ) ) {"
        },
        {
            "Word": "parse",
            "WordID": "3",
            "SentID": 3514,
            "TokenID": "13",
            "Context": "Document doc = DocumentBuilderFactory . newInstance ( ) . newDocumentBuilder ( ) . parse ( filePath ) ;"
        },
        {
            "Word": "apply",
            "WordID": "1",
            "SentID": 3538,
            "TokenID": "5",
            "Context": "XsdAbstractElement childElement = parserFunction . apply ( parser , child ) . getElement ( ) ;"
        },
        {
            "Word": "stream",
            "WordID": "6",
            "SentID": 3553,
            "TokenID": "2",
            "Context": "elements . stream ( )"
        },
        {
            "Word": "stream",
            "WordID": "7",
            "SentID": 3567,
            "TokenID": "8",
            "Context": "Optional < T > enumValue = Arrays . stream ( instance . getValues ( ) ) . filter ( enumField -> enumField . getValue ( ) . equals ( value ) ) . findFirst ( ) ;"
        },
        {
            "Word": "filter",
            "WordID": "7",
            "SentID": 3567,
            "TokenID": "17",
            "Context": "Optional < T > enumValue = Arrays . stream ( instance . getValues ( ) ) . filter ( enumField -> enumField . getValue ( ) . equals ( value ) ) . findFirst ( ) ;"
        },
        {
            "Word": "excludes",
            "WordID": "1",
            "SentID": 3644,
            "TokenID": "17",
            "Context": ". objects ( annotation . type ( ) , annotation . size ( ) , annotation . excludes ( ) )"
        },
        {
            "Word": "excludes",
            "WordID": "2",
            "SentID": 3647,
            "TokenID": "19",
            "Context": "return random . objects ( annotation . type ( ) , annotation . size ( ) , annotation . excludes ( ) ) ;"
        },
        {
            "Word": "excludes",
            "WordID": "3",
            "SentID": 3648,
            "TokenID": "9",
            "Context": "return random . nextObject ( targetType , annotation . excludes ( ) ) ;"
        },
        {
            "Word": "createDirectory",
            "WordID": "2",
            "SentID": 3654,
            "TokenID": "3",
            "Context": "return Files . createDirectory ( path ) . toFile ( ) ;"
        },
        {
            "Word": "namespace",
            "WordID": "1",
            "SentID": 3684,
            "TokenID": "5",
            "Context": "return extensionContext . getStore ( namespace ( extensionContext , clazz ) ) ;"
        },
        {
            "Word": "create",
            "WordID": "2",
            "SentID": 3687,
            "TokenID": "5",
            "Context": "return ExtensionContext . Namespace . create ( clazz , extensionContext ) ;"
        },
        {
            "Word": "build",
            "WordID": "4",
            "SentID": 3699,
            "TokenID": "6",
            "Context": "writeRestoreContext ( extensionContext , builder . build ( ) ) ;"
        },
        {
            "Word": "restore",
            "WordID": "1",
            "SentID": 3703,
            "TokenID": "2",
            "Context": "restoreContext . restore ( ) ;"
        },
        {
            "Word": "load",
            "WordID": "1",
            "SentID": 3782,
            "TokenID": "2",
            "Context": "Dictionary . load ( fis , fl ) ;"
        },
        {
            "Word": "close",
            "WordID": "8",
            "SentID": 3787,
            "TokenID": "2",
            "Context": "wr . close ( ) ;"
        },
        {
            "Word": "load",
            "WordID": "2",
            "SentID": 3791,
            "TokenID": "2",
            "Context": "analyzers . load ( new FileInputStream ( new File ( \"analyzer.properties\" ) ) ) ;"
        },
        {
            "Word": "clear",
            "WordID": "2",
            "SentID": 3832,
            "TokenID": "2",
            "Context": "wordsLastTime . clear ( ) ;"
        },
        {
            "Word": "getResource",
            "WordID": "2",
            "SentID": 3851,
            "TokenID": "11",
            "Context": "URL url = Dictionary . class . getClassLoader ( ) . getResource ( \"data\" ) ;"
        },
        {
            "Word": "transform",
            "WordID": "1",
            "SentID": 3860,
            "TokenID": "5",
            "Context": "int d = readChar . transform ( data ) ;"
        },
        {
            "Word": "pow",
            "WordID": "1",
            "SentID": 3902,
            "TokenID": "4",
            "Context": "sum += Math . pow ( word . getLength ( ) - getAvgLen ( ) , 2 ) ;"
        },
        {
            "Word": "transform",
            "WordID": "2",
            "SentID": 3934,
            "TokenID": "2",
            "Context": "dt . transform ( file , charset , dist , new NoAttr ( ) ) ;"
        },
        {
            "Word": "connectJdbcOnWithUrlAndDriverAndUsernameAndPassword",
            "WordID": "1",
            "SentID": 3935,
            "TokenID": "2",
            "Context": "public boolean connectJdbcOnWithUrlAndDriverAndUsernameAndPassword ( String dataBaseId , String url , String driverClassName , String username , String password ) throws ReflectiveOperationException {"
        },
        {
            "Word": "username",
            "WordID": "1",
            "SentID": 3935,
            "TokenID": "14",
            "Context": "public boolean connectJdbcOnWithUrlAndDriverAndUsernameAndPassword ( String dataBaseId , String url , String driverClassName , String username , String password ) throws ReflectiveOperationException {"
        },
        {
            "Word": "password",
            "WordID": "6",
            "SentID": 3935,
            "TokenID": "17",
            "Context": "public boolean connectJdbcOnWithUrlAndDriverAndUsernameAndPassword ( String dataBaseId , String url , String driverClassName , String username , String password ) throws ReflectiveOperationException {"
        },
        {
            "Word": "init",
            "WordID": "5",
            "SentID": 3985,
            "TokenID": "2",
            "Context": "super . init ( config ) ;"
        },
        {
            "Word": "read",
            "WordID": "3",
            "SentID": 3999,
            "TokenID": "7",
            "Context": "Object [ ] arguments = argumentsReader . read ( httpRequest , formalParameters ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "7",
            "SentID": 4001,
            "TokenID": "4",
            "Context": "value = method . invoke ( instance , arguments ) ;"
        },
        {
            "Word": "clean",
            "WordID": "1",
            "SentID": 4009,
            "TokenID": "2",
            "Context": "argumentsReader . clean ( ) ;"
        },
        {
            "Word": "notNull",
            "WordID": "1",
            "SentID": 4027,
            "TokenID": "2",
            "Context": "Params . notNull ( file , \"File\" ) ;"
        },
        {
            "Word": "config",
            "WordID": "5",
            "SentID": 4055,
            "TokenID": "2",
            "Context": "transactionManager . config ( config ) ;"
        },
        {
            "Word": "split",
            "WordID": "8",
            "SentID": 4263,
            "TokenID": "8",
            "Context": "List < String > nodeIDs = Strings . split ( propertyPath , '.' ) ;"
        },
        {
            "Word": "remove",
            "WordID": "4",
            "SentID": 4285,
            "TokenID": "2",
            "Context": "dependenciesStack . remove ( ) ;"
        },
        {
            "Word": "pop",
            "WordID": "1",
            "SentID": 4296,
            "TokenID": "2",
            "Context": "stackTrace . pop ( ) ;"
        },
        {
            "Word": "test",
            "WordID": "1",
            "SentID": 4309,
            "TokenID": "9",
            "Context": "while ( endCondition == null || ! endCondition . test ( previousEntity ) ) {"
        },
        {
            "Word": "remove",
            "WordID": "5",
            "SentID": 4320,
            "TokenID": "2",
            "Context": "defaultLinks . remove ( rel ) ;"
        },
        {
            "Word": "stream",
            "WordID": "8",
            "SentID": 4322,
            "TokenID": "0",
            "Context": "stream ( hrefs ) . map ( uri :: resolve ) . collect ( toSet ( ) ) ) ;"
        },
        {
            "Word": "resolve",
            "WordID": "2",
            "SentID": 4322,
            "TokenID": "9",
            "Context": "stream ( hrefs ) . map ( uri :: resolve ) . collect ( toSet ( ) ) ) ;"
        },
        {
            "Word": "collect",
            "WordID": "2",
            "SentID": 4322,
            "TokenID": "12",
            "Context": "stream ( hrefs ) . map ( uri :: resolve ) . collect ( toSet ( ) ) ) ;"
        },
        {
            "Word": "remove",
            "WordID": "6",
            "SentID": 4325,
            "TokenID": "2",
            "Context": "defaultLinkTemplates . remove ( rel ) ;"
        },
        {
            "Word": "execute",
            "WordID": "5",
            "SentID": 4329,
            "TokenID": "3",
            "Context": "HttpResponse response = execute ( request ) ;"
        },
        {
            "Word": "execute",
            "WordID": "7",
            "SentID": 4333,
            "TokenID": "3",
            "Context": "return executor . execute ( request ) . returnResponse ( ) ;"
        },
        {
            "Word": "resolve",
            "WordID": "3",
            "SentID": 4383,
            "TokenID": "5",
            "Context": ". put ( uri . resolve ( header . getHref ( ) ) , header . getTitle ( ) ) ;"
        },
        {
            "Word": "resolve",
            "WordID": "4",
            "SentID": 4404,
            "TokenID": "2",
            "Context": "uri . resolve ( href . asText ( ) ) ,"
        },
        {
            "Word": "collect",
            "WordID": "3",
            "SentID": 4413,
            "TokenID": "1",
            "Context": ". collect ( toSet ( ) ) ) ;"
        },
        {
            "Word": "values",
            "WordID": "9",
            "SentID": 4481,
            "TokenID": "7",
            "Context": "for ( ManagedClassSPI managedClass : classesPool . values ( ) ) {"
        },
        {
            "Word": "destroy",
            "WordID": "2",
            "SentID": 4487,
            "TokenID": "2",
            "Context": "cronManager . destroy ( ) ;"
        },
        {
            "Word": "unproxy",
            "WordID": "1",
            "SentID": 4493,
            "TokenID": "8",
            "Context": "ManagedPreDestroy managedInstance = ( ManagedPreDestroy ) Classes . unproxy ( instance ) ;"
        },
        {
            "Word": "preDestroy",
            "WordID": "1",
            "SentID": 4494,
            "TokenID": "2",
            "Context": "managedInstance . preDestroy ( ) ;"
        },
        {
            "Word": "values",
            "WordID": "10",
            "SentID": 4495,
            "TokenID": "7",
            "Context": "for ( ScopeFactory scopeFactory : scopeFactories . values ( ) ) {"
        },
        {
            "Word": "clear",
            "WordID": "3",
            "SentID": 4497,
            "TokenID": "2",
            "Context": "scopeFactory . clear ( ) ;"
        },
        {
            "Word": "clear",
            "WordID": "4",
            "SentID": 4498,
            "TokenID": "2",
            "Context": "classesPool . clear ( ) ;"
        },
        {
            "Word": "clear",
            "WordID": "5",
            "SentID": 4499,
            "TokenID": "2",
            "Context": "instanceProcessors . clear ( ) ;"
        },
        {
            "Word": "clear",
            "WordID": "6",
            "SentID": 4500,
            "TokenID": "2",
            "Context": "scopeFactories . clear ( ) ;"
        },
        {
            "Word": "clear",
            "WordID": "7",
            "SentID": 4501,
            "TokenID": "2",
            "Context": "instanceFactories . clear ( ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "9",
            "SentID": 4566,
            "TokenID": "6",
            "Context": "return ( T ) method . invoke ( object , args ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "10",
            "SentID": 4569,
            "TokenID": "6",
            "Context": "return ( T ) invoker . invoke ( object , args ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "11",
            "SentID": 4573,
            "TokenID": "7",
            "Context": "returnValue = ( T ) invoker . invoke ( object , args ) ;"
        },
        {
            "Word": "close",
            "WordID": "9",
            "SentID": 4577,
            "TokenID": "2",
            "Context": "currentPart . close ( ) ;"
        },
        {
            "Word": "stream",
            "WordID": "11",
            "SentID": 4618,
            "TokenID": "6",
            "Context": "response . getElements ( ) . stream ( ) . forEach ( observer :: onNext ) ;"
        },
        {
            "Word": "read",
            "WordID": "6",
            "SentID": 4639,
            "TokenID": "7",
            "Context": "arguments [ argumentIndex ] = argumentPartReader . read ( inputStream , parameterType ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "13",
            "SentID": 4665,
            "TokenID": "3",
            "Context": "return method . invoke ( instance , args ) ;"
        },
        {
            "Word": "poll",
            "WordID": "1",
            "SentID": 4726,
            "TokenID": "4",
            "Context": "event = eventsQueue . poll ( keepAlivePeriod , TimeUnit . MILLISECONDS ) ;"
        },
        {
            "Word": "doFinal",
            "WordID": "4",
            "SentID": 4740,
            "TokenID": "7",
            "Context": "byte [ ] encryptedMessage = cipher . doFinal ( json . serialize ( event ) ) ;"
        },
        {
            "Word": "encode",
            "WordID": "2",
            "SentID": 4741,
            "TokenID": "4",
            "Context": "write ( Base64 . encode ( encryptedMessage ) ) ;"
        },
        {
            "Word": "bind",
            "WordID": "1",
            "SentID": 4753,
            "TokenID": "2",
            "Context": "Factory . bind ( container ) ;"
        },
        {
            "Word": "attach",
            "WordID": "2",
            "SentID": 4755,
            "TokenID": "2",
            "Context": "context . attach ( httpRequest , httpResponse ) ;"
        },
        {
            "Word": "clear",
            "WordID": "8",
            "SentID": 4759,
            "TokenID": "2",
            "Context": "logContext . clear ( ) ;"
        },
        {
            "Word": "detach",
            "WordID": "2",
            "SentID": 4760,
            "TokenID": "2",
            "Context": "context . detach ( ) ;"
        },
        {
            "Word": "dump",
            "WordID": "1",
            "SentID": 4782,
            "TokenID": "2",
            "Context": "context . dump ( ) ;"
        },
        {
            "Word": "flush",
            "WordID": "2",
            "SentID": 4804,
            "TokenID": "6",
            "Context": "httpResponse . getOutputStream ( ) . flush ( ) ;"
        },
        {
            "Word": "vaadin",
            "WordID": "1",
            "SentID": 4817,
            "TokenID": "13",
            "Context": "getUI ( ) . getErrorHandler ( ) . error ( new com . vaadin . server . ErrorEvent ( ex ) ) ;"
        },
        {
            "Word": "delete",
            "WordID": "7",
            "SentID": 4819,
            "TokenID": "2",
            "Context": "endpoint . delete ( ) ;"
        },
        {
            "Word": "post",
            "WordID": "2",
            "SentID": 4820,
            "TokenID": "2",
            "Context": "eventBus . post ( new ElementDeletedEvent < > ( endpoint ) ) ;"
        },
        {
            "Word": "collect",
            "WordID": "4",
            "SentID": 4836,
            "TokenID": "1",
            "Context": ". collect ( toList ( ) ) ;"
        },
        {
            "Word": "parse",
            "WordID": "4",
            "SentID": 4880,
            "TokenID": "2",
            "Context": "reader . parse ( new InputSource ( inputStream ) ) ;"
        },
        {
            "Word": "buildAndBind",
            "WordID": "1",
            "SentID": 4883,
            "TokenID": "3",
            "Context": "} protected Component buildAndBind ( Class < TEntity > entityType ) {"
        },
        {
            "Word": "buildAndBind",
            "WordID": "2",
            "SentID": 4887,
            "TokenID": "3",
            "Context": "Component component = buildAndBind ( property ) ;"
        },
        {
            "Word": "min",
            "WordID": "1",
            "SentID": 4923,
            "TokenID": "9",
            "Context": "int i = 0 , argumentsCount = Math . min ( formalParameters . length , parameters . size ( ) ) ;"
        },
        {
            "Word": "split",
            "WordID": "9",
            "SentID": 4935,
            "TokenID": "8",
            "Context": "List < String > strings = Strings . split ( value , ',' ) ;"
        },
        {
            "Word": "parse",
            "WordID": "6",
            "SentID": 4955,
            "TokenID": "3",
            "Context": "return json . parse ( reader , formalParameters ) ;"
        },
        {
            "Word": "parse",
            "WordID": "7",
            "SentID": 4957,
            "TokenID": "3",
            "Context": "return json . parse ( new InputStreamReader ( inputStream , \"UTF-8\" ) , type ) ;"
        },
        {
            "Word": "refresh",
            "WordID": "1",
            "SentID": 4993,
            "TokenID": "0",
            "Context": "refresh ( ) ;"
        },
        {
            "Labels": [
                "\"Java Code Operations and Data Manipulation Functions\""
            ],
            "Meaningful": "Yes",
            "Semantic": "Function Calls, Network",
            "Syntactic": "method",
            "Description": "miscellaneous methods relating to network",
            "Lexicographic": "",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "454": [
        {
            "Word": "actionGet",
            "WordID": "1",
            "SentID": 559,
            "TokenID": "9",
            "Context": "SearchResponse searchResponse = searchRequestBuilder . execute ( ) . actionGet ( ) ;"
        },
        {
            "Word": "actionGet",
            "WordID": "2",
            "SentID": 631,
            "TokenID": "1",
            "Context": ". actionGet ( ) . getState ( )"
        },
        {
            "Word": "get",
            "WordID": "5",
            "SentID": 1045,
            "TokenID": "5",
            "Context": "String formType = definitionAndTitleParam . get ("
        },
        {
            "Word": "get",
            "WordID": "7",
            "SentID": 1265,
            "TokenID": "11",
            "Context": "this . getHandler ( uniqueReqId ) . getCF ( ) . get ("
        },
        {
            "Word": "get",
            "WordID": "16",
            "SentID": 2237,
            "TokenID": "17",
            "Context": "List < FluidItem > returnValue = this . getHandler ( uniqueReqId ) . getCF ( ) . get ("
        },
        {
            "Word": "get",
            "WordID": "21",
            "SentID": 2421,
            "TokenID": "5",
            "Context": "PutMappingResponse putMappingResponse = putMappingRequestBuilder . get ( ) ;"
        },
        {
            "Word": "get",
            "WordID": "23",
            "SentID": 2446,
            "TokenID": "17",
            "Context": "return this . client . admin ( ) . indices ( ) . prepareGetIndex ( ) . get ( ) ;"
        },
        {
            "Word": "actionGet",
            "WordID": "3",
            "SentID": 2450,
            "TokenID": "6",
            "Context": "createIndexRequestBuilder . execute ( ) . actionGet ( ) ;"
        },
        {
            "Word": "get",
            "WordID": "26",
            "SentID": 3316,
            "TokenID": "17",
            "Context": "List < Form > returnValue = this . getHandler ( uniqueReqId ) . getCF ( ) . get ("
        },
        {
            "Word": "get",
            "WordID": "32",
            "SentID": 3569,
            "TokenID": "3",
            "Context": "return enumValue . get ( ) ;"
        },
        {
            "Word": "get",
            "WordID": "33",
            "SentID": 3650,
            "TokenID": "5",
            "Context": "Path path = Paths . get ( rootFolder . getPath ( ) , fileName ) ;"
        },
        {
            "Word": "get",
            "WordID": "34",
            "SentID": 3653,
            "TokenID": "5",
            "Context": "Path path = Paths . get ( rootFolder . getPath ( ) , directoryName ) ;"
        },
        {
            "Word": "get",
            "WordID": "47",
            "SentID": 4274,
            "TokenID": "11",
            "Context": "Stack < Class < ? > > stackTrace = dependenciesStack . get ( ) ;"
        },
        {
            "Word": "get",
            "WordID": "54",
            "SentID": 4474,
            "TokenID": "5",
            "Context": "ManagedClassSPI appContext = classesPool . get ( AppContext . class ) ;"
        },
        {
            "Word": "get",
            "WordID": "57",
            "SentID": 4503,
            "TokenID": "5",
            "Context": "ManagedClassSPI managedClass = classesPool . get ( interfaceClass ) ;"
        },
        {
            "Word": "get",
            "WordID": "64",
            "SentID": 4716,
            "TokenID": "5",
            "Context": "if ( ! active . get ( ) ) {"
        },
        {
            "Word": "get",
            "WordID": "66",
            "SentID": 4850,
            "TokenID": "5",
            "Context": "AppFactory appFactory = tls . get ( ) ;"
        },
        {
            "Labels": [
                "\"Data Retrieval Actions\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "get",
            "Semantic": "Function Calls",
            "Syntactic": "method",
            "Description": "methods with \"get\" in the name",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Lexicographic",
            "Q6_Answer": "None"
        }
    ],
    "398": [
        {
            "Word": "limitParam",
            "WordID": "9",
            "SentID": 568,
            "TokenID": "1",
            "Context": "int limitParam"
        },
        {
            "Word": "formToGetTableFormsForParam",
            "WordID": "1",
            "SentID": 661,
            "TokenID": "1",
            "Context": "Form formToGetTableFormsForParam ,"
        },
        {
            "Word": "formToGetTableFormsForParam",
            "WordID": "2",
            "SentID": 663,
            "TokenID": "2",
            "Context": "if ( formToGetTableFormsForParam != null && this . serviceTicket != null ) {"
        },
        {
            "Word": "formToGetTableFormsForParam",
            "WordID": "3",
            "SentID": 664,
            "TokenID": "0",
            "Context": "formToGetTableFormsForParam . setServiceTicket ( this . serviceTicket ) ;"
        },
        {
            "Word": "formToGetDescendantsForParam",
            "WordID": "1",
            "SentID": 673,
            "TokenID": "1",
            "Context": "Form formToGetDescendantsForParam ,"
        },
        {
            "Word": "formToGetDescendantsForParam",
            "WordID": "2",
            "SentID": 676,
            "TokenID": "2",
            "Context": "if ( formToGetDescendantsForParam != null && this . serviceTicket != null ) {"
        },
        {
            "Word": "formToGetDescendantsForParam",
            "WordID": "3",
            "SentID": 677,
            "TokenID": "0",
            "Context": "formToGetDescendantsForParam . setServiceTicket ( this . serviceTicket ) ;"
        },
        {
            "Word": "formToGetAncestorForParam",
            "WordID": "1",
            "SentID": 683,
            "TokenID": "1",
            "Context": "Form formToGetAncestorForParam ,"
        },
        {
            "Word": "formToGetAncestorForParam",
            "WordID": "2",
            "SentID": 685,
            "TokenID": "2",
            "Context": "if ( formToGetAncestorForParam != null && this . serviceTicket != null ) {"
        },
        {
            "Word": "formToGetAncestorForParam",
            "WordID": "3",
            "SentID": 686,
            "TokenID": "0",
            "Context": "formToGetAncestorForParam . setServiceTicket ( this . serviceTicket ) ;"
        },
        {
            "Word": "formToGetFieldsForParam",
            "WordID": "1",
            "SentID": 692,
            "TokenID": "1",
            "Context": "Form formToGetFieldsForParam ,"
        },
        {
            "Word": "formToGetFieldsForParam",
            "WordID": "2",
            "SentID": 693,
            "TokenID": "2",
            "Context": "if ( formToGetFieldsForParam != null && this . serviceTicket != null ) {"
        },
        {
            "Word": "formToGetFieldsForParam",
            "WordID": "3",
            "SentID": 694,
            "TokenID": "0",
            "Context": "formToGetFieldsForParam . setServiceTicket ( this . serviceTicket ) ;"
        },
        {
            "Word": "fieldToExtractFromParam",
            "WordID": "1",
            "SentID": 766,
            "TokenID": "1",
            "Context": "Field fieldToExtractFromParam ,"
        },
        {
            "Word": "fieldToExtractFromParam",
            "WordID": "2",
            "SentID": 768,
            "TokenID": "2",
            "Context": "if ( fieldToExtractFromParam == null )"
        },
        {
            "Word": "fieldToExtractFromParam",
            "WordID": "3",
            "SentID": 769,
            "TokenID": "3",
            "Context": "String fieldName = fieldToExtractFromParam . getFieldNameAsUpperCamel ( ) ;"
        },
        {
            "Word": "objectToSetFieldOnParam",
            "WordID": "2",
            "SentID": 773,
            "TokenID": "0",
            "Context": "objectToSetFieldOnParam . put ( completeFieldNameId ,"
        },
        {
            "Word": "fieldToExtractFromParam",
            "WordID": "4",
            "SentID": 774,
            "TokenID": "0",
            "Context": "fieldToExtractFromParam . getId ( ) ) ;"
        },
        {
            "Word": "fieldToExtractFromParam",
            "WordID": "5",
            "SentID": 775,
            "TokenID": "3",
            "Context": "Object fieldValue = fieldToExtractFromParam . getFieldValue ( ) ;"
        },
        {
            "Word": "objectToSetFieldOnParam",
            "WordID": "3",
            "SentID": 776,
            "TokenID": "0",
            "Context": "objectToSetFieldOnParam . put ("
        },
        {
            "Word": "objectToSetFieldOnParam",
            "WordID": "4",
            "SentID": 789,
            "TokenID": "0",
            "Context": "objectToSetFieldOnParam . put ( completeFieldName , selectVal ) ;"
        },
        {
            "Word": "fieldToExtractFromParam",
            "WordID": "6",
            "SentID": 792,
            "TokenID": "0",
            "Context": "fieldToExtractFromParam . getTypeMetaData ( ) ) )"
        },
        {
            "Word": "objectToSetFieldOnParam",
            "WordID": "5",
            "SentID": 796,
            "TokenID": "0",
            "Context": "objectToSetFieldOnParam . put ( completeFieldName , fieldValue ) ;"
        },
        {
            "Word": "objectToSetFieldOnParam",
            "WordID": "6",
            "SentID": 797,
            "TokenID": "0",
            "Context": "objectToSetFieldOnParam . put ( completeFieldName , ( ( Date ) fieldValue ) . getTime ( ) ) ;"
        },
        {
            "Word": "formContainerTableRecordBelowsToParam",
            "WordID": "1",
            "SentID": 932,
            "TokenID": "1",
            "Context": "Long formContainerTableRecordBelowsToParam ,"
        },
        {
            "Word": "formContainerTableRecordBelowsToParam",
            "WordID": "2",
            "SentID": 936,
            "TokenID": "0",
            "Context": "formContainerTableRecordBelowsToParam ) ) ) ;"
        },
        {
            "Word": "includeCurrentParam",
            "WordID": "1",
            "SentID": 948,
            "TokenID": "1",
            "Context": "boolean includeCurrentParam"
        },
        {
            "Word": "userToLockAsParam",
            "WordID": "1",
            "SentID": 965,
            "TokenID": "1",
            "Context": "User userToLockAsParam"
        },
        {
            "Word": "userToUnLockAsParam",
            "WordID": "3",
            "SentID": 980,
            "TokenID": "1",
            "Context": "User userToUnLockAsParam ,"
        },
        {
            "Word": "userToUnLockAsParam",
            "WordID": "4",
            "SentID": 981,
            "TokenID": "0",
            "Context": "userToUnLockAsParam ,"
        },
        {
            "Word": "includeFieldDataParam",
            "WordID": "6",
            "SentID": 992,
            "TokenID": "1",
            "Context": "boolean includeFieldDataParam"
        },
        {
            "Word": "includeTableFieldsParam",
            "WordID": "5",
            "SentID": 1029,
            "TokenID": "1",
            "Context": "boolean includeTableFieldsParam"
        },
        {
            "Word": "formToGetDescendantsForParam",
            "WordID": "6",
            "SentID": 1247,
            "TokenID": "2",
            "Context": "if ( formToGetDescendantsForParam == null ||"
        },
        {
            "Word": "formToGetDescendantsForParam",
            "WordID": "7",
            "SentID": 1248,
            "TokenID": "0",
            "Context": "formToGetDescendantsForParam . length == 0 ) {"
        },
        {
            "Word": "formToGetDescendantsForParam",
            "WordID": "8",
            "SentID": 1254,
            "TokenID": "5",
            "Context": "for ( Form formToSend : formToGetDescendantsForParam ) {"
        },
        {
            "Word": "propertyKeyParam",
            "WordID": "1",
            "SentID": 1286,
            "TokenID": "1",
            "Context": "String propertyKeyParam"
        },
        {
            "Word": "formToGetAncestorForParam",
            "WordID": "5",
            "SentID": 1397,
            "TokenID": "4",
            "Context": "Form formToUse = ( formToGetAncestorForParam == null ) ? null :"
        },
        {
            "Word": "formToGetAncestorForParam",
            "WordID": "6",
            "SentID": 1398,
            "TokenID": "3",
            "Context": "new Form ( formToGetAncestorForParam . getId ( ) ) ;"
        },
        {
            "Word": "formsToGetDescForParam",
            "WordID": "4",
            "SentID": 1414,
            "TokenID": "3",
            "Context": "new Form [ formsToGetDescForParam . length ] ;"
        },
        {
            "Word": "formsToGetTableFormsForParam",
            "WordID": "1",
            "SentID": 1430,
            "TokenID": "2",
            "Context": "Form ... formsToGetTableFormsForParam"
        },
        {
            "Word": "formsToGetTableFormsForParam",
            "WordID": "4",
            "SentID": 1434,
            "TokenID": "3",
            "Context": "new Form [ formsToGetTableFormsForParam . length ] ;"
        },
        {
            "Word": "formsToGetFieldsForParam",
            "WordID": "1",
            "SentID": 1441,
            "TokenID": "2",
            "Context": "Form ... formsToGetFieldsForParam"
        },
        {
            "Word": "formsToGetFieldsForParam",
            "WordID": "2",
            "SentID": 1444,
            "TokenID": "2",
            "Context": "if ( formsToGetFieldsForParam == null ||"
        },
        {
            "Word": "formsToGetFieldsForParam",
            "WordID": "3",
            "SentID": 1445,
            "TokenID": "0",
            "Context": "formsToGetFieldsForParam . length < 1 ) {"
        },
        {
            "Word": "formsToGetFieldsForParam",
            "WordID": "4",
            "SentID": 1446,
            "TokenID": "3",
            "Context": "new Form [ formsToGetFieldsForParam . length ] ;"
        },
        {
            "Word": "formsToPopulateFormFieldsForParam",
            "WordID": "1",
            "SentID": 1457,
            "TokenID": "2",
            "Context": "Form ... formsToPopulateFormFieldsForParam"
        },
        {
            "Word": "formsToPopulateFormFieldsForParam",
            "WordID": "2",
            "SentID": 1458,
            "TokenID": "2",
            "Context": "if ( formsToPopulateFormFieldsForParam == null ||"
        },
        {
            "Word": "formsToPopulateFormFieldsForParam",
            "WordID": "3",
            "SentID": 1459,
            "TokenID": "0",
            "Context": "formsToPopulateFormFieldsForParam . length < 1 ) {"
        },
        {
            "Word": "formsToPopulateFormFieldsForParam",
            "WordID": "4",
            "SentID": 1461,
            "TokenID": "3",
            "Context": "new Form [ formsToPopulateFormFieldsForParam . length ] ;"
        },
        {
            "Word": "formsToPopulateFormFieldsForParam",
            "WordID": "6",
            "SentID": 1471,
            "TokenID": "5",
            "Context": "for ( Form formToSetFieldsOn : formsToPopulateFormFieldsForParam ) {"
        },
        {
            "Word": "userQueryToDeleteParam",
            "WordID": "1",
            "SentID": 1731,
            "TokenID": "1",
            "Context": "UserQuery userQueryToDeleteParam"
        },
        {
            "Word": "offsetParam",
            "WordID": "5",
            "SentID": 1748,
            "TokenID": "1",
            "Context": "int offsetParam"
        },
        {
            "Word": "forceUseDatabaseParam",
            "WordID": "1",
            "SentID": 1753,
            "TokenID": "1",
            "Context": "boolean forceUseDatabaseParam"
        },
        {
            "Word": "forceUseDatabaseParam",
            "WordID": "2",
            "SentID": 1757,
            "TokenID": "0",
            "Context": "forceUseDatabaseParam ,"
        },
        {
            "Word": "formDefinitionIdParam",
            "WordID": "3",
            "SentID": 1770,
            "TokenID": "1",
            "Context": "Long formDefinitionIdParam"
        },
        {
            "Word": "includeTableFieldFormRecordInfoParam",
            "WordID": "5",
            "SentID": 1783,
            "TokenID": "1",
            "Context": "boolean includeTableFieldFormRecordInfoParam"
        },
        {
            "Word": "fluidFormMappingToUpdateParam",
            "WordID": "1",
            "SentID": 2389,
            "TokenID": "1",
            "Context": "Form fluidFormMappingToUpdateParam"
        },
        {
            "Word": "newContentMappingBuilderFromParam",
            "WordID": "1",
            "SentID": 2396,
            "TokenID": "1",
            "Context": "JSONObject newContentMappingBuilderFromParam ="
        },
        {
            "Word": "newContentMappingBuilderFromParam",
            "WordID": "3",
            "SentID": 2427,
            "TokenID": "0",
            "Context": "newContentMappingBuilderFromParam . put ( existingKey ,"
        },
        {
            "Word": "newContentMappingBuilderFromParam",
            "WordID": "4",
            "SentID": 2430,
            "TokenID": "5",
            "Context": "for ( String possibleExistingKey : newContentMappingBuilderFromParam . keySet ( ) ) {"
        },
        {
            "Word": "parentTypeParam",
            "WordID": "4",
            "SentID": 2438,
            "TokenID": "1",
            "Context": "String parentTypeParam"
        },
        {
            "Word": "toDateParam",
            "WordID": "1",
            "SentID": 2637,
            "TokenID": "1",
            "Context": "Date toDateParam"
        },
        {
            "Word": "toDateParam",
            "WordID": "2",
            "SentID": 2641,
            "TokenID": "0",
            "Context": "toDateParam"
        },
        {
            "Word": "baseToSetEchoOnIfNotSetParam",
            "WordID": "5",
            "SentID": 2745,
            "TokenID": "0",
            "Context": "baseToSetEchoOnIfNotSetParam . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "numberOfSentItemsParam",
            "WordID": "1",
            "SentID": 2749,
            "TokenID": "1",
            "Context": "int numberOfSentItemsParam"
        },
        {
            "Word": "postfixUrlParam",
            "WordID": "1",
            "SentID": 2837,
            "TokenID": "1",
            "Context": "String postfixUrlParam"
        },
        {
            "Word": "formDataToAddParam",
            "WordID": "1",
            "SentID": 2963,
            "TokenID": "1",
            "Context": "String formDataToAddParam"
        },
        {
            "Word": "sortOrderParam",
            "WordID": "2",
            "SentID": 3075,
            "TokenID": "0",
            "Context": "sortOrderParam"
        },
        {
            "Word": "allowCollaboratorToSendOnParam",
            "WordID": "1",
            "SentID": 3078,
            "TokenID": "1",
            "Context": "boolean allowCollaboratorToSendOnParam"
        },
        {
            "Word": "formsToGetFieldListingForForParam",
            "WordID": "1",
            "SentID": 3118,
            "TokenID": "2",
            "Context": "Form ... formsToGetFieldListingForForParam"
        },
        {
            "Word": "formsToGetFieldListingForForParam",
            "WordID": "2",
            "SentID": 3119,
            "TokenID": "2",
            "Context": "if ( formsToGetFieldListingForForParam == null ) {"
        },
        {
            "Word": "formsToGetFieldListingForForParam",
            "WordID": "3",
            "SentID": 3120,
            "TokenID": "2",
            "Context": "if ( formsToGetFieldListingForForParam . length == 0 ) {"
        },
        {
            "Word": "formsToGetFieldListingForForParam",
            "WordID": "4",
            "SentID": 3121,
            "TokenID": "5",
            "Context": "for ( Form formToSend : formsToGetFieldListingForForParam ) {"
        },
        {
            "Word": "formToCreateParam",
            "WordID": "5",
            "SentID": 3314,
            "TokenID": "0",
            "Context": "formToCreateParam . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Labels": [
                "\"Java Code Parameters for Form and User Management Operations\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Param",
            "Semantic": "Parameters, Form Management",
            "Syntactic": "variables",
            "Description": "varaibles with \"param\" in the name, many used for form management",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Lexicographic",
            "Q6_Answer": "None"
        }
    ],
    "198": [
        {
            "Word": "byIdQuery",
            "WordID": "1",
            "SentID": 571,
            "TokenID": "1",
            "Context": "StringBuffer byIdQuery = new StringBuffer ( ) ;"
        },
        {
            "Word": "byIdQuery",
            "WordID": "2",
            "SentID": 573,
            "TokenID": "0",
            "Context": "byIdQuery . append ( ABaseFluidJSONObject . JSONMapping . ID ) ;"
        },
        {
            "Word": "byIdQuery",
            "WordID": "3",
            "SentID": 574,
            "TokenID": "0",
            "Context": "byIdQuery . append ( \":\\\"\" ) ;"
        },
        {
            "Word": "byIdQuery",
            "WordID": "4",
            "SentID": 575,
            "TokenID": "0",
            "Context": "byIdQuery . append ( formId ) ;"
        },
        {
            "Word": "byIdQuery",
            "WordID": "5",
            "SentID": 576,
            "TokenID": "3",
            "Context": "String queryByIdsToString = byIdQuery . toString ( ) ;"
        },
        {
            "Word": "queryStringQuery",
            "WordID": "1",
            "SentID": 581,
            "TokenID": "2",
            "Context": "QueryBuilders . queryStringQuery ( queryByIdsToString ) ,"
        },
        {
            "Word": "getExecutePerFluidItemQuery",
            "WordID": "1",
            "SentID": 1668,
            "TokenID": "4",
            "Context": "if ( this . getExecutePerFluidItemQuery ( ) != null )"
        },
        {
            "Word": "EXECUTE_PER_FLUID_ITEM_QUERY",
            "WordID": "1",
            "SentID": 1669,
            "TokenID": "6",
            "Context": "returnVal . put ( JSONMapping . EXECUTE_PER_FLUID_ITEM_QUERY ,"
        },
        {
            "Word": "getExecutePerFluidItemQuery",
            "WordID": "2",
            "SentID": 1670,
            "TokenID": "2",
            "Context": "this . getExecutePerFluidItemQuery ( ) ) ;"
        },
        {
            "Word": "getFluidItemQuery",
            "WordID": "1",
            "SentID": 1671,
            "TokenID": "4",
            "Context": "if ( this . getFluidItemQuery ( ) != null )"
        },
        {
            "Word": "FLUID_ITEM_QUERY",
            "WordID": "1",
            "SentID": 1672,
            "TokenID": "6",
            "Context": "returnVal . put ( JSONMapping . FLUID_ITEM_QUERY ,"
        },
        {
            "Word": "getFluidItemQuery",
            "WordID": "2",
            "SentID": 1673,
            "TokenID": "2",
            "Context": "this . getFluidItemQuery ( ) ) ;"
        },
        {
            "Word": "UserQuery",
            "WordID": "3",
            "SentID": 1723,
            "TokenID": "2",
            "Context": "return new UserQuery ( this . putJson ("
        },
        {
            "Word": "UserQuery",
            "WordID": "7",
            "SentID": 1728,
            "TokenID": "2",
            "Context": "return new UserQuery ( this . postJson ("
        },
        {
            "Word": "UserQuery",
            "WordID": "11",
            "SentID": 1734,
            "TokenID": "2",
            "Context": "return new UserQuery ( this . postJson ( userQueryToDeleteParam ,"
        },
        {
            "Word": "executeUserQuery",
            "WordID": "1",
            "SentID": 1744,
            "TokenID": "3",
            "Context": "} public FluidItemListing executeUserQuery ("
        },
        {
            "Word": "executeUserQuery",
            "WordID": "2",
            "SentID": 1749,
            "TokenID": "3",
            "Context": "return this . executeUserQuery ("
        },
        {
            "Word": "executeUserQuery",
            "WordID": "3",
            "SentID": 1756,
            "TokenID": "10",
            "Context": "queryToExecuteParam , WS . Path . UserQuery . Version1 . executeUserQuery ("
        },
        {
            "Word": "getUserQuery",
            "WordID": "1",
            "SentID": 2262,
            "TokenID": "4",
            "Context": "if ( this . getUserQuery ( ) != null )"
        },
        {
            "Word": "USER_QUERY",
            "WordID": "1",
            "SentID": 2263,
            "TokenID": "6",
            "Context": "returnVal . put ( JSONMapping . USER_QUERY ,"
        },
        {
            "Word": "getUserQuery",
            "WordID": "2",
            "SentID": 2264,
            "TokenID": "2",
            "Context": "this . getUserQuery ( ) . toJsonObject ( ) ) ;"
        },
        {
            "Word": "ancestorQuery",
            "WordID": "1",
            "SentID": 2512,
            "TokenID": "1",
            "Context": "StringBuffer ancestorQuery = new StringBuffer ("
        },
        {
            "Word": "ancestorQuery",
            "WordID": "2",
            "SentID": 2514,
            "TokenID": "0",
            "Context": "ancestorQuery . append ( \":\\\"\" ) ;"
        },
        {
            "Word": "ancestorQuery",
            "WordID": "3",
            "SentID": 2515,
            "TokenID": "0",
            "Context": "ancestorQuery . append ( electronicFormIdParam ) ;"
        },
        {
            "Word": "ancestorQuery",
            "WordID": "4",
            "SentID": 2516,
            "TokenID": "0",
            "Context": "ancestorQuery . append ( \"\\\"\" ) ;"
        },
        {
            "Word": "queryStringQuery",
            "WordID": "2",
            "SentID": 2519,
            "TokenID": "2",
            "Context": "QueryBuilders . queryStringQuery ( ancestorQuery . toString ( ) ) ,"
        },
        {
            "Word": "descendantQuery",
            "WordID": "1",
            "SentID": 2536,
            "TokenID": "1",
            "Context": "StringBuffer descendantQuery = new StringBuffer ( Form . JSONMapping . ANCESTOR_ID ) ;"
        },
        {
            "Word": "descendantQuery",
            "WordID": "2",
            "SentID": 2537,
            "TokenID": "0",
            "Context": "descendantQuery . append ( \":(\" ) ;"
        },
        {
            "Word": "descendantQuery",
            "WordID": "3",
            "SentID": 2539,
            "TokenID": "0",
            "Context": "descendantQuery . append ( \"\\\"\" ) ;"
        },
        {
            "Word": "descendantQuery",
            "WordID": "4",
            "SentID": 2540,
            "TokenID": "0",
            "Context": "descendantQuery . append ( electronicFormId ) ;"
        },
        {
            "Word": "queryStringQuery",
            "WordID": "3",
            "SentID": 2545,
            "TokenID": "2",
            "Context": "QueryBuilders . queryStringQuery ( fullQueryToExec ) ,"
        },
        {
            "Word": "primaryQuery",
            "WordID": "1",
            "SentID": 2550,
            "TokenID": "1",
            "Context": "StringBuffer primaryQuery = new StringBuffer ("
        },
        {
            "Word": "primaryQuery",
            "WordID": "2",
            "SentID": 2552,
            "TokenID": "0",
            "Context": "primaryQuery . append ( \":\\\"\" ) ;"
        },
        {
            "Word": "primaryQuery",
            "WordID": "3",
            "SentID": 2553,
            "TokenID": "0",
            "Context": "primaryQuery . append ( electronicFormIdParam ) ;"
        },
        {
            "Word": "primaryQuery",
            "WordID": "4",
            "SentID": 2554,
            "TokenID": "0",
            "Context": "primaryQuery . append ( \"\\\"\" ) ;"
        },
        {
            "Word": "queryStringQuery",
            "WordID": "4",
            "SentID": 2557,
            "TokenID": "2",
            "Context": "QueryBuilders . queryStringQuery ( primaryQuery . toString ( ) ) ,"
        },
        {
            "Word": "primaryQuery",
            "WordID": "6",
            "SentID": 2817,
            "TokenID": "1",
            "Context": "StringBuffer primaryQuery = new StringBuffer ( ABaseFluidJSONObject . JSONMapping . ID ) ;"
        },
        {
            "Word": "queryStringQuery",
            "WordID": "5",
            "SentID": 2819,
            "TokenID": "2",
            "Context": "QueryBuilders . queryStringQuery ( primaryQuery . toString ( ) ) , Index . DOCUMENT ,"
        },
        {
            "Labels": [
                "\"Database Query Management in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Query",
            "Semantic": "Data",
            "Syntactic": "objects, methods",
            "Description": "Objects and methods related to data query",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "405": [
        {
            "Word": ".",
            "WordID": "624",
            "SentID": 573,
            "TokenID": "1",
            "Context": "byIdQuery . append ( ABaseFluidJSONObject . JSONMapping . ID ) ;"
        },
        {
            "Word": ".",
            "WordID": "627",
            "SentID": 574,
            "TokenID": "1",
            "Context": "byIdQuery . append ( \":\\\"\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "628",
            "SentID": 575,
            "TokenID": "1",
            "Context": "byIdQuery . append ( formId ) ;"
        },
        {
            "Word": ".",
            "WordID": "755",
            "SentID": 714,
            "TokenID": "1",
            "Context": "titleCase . append ( c ) ;"
        },
        {
            "Word": ".",
            "WordID": "807",
            "SentID": 785,
            "TokenID": "1",
            "Context": "builder . append ( selectedChoice ) ;"
        },
        {
            "Word": ".",
            "WordID": "1210",
            "SentID": 1213,
            "TokenID": "1",
            "Context": "stringBuff . append ( NULL ) ;"
        },
        {
            "Word": ".",
            "WordID": "1211",
            "SentID": 1214,
            "TokenID": "1",
            "Context": "stringBuff . append ( formDefIdParam . toString ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "1213",
            "SentID": 1215,
            "TokenID": "1",
            "Context": "stringBuff . append ( DASH ) ;"
        },
        {
            "Word": ".",
            "WordID": "1214",
            "SentID": 1217,
            "TokenID": "1",
            "Context": "stringBuff . append ( formContIdParam . toString ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "1216",
            "SentID": 1219,
            "TokenID": "1",
            "Context": "stringBuff . append ( formFieldIdParam . toString ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "1349",
            "SentID": 1331,
            "TokenID": "1",
            "Context": "returnVal . append ( \",\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "1764",
            "SentID": 1716,
            "TokenID": "1",
            "Context": "concatBuffer . append ( toAdd ) ;"
        },
        {
            "Word": ".",
            "WordID": "1765",
            "SentID": 1717,
            "TokenID": "1",
            "Context": "concatBuffer . append ( separatorCharsParam ) ;"
        },
        {
            "Word": ".",
            "WordID": "2733",
            "SentID": 2514,
            "TokenID": "1",
            "Context": "ancestorQuery . append ( \":\\\"\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "2734",
            "SentID": 2515,
            "TokenID": "1",
            "Context": "ancestorQuery . append ( electronicFormIdParam ) ;"
        },
        {
            "Word": ".",
            "WordID": "2735",
            "SentID": 2516,
            "TokenID": "1",
            "Context": "ancestorQuery . append ( \"\\\"\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "2750",
            "SentID": 2537,
            "TokenID": "1",
            "Context": "descendantQuery . append ( \":(\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "2751",
            "SentID": 2539,
            "TokenID": "1",
            "Context": "descendantQuery . append ( \"\\\"\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "2752",
            "SentID": 2540,
            "TokenID": "1",
            "Context": "descendantQuery . append ( electronicFormId ) ;"
        },
        {
            "Word": ".",
            "WordID": "2761",
            "SentID": 2552,
            "TokenID": "1",
            "Context": "primaryQuery . append ( \":\\\"\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "2762",
            "SentID": 2553,
            "TokenID": "1",
            "Context": "primaryQuery . append ( electronicFormIdParam ) ;"
        },
        {
            "Word": ".",
            "WordID": "2763",
            "SentID": 2554,
            "TokenID": "1",
            "Context": "primaryQuery . append ( \"\\\"\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "2963",
            "SentID": 2763,
            "TokenID": "1",
            "Context": "formFieldsCombined . append ( formItm . toString ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "2965",
            "SentID": 2764,
            "TokenID": "1",
            "Context": "formFieldsCombined . append ( listingItm . toString ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "3122",
            "SentID": 2918,
            "TokenID": "1",
            "Context": "strBuilder . append ( nameValue . getName ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "3124",
            "SentID": 2919,
            "TokenID": "1",
            "Context": "strBuilder . append ( EQUALS ) ;"
        },
        {
            "Word": ".",
            "WordID": "3125",
            "SentID": 2920,
            "TokenID": "1",
            "Context": "strBuilder . append ( nameValue . getValue ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "3127",
            "SentID": 2921,
            "TokenID": "1",
            "Context": "strBuilder . append ( AMP ) ;"
        },
        {
            "Word": ".",
            "WordID": "3778",
            "SentID": 3561,
            "TokenID": "1",
            "Context": "stringBuilder . append ( child . getTextContent ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "3990",
            "SentID": 3862,
            "TokenID": "1",
            "Context": "bufSentence . appendCodePoint ( d ) ;"
        },
        {
            "Word": ".",
            "WordID": "4002",
            "SentID": 3891,
            "TokenID": "1",
            "Context": "bw . append ( new String ( word . getString ( ) ) ) . append ( \"\\r\\n\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "4043",
            "SentID": 3955,
            "TokenID": "1",
            "Context": "interfaceNames . append ( interfaceClasses [ i ] . getName ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4247",
            "SentID": 4231,
            "TokenID": "1",
            "Context": "builder . append ( descriptor . getName ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4249",
            "SentID": 4232,
            "TokenID": "1",
            "Context": "builder . append ( ':' ) ;"
        },
        {
            "Word": ".",
            "WordID": "4250",
            "SentID": 4234,
            "TokenID": "1",
            "Context": "builder . append ( implementationClass . getName ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4252",
            "SentID": 4236,
            "TokenID": "1",
            "Context": "builder . append ( interfaceClass . getName ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4254",
            "SentID": 4237,
            "TokenID": "1",
            "Context": "builder . append ( instanceType ) ;"
        },
        {
            "Word": ".",
            "WordID": "4255",
            "SentID": 4238,
            "TokenID": "1",
            "Context": "builder . append ( instanceScope ) ;"
        },
        {
            "Word": ".",
            "WordID": "4256",
            "SentID": 4239,
            "TokenID": "1",
            "Context": "builder . append ( remotelyAccessible ? \"NET\" : \"LOCAL\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "4257",
            "SentID": 4241,
            "TokenID": "1",
            "Context": "builder . append ( implementationURL ) ;"
        },
        {
            "Word": ".",
            "WordID": "4292",
            "SentID": 4282,
            "TokenID": "1",
            "Context": "builder . append ( stackTraceClass . getName ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4294",
            "SentID": 4283,
            "TokenID": "1",
            "Context": "builder . append ( \"\\r\\n\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "4411",
            "SentID": 4419,
            "TokenID": "1",
            "Context": "builder . append ( throwable . getLocalizedMessage ( ) ) . append ( \"\\n\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "4606",
            "SentID": 4693,
            "TokenID": "1",
            "Context": "message . append ( httpRequest . getRequestURI ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4608",
            "SentID": 4694,
            "TokenID": "1",
            "Context": "message . append ( \"|:\" ) ;"
        },
        {
            "Word": ".",
            "WordID": "4609",
            "SentID": 4695,
            "TokenID": "1",
            "Context": "message . append ( System . lineSeparator ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4611",
            "SentID": 4696,
            "TokenID": "1",
            "Context": "message . append ( httpRequest . getRemoteHost ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4613",
            "SentID": 4697,
            "TokenID": "1",
            "Context": "message . append ( httpRequest . getMethod ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4615",
            "SentID": 4698,
            "TokenID": "1",
            "Context": "message . append ( httpRequest . getQueryString ( ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4619",
            "SentID": 4701,
            "TokenID": "1",
            "Context": "message . append ( headerName ) ;"
        },
        {
            "Word": ".",
            "WordID": "4620",
            "SentID": 4702,
            "TokenID": "1",
            "Context": "message . append ( httpRequest . getHeader ( headerName ) ) ;"
        },
        {
            "Word": ".",
            "WordID": "4687",
            "SentID": 4770,
            "TokenID": "1",
            "Context": "uri . append ( '?' ) ;"
        },
        {
            "Word": ".",
            "WordID": "4688",
            "SentID": 4771,
            "TokenID": "1",
            "Context": "uri . append ( query ) ;"
        },
        {
            "Word": ".",
            "WordID": "4834",
            "SentID": 4913,
            "TokenID": "1",
            "Context": "parameter . append ( c ) ;"
        },
        {
            "Labels": [
                "You have not provided any Java code tokens for me to generate a label or theme. Please provide the necessary information."
            ],
            "Meaningful": "Yes",
            "Syntactic": "Dot operator",
            "Semantic": "Append Function Calls",
            "Lexicographic": ".",
            "Description": "dot operator used to call the append function, often on query, builder, or message objects.",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "446": [
        {
            "Word": "substring",
            "WordID": "1",
            "SentID": 577,
            "TokenID": "4",
            "Context": "queryByIdsToString = queryByIdsToString . substring ( 0 , queryByIdsToString . length ( ) - 1 ) ;"
        },
        {
            "Word": "substring",
            "WordID": "2",
            "SentID": 741,
            "TokenID": "3",
            "Context": "return toParseParam . substring ( 0 , 12 ) ;"
        },
        {
            "Word": "substring",
            "WordID": "3",
            "SentID": 788,
            "TokenID": "4",
            "Context": "selectVal = selectVal . substring ( 0 , selectVal . length ( ) - 2 ) ;"
        },
        {
            "Word": "substring",
            "WordID": "4",
            "SentID": 1333,
            "TokenID": "3",
            "Context": "return toString . substring ( 0 , toString . length ( ) - 1 ) ;"
        },
        {
            "Word": "substring",
            "WordID": "5",
            "SentID": 1363,
            "TokenID": "4",
            "Context": "inputFilenameWithoutExt = inputFilenameWithoutExt . substring ( 0 , indexOfDot ) ;"
        },
        {
            "Word": "substring",
            "WordID": "6",
            "SentID": 1719,
            "TokenID": "4",
            "Context": "returnValue = concatString . substring ( 0 , concatString . length ( ) - lengthOfSepChars ) ;"
        },
        {
            "Word": "substring",
            "WordID": "7",
            "SentID": 2542,
            "TokenID": "4",
            "Context": "fullQueryToExec = fullQueryToExec . substring ("
        },
        {
            "Word": "substring",
            "WordID": "8",
            "SentID": 2923,
            "TokenID": "4",
            "Context": "bodyJsonString = bodyJsonString . substring ( 0 , bodyJsonString . length ( ) - 1 ) ;"
        },
        {
            "Word": "substring",
            "WordID": "9",
            "SentID": 3572,
            "TokenID": "4",
            "Context": "values = values . substring ( 0 , values . length ( ) - 2 ) ;"
        },
        {
            "Word": "substring",
            "WordID": "10",
            "SentID": 4025,
            "TokenID": "3",
            "Context": "return requestPath . substring ( 0 , extensionIndex ) ;"
        },
        {
            "Word": "substring",
            "WordID": "11",
            "SentID": 4043,
            "TokenID": "5",
            "Context": "String name = expression . substring ( parametersSeparatorIndex , valueSeparatorIndex ) . trim ( ) ;"
        },
        {
            "Word": "substring",
            "WordID": "12",
            "SentID": 4049,
            "TokenID": "10",
            "Context": "if ( parameters . put ( name , expression . substring ( valueSeparatorIndex , parametersSeparatorIndex ) . trim ( ) ) != null ) {"
        },
        {
            "Word": "substring",
            "WordID": "13",
            "SentID": 4672,
            "TokenID": "8",
            "Context": "requestPath = httpRequest . getRequestURI ( ) . substring ( httpRequest . getContextPath ( ) . length ( ) ) ;"
        },
        {
            "Word": "substring",
            "WordID": "14",
            "SentID": 4748,
            "TokenID": "26",
            "Context": "logContext . put ( LOG_CONTEXT_APP , httpRequest . getContextPath ( ) . isEmpty ( ) ? TinyContainer . ROOT_CONTEXT : httpRequest . getContextPath ( ) . substring ( 1 ) ) ;"
        },
        {
            "Labels": [
                "\"String Manipulation\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "substring",
            "Semantic": "Function Calls, variable assignment",
            "Syntactic": "method",
            "Description": "substring method called to assign a value to a variable",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "468": [
        {
            "Word": ",",
            "WordID": "114",
            "SentID": 577,
            "TokenID": "7",
            "Context": "queryByIdsToString = queryByIdsToString . substring ( 0 , queryByIdsToString . length ( ) - 1 ) ;"
        },
        {
            "Word": ",",
            "WordID": "140",
            "SentID": 741,
            "TokenID": "6",
            "Context": "return toParseParam . substring ( 0 , 12 ) ;"
        },
        {
            "Word": ",",
            "WordID": "148",
            "SentID": 788,
            "TokenID": "7",
            "Context": "selectVal = selectVal . substring ( 0 , selectVal . length ( ) - 2 ) ;"
        },
        {
            "Word": ",",
            "WordID": "158",
            "SentID": 878,
            "TokenID": "7",
            "Context": "bos . write ( buffer , 0 , len ) ;"
        },
        {
            "Word": ",",
            "WordID": "266",
            "SentID": 1333,
            "TokenID": "6",
            "Context": "return toString . substring ( 0 , toString . length ( ) - 1 ) ;"
        },
        {
            "Word": ",",
            "WordID": "275",
            "SentID": 1363,
            "TokenID": "7",
            "Context": "inputFilenameWithoutExt = inputFilenameWithoutExt . substring ( 0 , indexOfDot ) ;"
        },
        {
            "Word": ",",
            "WordID": "368",
            "SentID": 1719,
            "TokenID": "7",
            "Context": "returnValue = concatString . substring ( 0 , concatString . length ( ) - lengthOfSepChars ) ;"
        },
        {
            "Word": ",",
            "WordID": "570",
            "SentID": 2543,
            "TokenID": "1",
            "Context": "0 , fullQueryToExec . length ( ) - 1 ) ;"
        },
        {
            "Word": ",",
            "WordID": "694",
            "SentID": 2923,
            "TokenID": "7",
            "Context": "bodyJsonString = bodyJsonString . substring ( 0 , bodyJsonString . length ( ) - 1 ) ;"
        },
        {
            "Word": ",",
            "WordID": "827",
            "SentID": 3572,
            "TokenID": "7",
            "Context": "values = values . substring ( 0 , values . length ( ) - 2 ) ;"
        },
        {
            "Word": ",",
            "WordID": "970",
            "SentID": 3815,
            "TokenID": "5",
            "Context": "str . getChars ( 1 , str . length ( ) , cs , 0 ) ;"
        },
        {
            "Word": ",",
            "WordID": "981",
            "SentID": 3843,
            "TokenID": "12",
            "Context": "return search ( cn , word . toCharArray ( ) , 0 , word . length ( ) - 1 ) >= 0 ;"
        },
        {
            "Word": ",",
            "WordID": "988",
            "SentID": 3868,
            "TokenID": "5",
            "Context": "bufSentence . getChars ( 0 , bufSentence . length ( ) , chs , 0 ) ;"
        },
        {
            "Word": ",",
            "WordID": "1043",
            "SentID": 4022,
            "TokenID": "8",
            "Context": "int extensionIndex = requestPath . lastIndexOf ( '.' , queryParametersIndex ) ;"
        },
        {
            "Word": ",",
            "WordID": "1044",
            "SentID": 4025,
            "TokenID": "6",
            "Context": "return requestPath . substring ( 0 , extensionIndex ) ;"
        },
        {
            "Word": ",",
            "WordID": "1049",
            "SentID": 4041,
            "TokenID": "8",
            "Context": "int valueSeparatorIndex = expression . indexOf ( '=' , parametersSeparatorIndex ) ;"
        },
        {
            "Word": ",",
            "WordID": "1050",
            "SentID": 4043,
            "TokenID": "8",
            "Context": "String name = expression . substring ( parametersSeparatorIndex , valueSeparatorIndex ) . trim ( ) ;"
        },
        {
            "Word": ",",
            "WordID": "1051",
            "SentID": 4045,
            "TokenID": "7",
            "Context": "parametersSeparatorIndex = expression . indexOf ( ';' , valueSeparatorIndex ) ;"
        },
        {
            "Word": ",",
            "WordID": "1053",
            "SentID": 4049,
            "TokenID": "13",
            "Context": "if ( parameters . put ( name , expression . substring ( valueSeparatorIndex , parametersSeparatorIndex ) . trim ( ) ) != null ) {"
        },
        {
            "Labels": [
                "\"Java Punctuation Marks\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "Comma",
            "Semantic": "arguments, String Manipulation",
            "Lexicographic": ",",
            "Description": "comma used to seperate function arguments often the substring() function",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "255": [
        {
            "Word": "fieldUtil",
            "WordID": "1",
            "SentID": 594,
            "TokenID": "4",
            "Context": "if ( this . fieldUtil == null ) {"
        },
        {
            "Word": "fieldUtil",
            "WordID": "2",
            "SentID": 596,
            "TokenID": "2",
            "Context": "this . fieldUtil . getFormFieldMappingForFormDefinition ("
        },
        {
            "Word": "SQLUtil",
            "WordID": "1",
            "SentID": 667,
            "TokenID": "4",
            "Context": "WS . Path . SQLUtil . Version1 . getTableForms ("
        },
        {
            "Word": "SQLUtil",
            "WordID": "2",
            "SentID": 679,
            "TokenID": "4",
            "Context": "WS . Path . SQLUtil . Version1 . getDescendants ("
        },
        {
            "Word": "SQLUtil",
            "WordID": "3",
            "SentID": 689,
            "TokenID": "4",
            "Context": "WS . Path . SQLUtil . Version1 . getAncestor ("
        },
        {
            "Word": "SQLUtil",
            "WordID": "4",
            "SentID": 697,
            "TokenID": "4",
            "Context": "WS . Path . SQLUtil . Version1 . getFormFields ("
        },
        {
            "Word": "formDefUtil",
            "WordID": "1",
            "SentID": 996,
            "TokenID": "2",
            "Context": "this . formDefUtil . getFormDefinitionIdAndTitle ( ) ;"
        },
        {
            "Word": "fieldUtil",
            "WordID": "3",
            "SentID": 1012,
            "TokenID": "8",
            "Context": "List < Field > formFields = this . fieldUtil . getFormFields ("
        },
        {
            "Word": "fieldUtil",
            "WordID": "4",
            "SentID": 1037,
            "TokenID": "2",
            "Context": "this . fieldUtil . getFormFields ("
        },
        {
            "Word": "CacheUtil",
            "WordID": "1",
            "SentID": 1171,
            "TokenID": "3",
            "Context": "Method methodGetWord = CacheUtil . getMethod ("
        },
        {
            "Word": "CacheUtil",
            "WordID": "2",
            "SentID": 1174,
            "TokenID": "3",
            "Context": "Method methodGetValue = CacheUtil . getMethod ("
        },
        {
            "Word": "CacheUtil",
            "WordID": "3",
            "SentID": 1176,
            "TokenID": "3",
            "Context": "Object getWordObj = CacheUtil . invoke ( methodGetWord , objWithKeyParam ) ;"
        },
        {
            "Word": "CacheUtil",
            "WordID": "4",
            "SentID": 1186,
            "TokenID": "0",
            "Context": "CacheUtil . invoke ( methodAvailableChoices , objWithKeyParam ) ;"
        },
        {
            "Word": "CacheUtil",
            "WordID": "5",
            "SentID": 1196,
            "TokenID": "2",
            "Context": "getValueObj = CacheUtil . invoke ( methodGetValue , objWithKeyParam ) ;"
        },
        {
            "Word": "CommandUtil",
            "WordID": "1",
            "SentID": 1367,
            "TokenID": "0",
            "Context": "CommandUtil . CommandResult commandResult ="
        },
        {
            "Word": "commandUtil",
            "WordID": "1",
            "SentID": 1368,
            "TokenID": "2",
            "Context": "this . commandUtil . executeCommand ("
        },
        {
            "Word": "CommandUtil",
            "WordID": "2",
            "SentID": 1369,
            "TokenID": "0",
            "Context": "CommandUtil . FLUID_CLI ,"
        },
        {
            "Word": "getCacheUtil",
            "WordID": "1",
            "SentID": 1807,
            "TokenID": "4",
            "Context": "if ( this . getCacheUtil ( ) != null ) {"
        },
        {
            "Word": "CacheUtil",
            "WordID": "6",
            "SentID": 1808,
            "TokenID": "0",
            "Context": "CacheUtil . CachedFieldValue cachedFieldValue ="
        },
        {
            "Word": "getCacheUtil",
            "WordID": "2",
            "SentID": 1809,
            "TokenID": "2",
            "Context": "this . getCacheUtil ( ) . getCachedFieldValueFrom ("
        },
        {
            "Word": "SQLFormUtil",
            "WordID": "1",
            "SentID": 1869,
            "TokenID": "0",
            "Context": "SQLFormUtil . SQLColumnIndex . _02_FORM_TYPE ) ;"
        },
        {
            "Word": "sqlFormDefinitionUtil",
            "WordID": "1",
            "SentID": 1872,
            "TokenID": "2",
            "Context": "this . sqlFormDefinitionUtil == null ? null :"
        },
        {
            "Word": "sqlFormDefinitionUtil",
            "WordID": "2",
            "SentID": 1873,
            "TokenID": "2",
            "Context": "this . sqlFormDefinitionUtil . getFormDefinitionIdAndTitle ( ) . get ( formTypeId )"
        },
        {
            "Word": "SQLFormUtil",
            "WordID": "2",
            "SentID": 1875,
            "TokenID": "0",
            "Context": "SQLFormUtil . SQLColumnIndex . _03_TITLE ) ) ;"
        },
        {
            "Word": "SQLFormUtil",
            "WordID": "3",
            "SentID": 1876,
            "TokenID": "7",
            "Context": "Date created = resultSetForTblInfo . getDate ( SQLFormUtil . SQLColumnIndex . _04_CREATED ) ;"
        },
        {
            "Word": "SQLFormUtil",
            "WordID": "4",
            "SentID": 1877,
            "TokenID": "7",
            "Context": "Date lastUpdated = resultSetForTblInfo . getDate ( SQLFormUtil . SQLColumnIndex . _05_LAST_UPDATED ) ;"
        },
        {
            "Word": "EntityUtils",
            "WordID": "1",
            "SentID": 2982,
            "TokenID": "0",
            "Context": "EntityUtils . toString ( entity ) ;"
        },
        {
            "Word": "EntityUtils",
            "WordID": "2",
            "SentID": 2986,
            "TokenID": "0",
            "Context": "EntityUtils . toString ( entity ) : null ;"
        },
        {
            "Word": "ABaseSQLUtil",
            "WordID": "1",
            "SentID": 3157,
            "TokenID": "0",
            "Context": "ABaseSQLUtil . SQLServerType sqlTypeParam ,"
        },
        {
            "Word": "SQLFormFieldUtil",
            "WordID": "1",
            "SentID": 3165,
            "TokenID": "0",
            "Context": "SQLFormFieldUtil . FormFieldMapping formFieldMappingParam"
        },
        {
            "Word": "SQLFormFieldUtil",
            "WordID": "2",
            "SentID": 3272,
            "TokenID": "9",
            "Context": "public List < Field > convertTo ( List < SQLFormFieldUtil . FormFieldMapping > formFieldMappingsParam )"
        },
        {
            "Word": "SQLFormFieldUtil",
            "WordID": "3",
            "SentID": 3274,
            "TokenID": "2",
            "Context": "for ( SQLFormFieldUtil . FormFieldMapping mappingToConvert : formFieldMappingsParam )"
        },
        {
            "Word": "SQLFormFieldUtil",
            "WordID": "4",
            "SentID": 3276,
            "TokenID": "4",
            "Context": "public Field convertTo ( SQLFormFieldUtil . FormFieldMapping formFieldMappingParam )"
        },
        {
            "Word": "PageUtils",
            "WordID": "1",
            "SentID": 3774,
            "TokenID": "1",
            "Context": "return PageUtils . findAllowRobots ( servletContext , request , response , page ) ;"
        },
        {
            "Word": "EntityUtils",
            "WordID": "3",
            "SentID": 4345,
            "TokenID": "2",
            "Context": "body = EntityUtils . toString ( entity ) ;"
        },
        {
            "Labels": [
                "\"SQL and Utility Class Management in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Util, SQL",
            "Syntactic": "Object",
            "Semantic": "Data, Network",
            "Description": "objects with \"util\" and \"sql\" in the name often associated with data and network operations",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "347": [
        {
            "Word": "protected",
            "WordID": "1",
            "SentID": 603,
            "TokenID": "1",
            "Context": "} protected final List < Form > populateTableFields ("
        },
        {
            "Word": "protected",
            "WordID": "2",
            "SentID": 865,
            "TokenID": "1",
            "Context": "} protected byte [ ] uncompress ("
        },
        {
            "Word": "protected",
            "WordID": "3",
            "SentID": 1284,
            "TokenID": "1",
            "Context": "} protected static String getStringPropertyFromProperties ("
        },
        {
            "Word": "protected",
            "WordID": "4",
            "SentID": 1289,
            "TokenID": "1",
            "Context": "} protected static int getIntPropertyFromProperties ("
        },
        {
            "Word": "protected",
            "WordID": "5",
            "SentID": 1294,
            "TokenID": "1",
            "Context": "} protected long toLongSafe ( String toParseParam ) {"
        },
        {
            "Word": "protected",
            "WordID": "6",
            "SentID": 2741,
            "TokenID": "1",
            "Context": "} protected void setEchoIfNotSet ( ABaseFluidVO baseToSetEchoOnIfNotSetParam ) {"
        },
        {
            "Word": "protected",
            "WordID": "7",
            "SentID": 2746,
            "TokenID": "1",
            "Context": "} protected String getExceptionMessageVerbose ("
        },
        {
            "Word": "protected",
            "WordID": "8",
            "SentID": 2880,
            "TokenID": "1",
            "Context": "} protected JSONObject postJson ("
        },
        {
            "Word": "protected",
            "WordID": "9",
            "SentID": 2892,
            "TokenID": "1",
            "Context": "} protected JSONObject deleteJson ("
        },
        {
            "Word": "protected",
            "WordID": "10",
            "SentID": 2895,
            "TokenID": "1",
            "Context": "} protected JSONObject postForm ("
        },
        {
            "Word": "protected",
            "WordID": "11",
            "SentID": 2900,
            "TokenID": "1",
            "Context": "} protected JSONObject putJson ("
        },
        {
            "Word": "protected",
            "WordID": "12",
            "SentID": 2903,
            "TokenID": "1",
            "Context": "} protected JSONObject executeJson ("
        },
        {
            "Word": "protected",
            "WordID": "13",
            "SentID": 2912,
            "TokenID": "1",
            "Context": "} protected JSONObject executeForm ("
        },
        {
            "Word": "protected",
            "WordID": "14",
            "SentID": 2925,
            "TokenID": "1",
            "Context": "} protected JSONObject executeString ("
        },
        {
            "Word": "protected",
            "WordID": "15",
            "SentID": 2933,
            "TokenID": "1",
            "Context": "} protected String executeTxtReceiveTxt ("
        },
        {
            "Word": "protected",
            "WordID": "16",
            "SentID": 2997,
            "TokenID": "1",
            "Context": "} protected boolean isError ( ABaseFluidJSONObject baseDomainParam ) {"
        },
        {
            "Word": "protected",
            "WordID": "17",
            "SentID": 3033,
            "TokenID": "1",
            "Context": "} protected void closeConnectionNonThreaded ( ) {"
        },
        {
            "Word": "protected",
            "WordID": "18",
            "SentID": 3049,
            "TokenID": "1",
            "Context": "} protected void closeStatement ( PreparedStatement preparedStatementParam ,"
        },
        {
            "Word": "protected",
            "WordID": "19",
            "SentID": 3053,
            "TokenID": "1",
            "Context": "} protected void closeStatement ( PreparedStatement preparedStatementParam ) {"
        },
        {
            "Word": "protected",
            "WordID": "20",
            "SentID": 3544,
            "TokenID": "1",
            "Context": "} protected static Map < String , String > convertNodeMap ( NamedNodeMap nodeMap ) {"
        },
        {
            "Word": "protected",
            "WordID": "21",
            "SentID": 3804,
            "TokenID": "1",
            "Context": "} protected File [ ] listWordsFiles ( ) {"
        },
        {
            "Word": "protected",
            "WordID": "22",
            "SentID": 3911,
            "TokenID": "1",
            "Context": "} protected void printChunk ( List < Chunk > chunks ) {"
        },
        {
            "Word": "protected",
            "WordID": "23",
            "SentID": 3913,
            "TokenID": "1",
            "Context": "} protected int search ( char [ ] chs , int offset , int tailLen ) {"
        },
        {
            "Word": "protected",
            "WordID": "24",
            "SentID": 3917,
            "TokenID": "1",
            "Context": "} protected int search ( CharNode cn , char [ ] chs , int offset , int tailLen ) {"
        },
        {
            "Word": "protected",
            "WordID": "25",
            "SentID": 3920,
            "TokenID": "1",
            "Context": "} protected int maxMatch ( CharNode [ ] cns , int cnIdx , char [ ] chs , int offset ) {"
        },
        {
            "Word": "protected",
            "WordID": "26",
            "SentID": 3926,
            "TokenID": "1",
            "Context": "} protected void maxMatch ( CharNode [ ] cns , int cnIdx , char [ ] chs , int offset , ArrayList < Integer > [ ] tailLens , int tailLensIdx ) {"
        },
        {
            "Word": "protected",
            "WordID": "29",
            "SentID": 4327,
            "TokenID": "1",
            "Context": "} protected HttpResponse executeAndHandle ( Request request )"
        },
        {
            "Word": "protected",
            "WordID": "30",
            "SentID": 4331,
            "TokenID": "1",
            "Context": "} protected HttpResponse execute ( Request request )"
        },
        {
            "Word": "protected",
            "WordID": "31",
            "SentID": 4334,
            "TokenID": "1",
            "Context": "} protected void handleResponse ( HttpResponse response , Request request )"
        },
        {
            "Word": "protected",
            "WordID": "32",
            "SentID": 4338,
            "TokenID": "1",
            "Context": "} protected void handleErrors ( HttpResponse response , Request request )"
        },
        {
            "Word": "protected",
            "WordID": "33",
            "SentID": 4377,
            "TokenID": "1",
            "Context": "} protected void handleHeaderLinks ( HttpResponse response , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "protected",
            "WordID": "34",
            "SentID": 4384,
            "TokenID": "1",
            "Context": "} protected void handleBodyLinks ( JsonNode jsonBody , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "protected",
            "WordID": "35",
            "SentID": 4409,
            "TokenID": "1",
            "Context": "} protected void handleCapabilities ( HttpResponse response ) {"
        },
        {
            "Word": "protected",
            "WordID": "36",
            "SentID": 4414,
            "TokenID": "1",
            "Context": "} protected Optional < Boolean > isMethodAllowed ( String method ) {"
        },
        {
            "Word": "protected",
            "WordID": "37",
            "SentID": 4430,
            "TokenID": "1",
            "Context": "} protected void registerInstanceProcessor ( ) {"
        },
        {
            "Word": "protected",
            "WordID": "38",
            "SentID": 4437,
            "TokenID": "1",
            "Context": "} protected void registerScopeFactory ( ScopeFactory scopeFactory ) {"
        },
        {
            "Word": "protected",
            "WordID": "39",
            "SentID": 4442,
            "TokenID": "1",
            "Context": "} protected void registerInstanceFactory ( InstanceType instanceType , InstanceFactory instanceFactory ) {"
        },
        {
            "Word": "protected",
            "WordID": "40",
            "SentID": 4444,
            "TokenID": "1",
            "Context": "} protected void registerInstanceProcessor ( InstanceProcessor instanceProcessor ) {"
        },
        {
            "Word": "protected",
            "WordID": "41",
            "SentID": 4448,
            "TokenID": "1",
            "Context": "} protected void registerClassProcessor ( ClassProcessor classProcessor ) {"
        },
        {
            "Word": "protected",
            "WordID": "43",
            "SentID": 4709,
            "TokenID": "1",
            "Context": "} protected void config ( EventStreamConfig config ) {"
        },
        {
            "Word": "protected",
            "WordID": "44",
            "SentID": 4721,
            "TokenID": "1",
            "Context": "} protected void setRemoteHost ( String remoteHost ) {"
        },
        {
            "Word": "protected",
            "WordID": "45",
            "SentID": 4724,
            "TokenID": "1",
            "Context": "} protected boolean loop ( ) {"
        },
        {
            "Word": "protected",
            "WordID": "46",
            "SentID": 4732,
            "TokenID": "1",
            "Context": "} protected < T > T getParameter ( String name , Class < T > type ) {"
        },
        {
            "Word": "protected",
            "WordID": "47",
            "SentID": 4735,
            "TokenID": "1",
            "Context": "} protected void sendEvent ( Event event ) {"
        },
        {
            "Word": "protected",
            "WordID": "49",
            "SentID": 4773,
            "TokenID": "1",
            "Context": "} protected static void sendUnauthorized ( RequestContext context ) {"
        },
        {
            "Word": "protected",
            "WordID": "50",
            "SentID": 4781,
            "TokenID": "1",
            "Context": "} protected static void sendBadRequest ( RequestContext context ) throws IOException {"
        },
        {
            "Word": "protected",
            "WordID": "51",
            "SentID": 4784,
            "TokenID": "1",
            "Context": "} protected static void sendNotFound ( RequestContext context , Exception exception ) throws IOException {"
        },
        {
            "Word": "protected",
            "WordID": "52",
            "SentID": 4786,
            "TokenID": "1",
            "Context": "} protected static void sendError ( RequestContext context , Throwable throwable ) throws IOException {"
        },
        {
            "Word": "protected",
            "WordID": "53",
            "SentID": 4794,
            "TokenID": "1",
            "Context": "} protected static void dumpError ( RequestContext context , Throwable throwable ) {"
        },
        {
            "Word": "protected",
            "WordID": "54",
            "SentID": 4795,
            "TokenID": "1",
            "Context": "} protected static void sendJsonObject ( RequestContext context , Object object , int statusCode ) throws IOException {"
        },
        {
            "Word": "protected",
            "WordID": "55",
            "SentID": 4810,
            "TokenID": "1",
            "Context": "} protected void delete ( ) {"
        },
        {
            "Word": "protected",
            "WordID": "56",
            "SentID": 4818,
            "TokenID": "1",
            "Context": "} protected void onDelete ( )"
        },
        {
            "Word": "protected",
            "WordID": "57",
            "SentID": 4875,
            "TokenID": "1",
            "Context": "} protected static void loadXML ( InputStream inputStream , Loader loader ) throws ConfigException {"
        },
        {
            "Word": "protected",
            "WordID": "58",
            "SentID": 4881,
            "TokenID": "1",
            "Context": "} protected void onError ( Exception ex ) {"
        },
        {
            "Word": "protected",
            "WordID": "59",
            "SentID": 4883,
            "TokenID": "1",
            "Context": "} protected Component buildAndBind ( Class < TEntity > entityType ) {"
        },
        {
            "Labels": [
                "\"Access Modifier\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "protected",
            "Semantic": "Function Declaration, Network",
            "Syntactic": "keyword",
            "Description": "proteckted keyword used in function declarations, many related to network operations",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "459": [
        {
            "Word": "?",
            "WordID": "7",
            "SentID": 607,
            "TokenID": "7",
            "Context": "List < Form > allTableRecordsFromAllFields = addAllTableRecordsForReturnParam ?"
        },
        {
            "Word": "?",
            "WordID": "8",
            "SentID": 967,
            "TokenID": "8",
            "Context": "Long jobViewId = ( jobViewParam == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "9",
            "SentID": 969,
            "TokenID": "8",
            "Context": "Long lockAsUserId = ( userToLockAsParam == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "10",
            "SentID": 985,
            "TokenID": "8",
            "Context": "Long unLockAsUserId = ( userToUnLockAsParam == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "11",
            "SentID": 1070,
            "TokenID": "8",
            "Context": "long formContStateId = ( formContainerState == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "12",
            "SentID": 1079,
            "TokenID": "8",
            "Context": "long formContFlowStateId = ( formContainerFlowState == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "13",
            "SentID": 1308,
            "TokenID": "7",
            "Context": "this . getId ( ) == null ?"
        },
        {
            "Word": "?",
            "WordID": "14",
            "SentID": 1311,
            "TokenID": "9",
            "Context": "( this . getFlowState ( ) == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "17",
            "SentID": 1399,
            "TokenID": "8",
            "Context": "return ( this . getAncestorClient == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "22",
            "SentID": 1943,
            "TokenID": "14",
            "Context": "String commandString = ( commandParams == null || commandParams . length == 0 ) ?"
        },
        {
            "Word": "?",
            "WordID": "33",
            "SentID": 2184,
            "TokenID": "7",
            "Context": "this . getTitle ( ) == null ?"
        },
        {
            "Word": "?",
            "WordID": "34",
            "SentID": 2187,
            "TokenID": "7",
            "Context": "this . getFormType ( ) == null ?"
        },
        {
            "Word": "?",
            "WordID": "35",
            "SentID": 2190,
            "TokenID": "7",
            "Context": "this . getState ( ) == null ?"
        },
        {
            "Word": "?",
            "WordID": "36",
            "SentID": 2193,
            "TokenID": "7",
            "Context": "this . getFlowState ( ) == null ?"
        },
        {
            "Word": "?",
            "WordID": "37",
            "SentID": 2196,
            "TokenID": "9",
            "Context": "( this . getDateCreated ( ) == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "38",
            "SentID": 2199,
            "TokenID": "9",
            "Context": "( this . getDateLastUpdated ( ) == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "40",
            "SentID": 2644,
            "TokenID": "5",
            "Context": "( fromDateParam == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "41",
            "SentID": 2648,
            "TokenID": "5",
            "Context": "( toDateParam == null ) ?"
        },
        {
            "Word": "?",
            "WordID": "45",
            "SentID": 2985,
            "TokenID": "8",
            "Context": "String responseString = ( entity != null ) ?"
        },
        {
            "Word": "?",
            "WordID": "102",
            "SentID": 4613,
            "TokenID": "0",
            "Context": "? readRange ( currentStartIndex , null )"
        },
        {
            "Labels": [
                "Optional Value Access or Null Safety Check"
            ],
            "Meaningful": "Yes",
            "Syntactic": "Question Mark",
            "Semantic": "Ternery Operator, Null Conditional",
            "Lexicographic": "?",
            "Description": "ternary operator used for conditionals related to checking if an object is null",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "60": [
        {
            "Word": ":",
            "WordID": "29",
            "SentID": 608,
            "TokenID": "4",
            "Context": "new ArrayList ( ) : null ;"
        },
        {
            "Word": ",",
            "WordID": "176",
            "SentID": 934,
            "TokenID": "1",
            "Context": "formParam , WS . Path . FormContainer . Version1 . executeCustomWebAction ("
        },
        {
            "Word": ",",
            "WordID": "181",
            "SentID": 951,
            "TokenID": "1",
            "Context": "formParam , WS . Path . FormHistory . Version1 . getByFormContainer ("
        },
        {
            "Word": ":",
            "WordID": "34",
            "SentID": 968,
            "TokenID": "1",
            "Context": "null : jobViewParam . getId ( ) ;"
        },
        {
            "Word": ":",
            "WordID": "35",
            "SentID": 970,
            "TokenID": "1",
            "Context": "null : userToLockAsParam . getId ( ) ;"
        },
        {
            "Word": ":",
            "WordID": "36",
            "SentID": 986,
            "TokenID": "1",
            "Context": "null : userToUnLockAsParam . getId ( ) ;"
        },
        {
            "Word": ":",
            "WordID": "39",
            "SentID": 1071,
            "TokenID": "1",
            "Context": "0 : formContainerState . longValue ( ) ;"
        },
        {
            "Word": ":",
            "WordID": "40",
            "SentID": 1080,
            "TokenID": "1",
            "Context": "0 : formContainerFlowState . longValue ( ) ;"
        },
        {
            "Word": ":",
            "WordID": "50",
            "SentID": 1309,
            "TokenID": "3",
            "Context": "JSONObject . NULL : this . getId ( ) ) ;"
        },
        {
            "Word": ":",
            "WordID": "51",
            "SentID": 1312,
            "TokenID": "3",
            "Context": "JSONObject . NULL : this . getFlowState ( ) . name ( ) ) ;"
        },
        {
            "Word": ",",
            "WordID": "379",
            "SentID": 1756,
            "TokenID": "1",
            "Context": "queryToExecuteParam , WS . Path . UserQuery . Version1 . executeUserQuery ("
        },
        {
            "Word": ":",
            "WordID": "82",
            "SentID": 1944,
            "TokenID": "1",
            "Context": "\"<unknown>\" : commandParams [ 0 ] ;"
        },
        {
            "Word": ":",
            "WordID": "97",
            "SentID": 2185,
            "TokenID": "3",
            "Context": "JSONObject . NULL : this . getTitle ( ) ) ;"
        },
        {
            "Word": ":",
            "WordID": "98",
            "SentID": 2188,
            "TokenID": "3",
            "Context": "JSONObject . NULL : this . getFormType ( ) ) ;"
        },
        {
            "Word": ":",
            "WordID": "99",
            "SentID": 2191,
            "TokenID": "3",
            "Context": "JSONObject . NULL : this . getState ( ) ) ;"
        },
        {
            "Word": ":",
            "WordID": "100",
            "SentID": 2194,
            "TokenID": "3",
            "Context": "JSONObject . NULL : this . getFlowState ( ) ) ;"
        },
        {
            "Word": ":",
            "WordID": "101",
            "SentID": 2197,
            "TokenID": "3",
            "Context": "JSONObject . NULL : this . getDateCreated ( ) . getTime ( ) ) ;"
        },
        {
            "Word": ":",
            "WordID": "102",
            "SentID": 2200,
            "TokenID": "3",
            "Context": "JSONObject . NULL : this . getDateLastUpdated ( ) . getTime ( ) ) ;"
        },
        {
            "Word": ",",
            "WordID": "527",
            "SentID": 2340,
            "TokenID": "1",
            "Context": "form , WS . Path . FormField . Version1 . getByFormDefinitionAndLoggedInUser ("
        },
        {
            "Word": ":",
            "WordID": "115",
            "SentID": 2646,
            "TokenID": "0",
            "Context": ": fromDateParam . getTime ( ) ;"
        },
        {
            "Word": ":",
            "WordID": "116",
            "SentID": 2649,
            "TokenID": "5",
            "Context": "System . currentTimeMillis ( ) : toDateParam . getTime ( ) ;"
        },
        {
            "Word": ":",
            "WordID": "122",
            "SentID": 2986,
            "TokenID": "6",
            "Context": "EntityUtils . toString ( entity ) : null ;"
        },
        {
            "Word": ",",
            "WordID": "725",
            "SentID": 3079,
            "TokenID": "1",
            "Context": "flowJobItemParam , WS . Path . FlowItem . Version1 . sendFlowItemOn ("
        },
        {
            "Word": ",",
            "WordID": "778",
            "SentID": 3330,
            "TokenID": "1",
            "Context": "attachment , WS . Path . Attachment . Version1 . getById ("
        },
        {
            "Word": ",",
            "WordID": "779",
            "SentID": 3335,
            "TokenID": "1",
            "Context": "formParam , WS . Path . Attachment . Version1 . getAllByFormContainer ("
        },
        {
            "Word": ":",
            "WordID": "189",
            "SentID": 4614,
            "TokenID": "0",
            "Context": ": readRange ( null , - currentStartIndex ) ;"
        },
        {
            "Labels": [
                "\"Punctuation Marks in Java Code\""
            ],
            "Meaningful": "I don't know",
            "Syntactic": "Miscelaneous Syntactic Characters",
            "Lexicographic": ": , ,",
            "Description": "miscellaneous colons and commas",
            "Semantic": "",
            "Q1_Answer": "Unacceptable",
            "Q2_Answer": "Imprecise",
            "Q3_Answer": "Inferior",
            "Q4_Answer": "Miscelaneous Syntax, unsure",
            "Q5_Answer": "Descriptive",
            "Q6_Answer": "None"
        }
    ],
    "442": [
        {
            "Word": "tableRecordWithIdOnly",
            "WordID": "2",
            "SentID": 613,
            "TokenID": "2",
            "Context": "if ( tableRecordWithIdOnly == null || tableRecordWithIdOnly . isEmpty ( ) ) {"
        },
        {
            "Word": "tableRecordWithIdOnly",
            "WordID": "3",
            "SentID": 613,
            "TokenID": "6",
            "Context": "if ( tableRecordWithIdOnly == null || tableRecordWithIdOnly . isEmpty ( ) ) {"
        },
        {
            "Word": "maxExclusive",
            "WordID": "1",
            "SentID": 3451,
            "TokenID": "1",
            "Context": "XsdMaxExclusive maxExclusive = newRestriction . getMaxExclusive ( ) ;"
        },
        {
            "Word": "getMaxExclusive",
            "WordID": "1",
            "SentID": 3451,
            "TokenID": "5",
            "Context": "XsdMaxExclusive maxExclusive = newRestriction . getMaxExclusive ( ) ;"
        },
        {
            "Word": "maxInclusive",
            "WordID": "1",
            "SentID": 3452,
            "TokenID": "1",
            "Context": "XsdMaxInclusive maxInclusive = newRestriction . getMaxInclusive ( ) ;"
        },
        {
            "Word": "getMaxInclusive",
            "WordID": "1",
            "SentID": 3452,
            "TokenID": "5",
            "Context": "XsdMaxInclusive maxInclusive = newRestriction . getMaxInclusive ( ) ;"
        },
        {
            "Word": "minExclusive",
            "WordID": "1",
            "SentID": 3454,
            "TokenID": "1",
            "Context": "XsdMinExclusive minExclusive = newRestriction . getMinExclusive ( ) ;"
        },
        {
            "Word": "getMinExclusive",
            "WordID": "1",
            "SentID": 3454,
            "TokenID": "5",
            "Context": "XsdMinExclusive minExclusive = newRestriction . getMinExclusive ( ) ;"
        },
        {
            "Word": "minInclusive",
            "WordID": "1",
            "SentID": 3455,
            "TokenID": "1",
            "Context": "XsdMinInclusive minInclusive = newRestriction . getMinInclusive ( ) ;"
        },
        {
            "Word": "getMinInclusive",
            "WordID": "1",
            "SentID": 3455,
            "TokenID": "5",
            "Context": "XsdMinInclusive minInclusive = newRestriction . getMinInclusive ( ) ;"
        },
        {
            "Word": "maxExclusive",
            "WordID": "2",
            "SentID": 3463,
            "TokenID": "2",
            "Context": "if ( maxExclusive != null ) {"
        },
        {
            "Word": "setMaxExclusive",
            "WordID": "1",
            "SentID": 3464,
            "TokenID": "2",
            "Context": "existing . setMaxExclusive ( maxExclusive ) ;"
        },
        {
            "Word": "maxExclusive",
            "WordID": "3",
            "SentID": 3464,
            "TokenID": "4",
            "Context": "existing . setMaxExclusive ( maxExclusive ) ;"
        },
        {
            "Word": "maxInclusive",
            "WordID": "2",
            "SentID": 3465,
            "TokenID": "2",
            "Context": "if ( maxInclusive != null ) {"
        },
        {
            "Word": "setMaxInclusive",
            "WordID": "1",
            "SentID": 3466,
            "TokenID": "2",
            "Context": "existing . setMaxInclusive ( maxInclusive ) ;"
        },
        {
            "Word": "maxInclusive",
            "WordID": "3",
            "SentID": 3466,
            "TokenID": "4",
            "Context": "existing . setMaxInclusive ( maxInclusive ) ;"
        },
        {
            "Word": "minExclusive",
            "WordID": "2",
            "SentID": 3469,
            "TokenID": "2",
            "Context": "if ( minExclusive != null ) {"
        },
        {
            "Word": "setMinExclusive",
            "WordID": "1",
            "SentID": 3470,
            "TokenID": "2",
            "Context": "existing . setMinExclusive ( minExclusive ) ;"
        },
        {
            "Word": "minExclusive",
            "WordID": "3",
            "SentID": 3470,
            "TokenID": "4",
            "Context": "existing . setMinExclusive ( minExclusive ) ;"
        },
        {
            "Word": "minInclusive",
            "WordID": "2",
            "SentID": 3471,
            "TokenID": "2",
            "Context": "if ( minInclusive != null ) {"
        },
        {
            "Word": "setMinInclusive",
            "WordID": "1",
            "SentID": 3472,
            "TokenID": "2",
            "Context": "existing . setMinInclusive ( minInclusive ) ;"
        },
        {
            "Word": "minInclusive",
            "WordID": "3",
            "SentID": 3472,
            "TokenID": "4",
            "Context": "existing . setMinInclusive ( minInclusive ) ;"
        },
        {
            "Word": "getMaxExclusive",
            "WordID": "2",
            "SentID": 3498,
            "TokenID": "4",
            "Context": "hasDifferentValue ( existing . getMaxExclusive ( ) , newRestriction . getMaxExclusive ( ) ) ||"
        },
        {
            "Word": "getMaxExclusive",
            "WordID": "3",
            "SentID": 3498,
            "TokenID": "10",
            "Context": "hasDifferentValue ( existing . getMaxExclusive ( ) , newRestriction . getMaxExclusive ( ) ) ||"
        },
        {
            "Word": "getMaxInclusive",
            "WordID": "2",
            "SentID": 3499,
            "TokenID": "4",
            "Context": "hasDifferentValue ( existing . getMaxInclusive ( ) , newRestriction . getMaxInclusive ( ) ) ||"
        },
        {
            "Word": "getMaxInclusive",
            "WordID": "3",
            "SentID": 3499,
            "TokenID": "10",
            "Context": "hasDifferentValue ( existing . getMaxInclusive ( ) , newRestriction . getMaxInclusive ( ) ) ||"
        },
        {
            "Word": "getMinExclusive",
            "WordID": "2",
            "SentID": 3501,
            "TokenID": "4",
            "Context": "hasDifferentValue ( existing . getMinExclusive ( ) , newRestriction . getMinExclusive ( ) ) ||"
        },
        {
            "Word": "getMinExclusive",
            "WordID": "3",
            "SentID": 3501,
            "TokenID": "10",
            "Context": "hasDifferentValue ( existing . getMinExclusive ( ) , newRestriction . getMinExclusive ( ) ) ||"
        },
        {
            "Word": "getMinInclusive",
            "WordID": "2",
            "SentID": 3502,
            "TokenID": "4",
            "Context": "hasDifferentValue ( existing . getMinInclusive ( ) , newRestriction . getMinInclusive ( ) ) ||"
        },
        {
            "Word": "getMinInclusive",
            "WordID": "3",
            "SentID": 3502,
            "TokenID": "10",
            "Context": "hasDifferentValue ( existing . getMinInclusive ( ) , newRestriction . getMinInclusive ( ) ) ||"
        },
        {
            "Labels": [
                "\"Range and Record Management in Data Table\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Exclusive, Inclusive, Max, Min",
            "Semantic": "function calls, Getters",
            "Syntactic": "Objects, methods, variables",
            "Description": "various objects, methods, and variables with \"Exclusive\", \"Inclusive\", \"Max\", or \"Min\" as a substring in the name. Many of the functions are getters.",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "238": [
        {
            "Word": "prepareState",
            "WordID": "1",
            "SentID": 630,
            "TokenID": "1",
            "Context": ". prepareState ( ) . execute ( )"
        },
        {
            "Word": "getState",
            "WordID": "1",
            "SentID": 631,
            "TokenID": "5",
            "Context": ". actionGet ( ) . getState ( )"
        },
        {
            "Word": "formContainerState",
            "WordID": "1",
            "SentID": 1068,
            "TokenID": "1",
            "Context": "Long formContainerState = resultSetParam . getLong ("
        },
        {
            "Word": "_07_FORM_CONTAINER_STATE",
            "WordID": "1",
            "SentID": 1069,
            "TokenID": "2",
            "Context": "SQLColumnIndex . _07_FORM_CONTAINER_STATE ) ;"
        },
        {
            "Word": "formContainerState",
            "WordID": "2",
            "SentID": 1070,
            "TokenID": "4",
            "Context": "long formContStateId = ( formContainerState == null ) ?"
        },
        {
            "Word": "formContainerState",
            "WordID": "3",
            "SentID": 1071,
            "TokenID": "2",
            "Context": "0 : formContainerState . longValue ( ) ;"
        },
        {
            "Word": "formContainerFlowState",
            "WordID": "1",
            "SentID": 1077,
            "TokenID": "1",
            "Context": "Long formContainerFlowState = resultSetParam . getLong ("
        },
        {
            "Word": "_08_FORM_CONTAINER_FLOW_STATE",
            "WordID": "1",
            "SentID": 1078,
            "TokenID": "2",
            "Context": "SQLColumnIndex . _08_FORM_CONTAINER_FLOW_STATE ) ;"
        },
        {
            "Word": "formContainerFlowState",
            "WordID": "2",
            "SentID": 1079,
            "TokenID": "4",
            "Context": "long formContFlowStateId = ( formContainerFlowState == null ) ?"
        },
        {
            "Word": "formContainerFlowState",
            "WordID": "3",
            "SentID": 1080,
            "TokenID": "2",
            "Context": "0 : formContainerFlowState . longValue ( ) ;"
        },
        {
            "Word": "setFlowState",
            "WordID": "1",
            "SentID": 1083,
            "TokenID": "2",
            "Context": "previousMappedForm . setFlowState ("
        },
        {
            "Word": "FlowState",
            "WordID": "1",
            "SentID": 1084,
            "TokenID": "2",
            "Context": "FluidItem . FlowState . NotInFlow . name ( ) ) ;"
        },
        {
            "Word": "FlowState",
            "WordID": "2",
            "SentID": 1086,
            "TokenID": "2",
            "Context": "FluidItem . FlowState . WorkInProgress . name ( ) ) ;"
        },
        {
            "Word": "FlowState",
            "WordID": "3",
            "SentID": 1088,
            "TokenID": "2",
            "Context": "FluidItem . FlowState . UserSend . name ( ) ) ;"
        },
        {
            "Word": "FlowState",
            "WordID": "4",
            "SentID": 1090,
            "TokenID": "2",
            "Context": "FluidItem . FlowState . UserSendWorkInProgress . name ( ) ) ;"
        },
        {
            "Word": "setFlowState",
            "WordID": "2",
            "SentID": 1092,
            "TokenID": "2",
            "Context": "previousMappedForm . setFlowState ( FluidItem . FlowState . Archive . name ( ) ) ;"
        },
        {
            "Word": "FlowState",
            "WordID": "5",
            "SentID": 1092,
            "TokenID": "6",
            "Context": "previousMappedForm . setFlowState ( FluidItem . FlowState . Archive . name ( ) ) ;"
        },
        {
            "Word": "getFlowState",
            "WordID": "1",
            "SentID": 1304,
            "TokenID": "4",
            "Context": "if ( this . getFlowState ( ) != null )"
        },
        {
            "Word": "FLOW_STATE",
            "WordID": "2",
            "SentID": 1310,
            "TokenID": "2",
            "Context": "FlatFormJSONMapping . FLOW_STATE ,"
        },
        {
            "Word": "getFlowState",
            "WordID": "3",
            "SentID": 1311,
            "TokenID": "3",
            "Context": "( this . getFlowState ( ) == null ) ?"
        },
        {
            "Word": "getFlowState",
            "WordID": "4",
            "SentID": 1312,
            "TokenID": "6",
            "Context": "JSONObject . NULL : this . getFlowState ( ) . name ( ) ) ;"
        },
        {
            "Word": "getState",
            "WordID": "2",
            "SentID": 2070,
            "TokenID": "4",
            "Context": "if ( this . getState ( ) != null ) {"
        },
        {
            "Word": "getState",
            "WordID": "3",
            "SentID": 2072,
            "TokenID": "2",
            "Context": "this . getState ( ) ) ;"
        },
        {
            "Word": "getFlowState",
            "WordID": "5",
            "SentID": 2073,
            "TokenID": "4",
            "Context": "if ( this . getFlowState ( ) != null ) {"
        },
        {
            "Word": "FLOW_STATE",
            "WordID": "3",
            "SentID": 2074,
            "TokenID": "2",
            "Context": "JSONMapping . FLOW_STATE ,"
        },
        {
            "Word": "getFlowState",
            "WordID": "6",
            "SentID": 2075,
            "TokenID": "2",
            "Context": "this . getFlowState ( ) ) ;"
        },
        {
            "Word": "getState",
            "WordID": "4",
            "SentID": 2157,
            "TokenID": "4",
            "Context": "if ( this . getState ( ) != null )"
        },
        {
            "Word": "FORM_STATE",
            "WordID": "1",
            "SentID": 2189,
            "TokenID": "2",
            "Context": "FlatFormJSONMapping . FORM_STATE ,"
        },
        {
            "Word": "getState",
            "WordID": "6",
            "SentID": 2190,
            "TokenID": "2",
            "Context": "this . getState ( ) == null ?"
        },
        {
            "Word": "getState",
            "WordID": "7",
            "SentID": 2191,
            "TokenID": "6",
            "Context": "JSONObject . NULL : this . getState ( ) ) ;"
        },
        {
            "Word": "FORM_FLOW_STATE",
            "WordID": "1",
            "SentID": 2192,
            "TokenID": "2",
            "Context": "FlatFormJSONMapping . FORM_FLOW_STATE ,"
        },
        {
            "Word": "getFlowState",
            "WordID": "8",
            "SentID": 2193,
            "TokenID": "2",
            "Context": "this . getFlowState ( ) == null ?"
        },
        {
            "Word": "getFlowState",
            "WordID": "9",
            "SentID": 2194,
            "TokenID": "6",
            "Context": "JSONObject . NULL : this . getFlowState ( ) ) ;"
        },
        {
            "Labels": [
                "\"Form and Flow State Management in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "State",
            "Syntactic": "Variable, Method",
            "Description": "variables and methods with \"State\" substring in name",
            "Semantic": "",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Lexicographic",
            "Q6_Answer": "None"
        }
    ],
    "176": [
        {
            "Word": "CloseConnectionRunnable",
            "WordID": "1",
            "SentID": 634,
            "TokenID": "0",
            "Context": "CloseConnectionRunnable closeConnectionRunnable ="
        },
        {
            "Word": "closeConnectionRunnable",
            "WordID": "1",
            "SentID": 634,
            "TokenID": "1",
            "Context": "CloseConnectionRunnable closeConnectionRunnable ="
        },
        {
            "Word": "CloseConnectionRunnable",
            "WordID": "2",
            "SentID": 635,
            "TokenID": "1",
            "Context": "new CloseConnectionRunnable ( this ) ;"
        },
        {
            "Word": "setAccessible",
            "WordID": "1",
            "SentID": 1206,
            "TokenID": "2",
            "Context": "returnVal . setAccessible ( true ) ;"
        },
        {
            "Word": "AES256Local",
            "WordID": "1",
            "SentID": 1627,
            "TokenID": "5",
            "Context": "byte [ ] localGeneratedHMac = AES256Local . generateLocalHMAC ("
        },
        {
            "Word": "AES256Local",
            "WordID": "2",
            "SentID": 1632,
            "TokenID": "0",
            "Context": "AES256Local . decryptInitPacket ( encryptedData ,"
        },
        {
            "Word": "AES256Local",
            "WordID": "7",
            "SentID": 1648,
            "TokenID": "5",
            "Context": "byte [ ] encryptedData = AES256Local . encrypt ("
        },
        {
            "Word": "AES256Local",
            "WordID": "8",
            "SentID": 1653,
            "TokenID": "0",
            "Context": "AES256Local . generateLocalHMACForReqToken ( encryptedData , sessionKey , seed ) ;"
        },
        {
            "Word": "AES256Local",
            "WordID": "9",
            "SentID": 2655,
            "TokenID": "2",
            "Context": "if ( AES256Local . secureRandom == null )"
        },
        {
            "Word": "AES256Local",
            "WordID": "10",
            "SentID": 2656,
            "TokenID": "0",
            "Context": "AES256Local . secureRandom = new SecureRandom ( ) ;"
        },
        {
            "Word": "AES256Local",
            "WordID": "11",
            "SentID": 2657,
            "TokenID": "4",
            "Context": "return new IvParameterSpec ( AES256Local . secureRandom . generateSeed ( seedParam ) ) . getIV ( ) ;"
        },
        {
            "Word": "isSelectable",
            "WordID": "1",
            "SentID": 3616,
            "TokenID": "12",
            "Context": "} public void addHeaderView ( View v , Object data , boolean isSelectable ) {"
        },
        {
            "Word": "isSelectable",
            "WordID": "2",
            "SentID": 3623,
            "TokenID": "2",
            "Context": "info . isSelectable = isSelectable ;"
        },
        {
            "Word": "isSelectable",
            "WordID": "3",
            "SentID": 3623,
            "TokenID": "4",
            "Context": "info . isSelectable = isSelectable ;"
        },
        {
            "Word": "threadLocal",
            "WordID": "1",
            "SentID": 3973,
            "TokenID": "0",
            "Context": "threadLocal . set ( ( Closeable ) ( arguments [ 0 ] = getUploadStream ( httpRequest , formalParameters ) ) ) ;"
        },
        {
            "Word": "Closeable",
            "WordID": "1",
            "SentID": 3973,
            "TokenID": "5",
            "Context": "threadLocal . set ( ( Closeable ) ( arguments [ 0 ] = getUploadStream ( httpRequest , formalParameters ) ) ) ;"
        },
        {
            "Word": "threadLocal",
            "WordID": "2",
            "SentID": 3975,
            "TokenID": "0",
            "Context": "threadLocal . set ( ( Closeable ) ( arguments [ 0 ] = getUploadStream ( httpRequest , formalParameters ) . openStream ( ) ) ) ;"
        },
        {
            "Word": "Closeable",
            "WordID": "2",
            "SentID": 3975,
            "TokenID": "5",
            "Context": "threadLocal . set ( ( Closeable ) ( arguments [ 0 ] = getUploadStream ( httpRequest , formalParameters ) . openStream ( ) ) ) ;"
        },
        {
            "Word": "isRemotelyAccessible",
            "WordID": "1",
            "SentID": 3987,
            "TokenID": "5",
            "Context": "if ( ! managedMethod . isRemotelyAccessible ( ) ) {"
        },
        {
            "Word": "remotelyAccessible",
            "WordID": "1",
            "SentID": 4079,
            "TokenID": "0",
            "Context": "remotelyAccessible = true ;"
        },
        {
            "Word": "Transactional",
            "WordID": "1",
            "SentID": 4080,
            "TokenID": "7",
            "Context": "boolean transactionalType = hasAnnotation ( implementationClass , Transactional . class ) ;"
        },
        {
            "Word": "Immutable",
            "WordID": "1",
            "SentID": 4081,
            "TokenID": "7",
            "Context": "boolean immutableType = hasAnnotation ( implementationClass , Immutable . class ) ;"
        },
        {
            "Word": "remotelyAccessible",
            "WordID": "2",
            "SentID": 4101,
            "TokenID": "10",
            "Context": "if ( ! instanceType . isPROXY ( ) && ! remotelyAccessible ) {"
        },
        {
            "Word": "remotelyAccessible",
            "WordID": "3",
            "SentID": 4104,
            "TokenID": "5",
            "Context": "if ( publicMethod && ! remotelyAccessible ) {"
        },
        {
            "Word": "remotelyAccessible",
            "WordID": "4",
            "SentID": 4108,
            "TokenID": "3",
            "Context": "if ( ! remotelyAccessible ) {"
        },
        {
            "Word": "remotelyAccessible",
            "WordID": "5",
            "SentID": 4111,
            "TokenID": "3",
            "Context": "if ( ! remotelyAccessible && methodPath != null ) {"
        },
        {
            "Word": "setRemotelyAccessible",
            "WordID": "1",
            "SentID": 4115,
            "TokenID": "2",
            "Context": "managedMethod . setRemotelyAccessible ( remoteMethod ) ;"
        },
        {
            "Word": "Transactional",
            "WordID": "2",
            "SentID": 4118,
            "TokenID": "6",
            "Context": "transactionalType = hasAnnotation ( method , Transactional . class ) ;"
        },
        {
            "Word": "transactional",
            "WordID": "1",
            "SentID": 4120,
            "TokenID": "0",
            "Context": "transactional = true ;"
        },
        {
            "Word": "immutable",
            "WordID": "1",
            "SentID": 4122,
            "TokenID": "1",
            "Context": "boolean immutable = hasAnnotation ( method , Immutable . class ) ;"
        },
        {
            "Word": "Immutable",
            "WordID": "2",
            "SentID": 4122,
            "TokenID": "7",
            "Context": "boolean immutable = hasAnnotation ( method , Immutable . class ) ;"
        },
        {
            "Word": "immutable",
            "WordID": "2",
            "SentID": 4123,
            "TokenID": "2",
            "Context": "if ( immutable && ! transactional ) {"
        },
        {
            "Word": "transactional",
            "WordID": "2",
            "SentID": 4123,
            "TokenID": "5",
            "Context": "if ( immutable && ! transactional ) {"
        },
        {
            "Word": "immutable",
            "WordID": "3",
            "SentID": 4124,
            "TokenID": "3",
            "Context": "if ( ! immutable ) {"
        },
        {
            "Word": "immutable",
            "WordID": "4",
            "SentID": 4125,
            "TokenID": "0",
            "Context": "immutable = immutableType ;"
        },
        {
            "Word": "Mutable",
            "WordID": "1",
            "SentID": 4126,
            "TokenID": "6",
            "Context": "if ( hasAnnotation ( method , Mutable . class ) ) {"
        },
        {
            "Word": "transactional",
            "WordID": "3",
            "SentID": 4127,
            "TokenID": "3",
            "Context": "if ( ! transactional ) {"
        },
        {
            "Word": "immutable",
            "WordID": "5",
            "SentID": 4128,
            "TokenID": "0",
            "Context": "immutable = false ;"
        },
        {
            "Word": "transactional",
            "WordID": "4",
            "SentID": 4130,
            "TokenID": "2",
            "Context": "if ( transactional ) {"
        },
        {
            "Word": "Asynchronous",
            "WordID": "1",
            "SentID": 4133,
            "TokenID": "7",
            "Context": "boolean asynchronousMethod = hasAnnotation ( method , Asynchronous . class ) ;"
        },
        {
            "Word": "remotelyAccessible",
            "WordID": "6",
            "SentID": 4139,
            "TokenID": "2",
            "Context": "if ( remotelyAccessible ) {"
        },
        {
            "Word": "isRemotelyAccessible",
            "WordID": "2",
            "SentID": 4145,
            "TokenID": "4",
            "Context": "if ( managedMethod . isRemotelyAccessible ( ) && netMethodsPool . put ( method . getName ( ) , managedMethod ) != null ) {"
        },
        {
            "Word": "setAccessible",
            "WordID": "2",
            "SentID": 4209,
            "TokenID": "2",
            "Context": "constructor . setAccessible ( true ) ;"
        },
        {
            "Word": "Collection",
            "WordID": "2",
            "SentID": 4211,
            "TokenID": "3",
            "Context": "} private static Collection < Field > scanDependencies ( Class < ? > clazz ) {"
        },
        {
            "Word": "remotelyAccessible",
            "WordID": "7",
            "SentID": 4239,
            "TokenID": "4",
            "Context": "builder . append ( remotelyAccessible ? \"NET\" : \"LOCAL\" ) ;"
        },
        {
            "Word": "StoppableObservable",
            "WordID": "1",
            "SentID": 4303,
            "TokenID": "1",
            "Context": "} StoppableObservable < TEntity > getObservable ( Scheduler scheduler ) {"
        },
        {
            "Word": "getObservable",
            "WordID": "1",
            "SentID": 4303,
            "TokenID": "5",
            "Context": "} StoppableObservable < TEntity > getObservable ( Scheduler scheduler ) {"
        },
        {
            "Word": "templated",
            "WordID": "2",
            "SentID": 4400,
            "TokenID": "2",
            "Context": "if ( templated != null && templated . isBoolean ( ) && templated . asBoolean ( ) ) {"
        },
        {
            "Word": "templated",
            "WordID": "3",
            "SentID": 4400,
            "TokenID": "6",
            "Context": "if ( templated != null && templated . isBoolean ( ) && templated . asBoolean ( ) ) {"
        },
        {
            "Word": "templated",
            "WordID": "4",
            "SentID": 4400,
            "TokenID": "12",
            "Context": "if ( templated != null && templated . isBoolean ( ) && templated . asBoolean ( ) ) {"
        },
        {
            "Word": "remotelyAccessible",
            "WordID": "8",
            "SentID": 4562,
            "TokenID": "2",
            "Context": "if ( remotelyAccessible && ! isPublic ( ) && ! container . isAuthenticated ( ) ) {"
        },
        {
            "Word": "StoppableObservable",
            "WordID": "2",
            "SentID": 4608,
            "TokenID": "1",
            "Context": "} StoppableObservable < TEntity > getObservable ( final long startIndex , Scheduler scheduler ) {"
        },
        {
            "Word": "getObservable",
            "WordID": "2",
            "SentID": 4608,
            "TokenID": "5",
            "Context": "} StoppableObservable < TEntity > getObservable ( final long startIndex , Scheduler scheduler ) {"
        },
        {
            "Word": "threadLocal",
            "WordID": "3",
            "SentID": 4642,
            "TokenID": "0",
            "Context": "threadLocal . set ( inputStream ) ;"
        },
        {
            "Word": "Enumeration",
            "WordID": "1",
            "SentID": 4699,
            "TokenID": "0",
            "Context": "Enumeration < String > headerNames = httpRequest . getHeaderNames ( ) ;"
        },
        {
            "Word": "isTransactional",
            "WordID": "1",
            "SentID": 4826,
            "TokenID": "4",
            "Context": "if ( managedClass . isTransactional ( ) ) {"
        },
        {
            "Word": "Iterable",
            "WordID": "1",
            "SentID": 4833,
            "TokenID": "3",
            "Context": "} public static Iterable < LinkHeader > getLinkHeaders ( HttpResponse response ) {"
        },
        {
            "Word": "Sizeable",
            "WordID": "1",
            "SentID": 4862,
            "TokenID": "6",
            "Context": "filterField . setWidth ( 100 , Sizeable . Unit . PERCENTAGE ) ;"
        },
        {
            "Word": "SimpleFilterable",
            "WordID": "1",
            "SentID": 4864,
            "TokenID": "4",
            "Context": "( ( Container . SimpleFilterable ) container ) . removeContainerFilters ( pid ) ;"
        },
        {
            "Word": "Filterable",
            "WordID": "1",
            "SentID": 4866,
            "TokenID": "4",
            "Context": "( ( Container . Filterable ) container ) . addContainerFilter ( new SimpleStringFilter ( pid , event . getText ( ) , true , false ) ) ;"
        },
        {
            "Word": "Collection",
            "WordID": "4",
            "SentID": 4872,
            "TokenID": "5",
            "Context": "} public void setCandidates ( Collection < T > candidates ) {"
        },
        {
            "Word": "Closeable",
            "WordID": "3",
            "SentID": 4986,
            "TokenID": "0",
            "Context": "Closeable closeable = StreamFactory . getInstance ( inputStream , type ) ;"
        },
        {
            "Word": "threadLocal",
            "WordID": "4",
            "SentID": 4987,
            "TokenID": "0",
            "Context": "threadLocal . set ( closeable ) ;"
        },
        {
            "Word": "closeable",
            "WordID": "2",
            "SentID": 4987,
            "TokenID": "4",
            "Context": "threadLocal . set ( closeable ) ;"
        },
        {
            "Word": "closeable",
            "WordID": "3",
            "SentID": 4988,
            "TokenID": "1",
            "Context": "return closeable ;"
        },
        {
            "Labels": [
                "\"Java Object Manipulation and Connection Management\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "able, ible",
            "Semantic": "Network",
            "Syntactic": "variable",
            "Description": "variables with \"able\" and \"ible\" as substrings, most relating to network operations and a little under half in conditionals.",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Lexicographic",
            "Q6_Answer": "None"
        }
    ],
    "301": [
        {
            "Word": "e",
            "WordID": "1",
            "SentID": 670,
            "TokenID": "3",
            "Context": "catch ( JSONException e ) {"
        },
        {
            "Word": "e",
            "WordID": "4",
            "SentID": 1166,
            "TokenID": "3",
            "Context": "catch ( MemcachedException e ) {"
        },
        {
            "Word": "e",
            "WordID": "5",
            "SentID": 1167,
            "TokenID": "4",
            "Context": "} catch ( TimeoutException e ) {"
        },
        {
            "Word": "e",
            "WordID": "6",
            "SentID": 1207,
            "TokenID": "3",
            "Context": "catch ( NoSuchMethodException e ) {"
        },
        {
            "Word": "e",
            "WordID": "7",
            "SentID": 2708,
            "TokenID": "4",
            "Context": "catch ( final NoSuchAlgorithmException e ) {"
        },
        {
            "Word": "e",
            "WordID": "8",
            "SentID": 3019,
            "TokenID": "4",
            "Context": "} catch ( NoSuchAlgorithmException e ) {"
        },
        {
            "Word": "e",
            "WordID": "9",
            "SentID": 3020,
            "TokenID": "0",
            "Context": "e , FluidClientException . ErrorCode . CRYPTOGRAPHY ) ;"
        },
        {
            "Word": "e",
            "WordID": "10",
            "SentID": 3021,
            "TokenID": "4",
            "Context": "} catch ( KeyManagementException e ) {"
        },
        {
            "Word": "e",
            "WordID": "11",
            "SentID": 3023,
            "TokenID": "4",
            "Context": "} catch ( KeyStoreException e ) {"
        },
        {
            "Word": "e",
            "WordID": "12",
            "SentID": 3024,
            "TokenID": "4",
            "Context": "} catch ( CertificateException e ) {"
        },
        {
            "Word": "e",
            "WordID": "13",
            "SentID": 3035,
            "TokenID": "0",
            "Context": "e . getMessage ( ) ,"
        },
        {
            "Word": "e",
            "WordID": "14",
            "SentID": 3036,
            "TokenID": "0",
            "Context": "e , FluidClientException . ErrorCode . IO_ERROR ) ;"
        },
        {
            "Word": "e",
            "WordID": "15",
            "SentID": 3378,
            "TokenID": "8",
            "Context": "} catch ( SAXException | IOException | ParserConfigurationException e ) {"
        },
        {
            "Word": "e",
            "WordID": "16",
            "SentID": 4002,
            "TokenID": "4",
            "Context": "} catch ( AuthorizationException e ) {"
        },
        {
            "Word": "e",
            "WordID": "17",
            "SentID": 4004,
            "TokenID": "4",
            "Context": "sendNotFound ( context , e ) ;"
        },
        {
            "Word": "e",
            "WordID": "18",
            "SentID": 4006,
            "TokenID": "4",
            "Context": "} catch ( InvocationException e ) {"
        },
        {
            "Word": "e",
            "WordID": "19",
            "SentID": 4007,
            "TokenID": "4",
            "Context": "sendError ( context , e ) ;"
        },
        {
            "Word": "e",
            "WordID": "20",
            "SentID": 4567,
            "TokenID": "4",
            "Context": "throw new InvocationException ( e . getTargetException ( ) ) ;"
        },
        {
            "Word": "e",
            "WordID": "21",
            "SentID": 4583,
            "TokenID": "6",
            "Context": "} catch ( IOException | FileUploadException e ) {"
        },
        {
            "Word": "e",
            "WordID": "22",
            "SentID": 4584,
            "TokenID": "4",
            "Context": "log . error ( e ) ;"
        },
        {
            "Word": "e",
            "WordID": "23",
            "SentID": 4626,
            "TokenID": "4",
            "Context": "throw new BugError ( e ) ;"
        },
        {
            "Word": "e",
            "WordID": "24",
            "SentID": 4742,
            "TokenID": "10",
            "Context": "} catch ( InvalidKeyException | NoSuchPaddingException | BadPaddingException | IllegalBlockSizeException e ) {"
        },
        {
            "Word": "e",
            "WordID": "25",
            "SentID": 4823,
            "TokenID": "4",
            "Context": "throw new InvocationException ( e ) ;"
        },
        {
            "Word": "e",
            "WordID": "26",
            "SentID": 4839,
            "TokenID": "4",
            "Context": "} catch ( SyntaxException e ) {"
        },
        {
            "Word": "e",
            "WordID": "27",
            "SentID": 4956,
            "TokenID": "4",
            "Context": "} catch ( JsonException e ) {"
        },
        {
            "Word": "e",
            "WordID": "28",
            "SentID": 4958,
            "TokenID": "8",
            "Context": "} catch ( JsonException | ClassCastException | UnsupportedEncodingException e ) {"
        },
        {
            "Labels": [
                "\"Single Variable Identifier\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "e",
            "Semantic": "Exception Handling",
            "Syntactic": "object, argument",
            "Description": "objects named \"e\" used as arguments to catch statements in exception handling",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "243": [
        {
            "Word": "getAncestor",
            "WordID": "1",
            "SentID": 682,
            "TokenID": "3",
            "Context": "} public Form getAncestor ("
        },
        {
            "Word": "getAncestor",
            "WordID": "2",
            "SentID": 689,
            "TokenID": "8",
            "Context": "WS . Path . SQLUtil . Version1 . getAncestor ("
        },
        {
            "Word": "getFormAncestor",
            "WordID": "1",
            "SentID": 1028,
            "TokenID": "3",
            "Context": "} public Form getFormAncestor ("
        },
        {
            "Word": "getAncestor",
            "WordID": "3",
            "SentID": 1400,
            "TokenID": "4",
            "Context": "this . sqlUtilClient . getAncestor ("
        },
        {
            "Word": "Interceptor",
            "WordID": "1",
            "SentID": 4084,
            "TokenID": "4",
            "Context": "Class < ? extends Interceptor > classInterceptor = getInterceptorClass ( implementationClass ) ;"
        },
        {
            "Word": "Interceptor",
            "WordID": "2",
            "SentID": 4097,
            "TokenID": "4",
            "Context": "Class < ? extends Interceptor > methodInterceptor = getInterceptorClass ( method ) ;"
        },
        {
            "Word": "declaredConstructor",
            "WordID": "1",
            "SentID": 4202,
            "TokenID": "6",
            "Context": "for ( Constructor < ? > declaredConstructor : declaredConstructors ) {"
        },
        {
            "Word": "declaredConstructor",
            "WordID": "2",
            "SentID": 4203,
            "TokenID": "2",
            "Context": "if ( declaredConstructor . isSynthetic ( ) ) {"
        },
        {
            "Word": "declaredConstructor",
            "WordID": "3",
            "SentID": 4204,
            "TokenID": "2",
            "Context": "if ( declaredConstructor . getParameterTypes ( ) . length == 0 ) {"
        },
        {
            "Word": "declaredConstructor",
            "WordID": "4",
            "SentID": 4205,
            "TokenID": "2",
            "Context": "if ( declaredConstructor . getAnnotation ( Test . class ) != null ) {"
        },
        {
            "Word": "constructor",
            "WordID": "4",
            "SentID": 4209,
            "TokenID": "0",
            "Context": "constructor . setAccessible ( true ) ;"
        },
        {
            "Word": "Interceptor",
            "WordID": "3",
            "SentID": 4257,
            "TokenID": "7",
            "Context": "} private static Class < ? extends Interceptor > getInterceptorClass ( Class < ? > clazz ) {"
        },
        {
            "Word": "Intercepted",
            "WordID": "1",
            "SentID": 4258,
            "TokenID": "0",
            "Context": "Intercepted intercepted = getAnnotation ( clazz , Intercepted . class ) ;"
        },
        {
            "Word": "Intercepted",
            "WordID": "2",
            "SentID": 4258,
            "TokenID": "7",
            "Context": "Intercepted intercepted = getAnnotation ( clazz , Intercepted . class ) ;"
        },
        {
            "Word": "Interceptor",
            "WordID": "4",
            "SentID": 4260,
            "TokenID": "7",
            "Context": "} private static Class < ? extends Interceptor > getInterceptorClass ( Method method ) {"
        },
        {
            "Word": "Intercepted",
            "WordID": "3",
            "SentID": 4261,
            "TokenID": "0",
            "Context": "Intercepted intercepted = getAnnotation ( method , Intercepted . class ) ;"
        },
        {
            "Word": "Intercepted",
            "WordID": "4",
            "SentID": 4261,
            "TokenID": "7",
            "Context": "Intercepted intercepted = getAnnotation ( method , Intercepted . class ) ;"
        },
        {
            "Word": "executor",
            "WordID": "1",
            "SentID": 4333,
            "TokenID": "1",
            "Context": "return executor . execute ( request ) . returnResponse ( ) ;"
        },
        {
            "Word": "registerInstanceProcessor",
            "WordID": "1",
            "SentID": 4430,
            "TokenID": "3",
            "Context": "} protected void registerInstanceProcessor ( ) {"
        },
        {
            "Word": "registerInstanceProcessor",
            "WordID": "2",
            "SentID": 4431,
            "TokenID": "0",
            "Context": "registerInstanceProcessor ( new InstanceFieldsInjectionProcessor ( ) ) ;"
        },
        {
            "Word": "InstanceFieldsInjectionProcessor",
            "WordID": "1",
            "SentID": 4431,
            "TokenID": "3",
            "Context": "registerInstanceProcessor ( new InstanceFieldsInjectionProcessor ( ) ) ;"
        },
        {
            "Word": "registerInstanceProcessor",
            "WordID": "3",
            "SentID": 4432,
            "TokenID": "0",
            "Context": "registerInstanceProcessor ( new InstanceFieldsInitializationProcessor ( ) ) ;"
        },
        {
            "Word": "InstanceFieldsInitializationProcessor",
            "WordID": "1",
            "SentID": 4432,
            "TokenID": "3",
            "Context": "registerInstanceProcessor ( new InstanceFieldsInitializationProcessor ( ) ) ;"
        },
        {
            "Word": "registerInstanceProcessor",
            "WordID": "4",
            "SentID": 4433,
            "TokenID": "0",
            "Context": "registerInstanceProcessor ( new ConfigurableInstanceProcessor ( ) ) ;"
        },
        {
            "Word": "ConfigurableInstanceProcessor",
            "WordID": "1",
            "SentID": 4433,
            "TokenID": "3",
            "Context": "registerInstanceProcessor ( new ConfigurableInstanceProcessor ( ) ) ;"
        },
        {
            "Word": "registerInstanceProcessor",
            "WordID": "5",
            "SentID": 4434,
            "TokenID": "0",
            "Context": "registerInstanceProcessor ( new PostConstructInstanceProcessor ( ) ) ;"
        },
        {
            "Word": "PostConstructInstanceProcessor",
            "WordID": "1",
            "SentID": 4434,
            "TokenID": "3",
            "Context": "registerInstanceProcessor ( new PostConstructInstanceProcessor ( ) ) ;"
        },
        {
            "Word": "registerInstanceProcessor",
            "WordID": "6",
            "SentID": 4435,
            "TokenID": "0",
            "Context": "registerInstanceProcessor ( new CronMethodsProcessor ( cronManager ) ) ;"
        },
        {
            "Word": "CronMethodsProcessor",
            "WordID": "1",
            "SentID": 4435,
            "TokenID": "3",
            "Context": "registerInstanceProcessor ( new CronMethodsProcessor ( cronManager ) ) ;"
        },
        {
            "Word": "registerInstanceProcessor",
            "WordID": "7",
            "SentID": 4436,
            "TokenID": "0",
            "Context": "registerInstanceProcessor ( new LoggerInstanceProcessor ( ) ) ;"
        },
        {
            "Word": "LoggerInstanceProcessor",
            "WordID": "1",
            "SentID": 4436,
            "TokenID": "3",
            "Context": "registerInstanceProcessor ( new LoggerInstanceProcessor ( ) ) ;"
        },
        {
            "Word": "registerInstanceProcessor",
            "WordID": "8",
            "SentID": 4444,
            "TokenID": "3",
            "Context": "} protected void registerInstanceProcessor ( InstanceProcessor instanceProcessor ) {"
        },
        {
            "Word": "InstanceProcessor",
            "WordID": "1",
            "SentID": 4444,
            "TokenID": "5",
            "Context": "} protected void registerInstanceProcessor ( InstanceProcessor instanceProcessor ) {"
        },
        {
            "Word": "instanceProcessor",
            "WordID": "1",
            "SentID": 4444,
            "TokenID": "6",
            "Context": "} protected void registerInstanceProcessor ( InstanceProcessor instanceProcessor ) {"
        },
        {
            "Word": "InstanceProcessor",
            "WordID": "2",
            "SentID": 4445,
            "TokenID": "2",
            "Context": "for ( InstanceProcessor existingInstanceProcessoor : instanceProcessors ) {"
        },
        {
            "Word": "existingInstanceProcessoor",
            "WordID": "1",
            "SentID": 4445,
            "TokenID": "3",
            "Context": "for ( InstanceProcessor existingInstanceProcessoor : instanceProcessors ) {"
        },
        {
            "Word": "existingInstanceProcessoor",
            "WordID": "2",
            "SentID": 4446,
            "TokenID": "2",
            "Context": "if ( existingInstanceProcessoor . getClass ( ) . equals ( instanceProcessor . getClass ( ) ) ) {"
        },
        {
            "Word": "instanceProcessor",
            "WordID": "2",
            "SentID": 4446,
            "TokenID": "10",
            "Context": "if ( existingInstanceProcessoor . getClass ( ) . equals ( instanceProcessor . getClass ( ) ) ) {"
        },
        {
            "Word": "registerClassProcessor",
            "WordID": "1",
            "SentID": 4448,
            "TokenID": "3",
            "Context": "} protected void registerClassProcessor ( ClassProcessor classProcessor ) {"
        },
        {
            "Word": "ClassProcessor",
            "WordID": "1",
            "SentID": 4448,
            "TokenID": "5",
            "Context": "} protected void registerClassProcessor ( ClassProcessor classProcessor ) {"
        },
        {
            "Word": "classProcessor",
            "WordID": "1",
            "SentID": 4448,
            "TokenID": "6",
            "Context": "} protected void registerClassProcessor ( ClassProcessor classProcessor ) {"
        },
        {
            "Word": "ClassProcessor",
            "WordID": "2",
            "SentID": 4449,
            "TokenID": "2",
            "Context": "for ( ClassProcessor existingClassProcessoor : classProcessors ) {"
        },
        {
            "Word": "existingClassProcessoor",
            "WordID": "1",
            "SentID": 4449,
            "TokenID": "3",
            "Context": "for ( ClassProcessor existingClassProcessoor : classProcessors ) {"
        },
        {
            "Word": "existingClassProcessoor",
            "WordID": "2",
            "SentID": 4450,
            "TokenID": "2",
            "Context": "if ( existingClassProcessoor . getClass ( ) . equals ( classProcessor . getClass ( ) ) ) {"
        },
        {
            "Word": "classProcessor",
            "WordID": "2",
            "SentID": 4450,
            "TokenID": "10",
            "Context": "if ( existingClassProcessoor . getClass ( ) . equals ( classProcessor . getClass ( ) ) ) {"
        },
        {
            "Word": "classDescriptor",
            "WordID": "2",
            "SentID": 4457,
            "TokenID": "3",
            "Context": "if ( ! classDescriptor . hasChildren ( ) ) {"
        },
        {
            "Word": "classDescriptor",
            "WordID": "3",
            "SentID": 4458,
            "TokenID": "3",
            "Context": "if ( ! classDescriptor . hasAttribute ( \"interface\" ) ) {"
        },
        {
            "Word": "classDescriptor",
            "WordID": "4",
            "SentID": 4459,
            "TokenID": "0",
            "Context": "classDescriptor . setAttribute ( \"interface\" , classDescriptor . getAttribute ( \"class\" ) ) ;"
        },
        {
            "Word": "classDescriptor",
            "WordID": "5",
            "SentID": 4459,
            "TokenID": "6",
            "Context": "classDescriptor . setAttribute ( \"interface\" , classDescriptor . getAttribute ( \"class\" ) ) ;"
        },
        {
            "Word": "classDescriptor",
            "WordID": "6",
            "SentID": 4460,
            "TokenID": "3",
            "Context": "String interfaceClass = classDescriptor . getAttribute ( \"interface\" ) ;"
        },
        {
            "Word": "classDescriptor",
            "WordID": "9",
            "SentID": 4466,
            "TokenID": "3",
            "Context": "for ( Config classDescriptor : classDescriptors ) {"
        },
        {
            "Word": "classDescriptor",
            "WordID": "10",
            "SentID": 4467,
            "TokenID": "8",
            "Context": "ManagedClass managedClass = new ManagedClass ( this , classDescriptor ) ;"
        },
        {
            "Word": "ClassProcessor",
            "WordID": "3",
            "SentID": 4470,
            "TokenID": "2",
            "Context": "for ( ClassProcessor classProcessor : classProcessors ) {"
        },
        {
            "Word": "classProcessor",
            "WordID": "4",
            "SentID": 4470,
            "TokenID": "3",
            "Context": "for ( ClassProcessor classProcessor : classProcessors ) {"
        },
        {
            "Word": "classProcessor",
            "WordID": "5",
            "SentID": 4471,
            "TokenID": "0",
            "Context": "classProcessor . postProcessClass ( managedClass ) ;"
        },
        {
            "Word": "argumentsProcessor",
            "WordID": "1",
            "SentID": 4508,
            "TokenID": "2",
            "Context": "args = argumentsProcessor . preProcessArguments ( managedClass , args ) ;"
        },
        {
            "Word": "InstanceProcessor",
            "WordID": "3",
            "SentID": 4526,
            "TokenID": "2",
            "Context": "for ( InstanceProcessor instanceProcessor : instanceProcessors ) {"
        },
        {
            "Word": "instanceProcessor",
            "WordID": "4",
            "SentID": 4526,
            "TokenID": "3",
            "Context": "for ( InstanceProcessor instanceProcessor : instanceProcessors ) {"
        },
        {
            "Word": "instanceProcessor",
            "WordID": "5",
            "SentID": 4527,
            "TokenID": "0",
            "Context": "instanceProcessor . postProcessInstance ( managedClass , pojoInstance ) ;"
        },
        {
            "Word": "argumentsProcessor",
            "WordID": "2",
            "SentID": 4564,
            "TokenID": "2",
            "Context": "args = argumentsProcessor . preProcessArguments ( this , args ) ;"
        },
        {
            "Word": "PropertyDescriptor",
            "WordID": "1",
            "SentID": 4995,
            "TokenID": "4",
            "Context": "public static List < PropertyDescriptor > getProperties ( Class < ? > beanType ) {"
        },
        {
            "Word": "PropertyDescriptor",
            "WordID": "2",
            "SentID": 4996,
            "TokenID": "2",
            "Context": "LinkedList < PropertyDescriptor > properties = new LinkedList < > ( ) ;"
        },
        {
            "Word": "PropertyDescriptor",
            "WordID": "3",
            "SentID": 4997,
            "TokenID": "2",
            "Context": "for ( PropertyDescriptor property : Introspector . getBeanInfo ( beanType ) . getPropertyDescriptors ( ) ) {"
        },
        {
            "Word": "Introspector",
            "WordID": "1",
            "SentID": 4997,
            "TokenID": "5",
            "Context": "for ( PropertyDescriptor property : Introspector . getBeanInfo ( beanType ) . getPropertyDescriptors ( ) ) {"
        },
        {
            "Labels": [
                "\"Java Reflection and Instance Processing\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Processor, Constructor, Ancestor, Descriptor",
            "Syntactic": "Object",
            "Description": "objects with \"processor\" or \"constructor\" as a substring",
            "Semantic": "",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Lexicographic",
            "Q6_Answer": "None"
        }
    ],
    "83": [
        {
            "Word": "StringBuilder",
            "WordID": "2",
            "SentID": 704,
            "TokenID": "1",
            "Context": "new StringBuilder ( Character . toString ("
        },
        {
            "Word": "DatatypeConverter",
            "WordID": "1",
            "SentID": 752,
            "TokenID": "1",
            "Context": "return DatatypeConverter . printHexBinary ( bytesParam ) . toUpperCase ( ) ;"
        },
        {
            "Word": "builder",
            "WordID": "2",
            "SentID": 786,
            "TokenID": "3",
            "Context": "String selectVal = builder . toString ( ) ;"
        },
        {
            "Word": "SyntaxFactory",
            "WordID": "1",
            "SentID": 999,
            "TokenID": "3",
            "Context": "ISyntax syntax = SyntaxFactory . getInstance ( ) . getSyntaxFor ("
        },
        {
            "Word": "SyntaxFactory",
            "WordID": "2",
            "SentID": 1820,
            "TokenID": "3",
            "Context": "ISyntax syntax = SyntaxFactory . getInstance ( ) . getFieldValueSyntaxFor ("
        },
        {
            "Word": "SyntaxFactory",
            "WordID": "3",
            "SentID": 1859,
            "TokenID": "3",
            "Context": "ISyntax syntaxForFormContInfo = SyntaxFactory . getInstance ( ) . getSyntaxFor ("
        },
        {
            "Word": "reader",
            "WordID": "2",
            "SentID": 1936,
            "TokenID": "5",
            "Context": "while ( ( readLine = reader . readLine ( ) ) != null ) {"
        },
        {
            "Word": "errorReader",
            "WordID": "2",
            "SentID": 1940,
            "TokenID": "5",
            "Context": "while ( ( readLine = errorReader . readLine ( ) ) != null ) {"
        },
        {
            "Word": "createIndexRequestBuilder",
            "WordID": "2",
            "SentID": 2450,
            "TokenID": "0",
            "Context": "createIndexRequestBuilder . execute ( ) . actionGet ( ) ;"
        },
        {
            "Word": "RequestBuilder",
            "WordID": "2",
            "SentID": 2939,
            "TokenID": "3",
            "Context": "RequestBuilder builder = RequestBuilder . post ( ) . setUri ("
        },
        {
            "Word": "builder",
            "WordID": "5",
            "SentID": 2940,
            "TokenID": "6",
            "Context": "builder = this . addParamsToBuildFromString ( builder , stringParam ) ;"
        },
        {
            "Word": "builder",
            "WordID": "6",
            "SentID": 2941,
            "TokenID": "2",
            "Context": "uriRequest = builder . build ( ) ;"
        },
        {
            "Word": "RequestBuilder",
            "WordID": "4",
            "SentID": 2945,
            "TokenID": "3",
            "Context": "RequestBuilder builder = RequestBuilder . put ( ) . setUri ("
        },
        {
            "Word": "URLEncoder",
            "WordID": "1",
            "SentID": 2991,
            "TokenID": "1",
            "Context": "return URLEncoder . encode ( textParam , ENCODING_UTF_8 ) ;"
        },
        {
            "Word": "builder",
            "WordID": "9",
            "SentID": 3006,
            "TokenID": "0",
            "Context": "builder . loadTrustMaterial ( new SSLTrustAll ( ) ) ;"
        },
        {
            "Word": "builder",
            "WordID": "10",
            "SentID": 3011,
            "TokenID": "0",
            "Context": "builder . loadTrustMaterial ("
        },
        {
            "Word": "builder",
            "WordID": "11",
            "SentID": 3016,
            "TokenID": "3",
            "Context": "SSLContext sslContext = builder . build ( ) ;"
        },
        {
            "Word": "DocumentBuilderFactory",
            "WordID": "1",
            "SentID": 3514,
            "TokenID": "3",
            "Context": "Document doc = DocumentBuilderFactory . newInstance ( ) . newDocumentBuilder ( ) . parse ( filePath ) ;"
        },
        {
            "Word": "newDocumentBuilder",
            "WordID": "1",
            "SentID": 3514,
            "TokenID": "9",
            "Context": "Document doc = DocumentBuilderFactory . newInstance ( ) . newDocumentBuilder ( ) . parse ( filePath ) ;"
        },
        {
            "Word": "getVisitor",
            "WordID": "1",
            "SentID": 3539,
            "TokenID": "6",
            "Context": "childElement . accept ( element . getVisitor ( ) ) ;"
        },
        {
            "Word": "visitor",
            "WordID": "1",
            "SentID": 3615,
            "TokenID": "0",
            "Context": "visitor . replaceUnsolvedAttributes ( element ) ;"
        },
        {
            "Word": "SimpleFileVisitor",
            "WordID": "1",
            "SentID": 3660,
            "TokenID": "1",
            "Context": "new SimpleFileVisitor < Path > ( ) {"
        },
        {
            "Word": "builder",
            "WordID": "13",
            "SentID": 3694,
            "TokenID": "0",
            "Context": "builder . addPropertyName ( systemProperty . name ( ) ) ;"
        },
        {
            "Word": "builder",
            "WordID": "14",
            "SentID": 3696,
            "TokenID": "0",
            "Context": "builder . addRestoreProperty ("
        },
        {
            "Word": "builder",
            "WordID": "15",
            "SentID": 3699,
            "TokenID": "4",
            "Context": "writeRestoreContext ( extensionContext , builder . build ( ) ) ;"
        },
        {
            "Word": "argumentsReaderFactory",
            "WordID": "1",
            "SentID": 3998,
            "TokenID": "2",
            "Context": "argumentsReader = argumentsReaderFactory . getArgumentsReader ( httpRequest , formalParameters ) ;"
        },
        {
            "Word": "argumentsReader",
            "WordID": "3",
            "SentID": 3999,
            "TokenID": "5",
            "Context": "Object [ ] arguments = argumentsReader . read ( httpRequest , formalParameters ) ;"
        },
        {
            "Word": "argumentsReader",
            "WordID": "5",
            "SentID": 4009,
            "TokenID": "0",
            "Context": "argumentsReader . clean ( ) ;"
        },
        {
            "Word": "valueWriterFactory",
            "WordID": "1",
            "SentID": 4013,
            "TokenID": "3",
            "Context": "ContentType contentType = valueWriterFactory . getContentTypeForValue ( value ) ;"
        },
        {
            "Word": "valueWriterFactory",
            "WordID": "2",
            "SentID": 4016,
            "TokenID": "3",
            "Context": "ValueWriter valueWriter = valueWriterFactory . getValueWriter ( contentType ) ;"
        },
        {
            "Word": "valueWriter",
            "WordID": "2",
            "SentID": 4017,
            "TokenID": "0",
            "Context": "valueWriter . write ( httpResponse , value ) ;"
        },
        {
            "Word": "builder",
            "WordID": "26",
            "SentID": 4284,
            "TokenID": "4",
            "Context": "log . error ( builder . toString ( ) ) ;"
        },
        {
            "Word": "serializer",
            "WordID": "1",
            "SentID": 4348,
            "TokenID": "3",
            "Context": "JsonNode messageNode = serializer . readTree ( body ) . get ( \"message\" ) ;"
        },
        {
            "Word": "serializer",
            "WordID": "2",
            "SentID": 4373,
            "TokenID": "2",
            "Context": "handleBodyLinks ( serializer . readTree ( entity . getContent ( ) ) , links , linkTemplates ) ;"
        },
        {
            "Word": "remoteFactory",
            "WordID": "3",
            "SentID": 4429,
            "TokenID": "1",
            "Context": "return remoteFactory . getRemoteInstance ( implementationURL , interfaceClass ) ;"
        },
        {
            "Word": "scopeFactory",
            "WordID": "3",
            "SentID": 4440,
            "TokenID": "4",
            "Context": "final InstanceScope instanceScope = scopeFactory . getInstanceScope ( ) ;"
        },
        {
            "Word": "scopeFactory",
            "WordID": "6",
            "SentID": 4492,
            "TokenID": "3",
            "Context": "Object instance = scopeFactory . getInstance ( instanceKey ) ;"
        },
        {
            "Word": "instanceFactory",
            "WordID": "4",
            "SentID": 4509,
            "TokenID": "1",
            "Context": "return instanceFactory . newInstance ( managedClass , args ) ;"
        },
        {
            "Word": "scopeFactory",
            "WordID": "10",
            "SentID": 4513,
            "TokenID": "2",
            "Context": "instance = scopeFactory . getInstance ( instanceKey ) ;"
        },
        {
            "Word": "instanceFactory",
            "WordID": "5",
            "SentID": 4515,
            "TokenID": "2",
            "Context": "instance = instanceFactory . newInstance ( managedClass , args ) ;"
        },
        {
            "Word": "scopeFactory",
            "WordID": "11",
            "SentID": 4516,
            "TokenID": "0",
            "Context": "scopeFactory . persistInstance ( instanceKey , instance ) ;"
        },
        {
            "Word": "ConverterRegistry",
            "WordID": "1",
            "SentID": 4537,
            "TokenID": "0",
            "Context": "ConverterRegistry . getInstance ( ) . registerConverter ( valueType , converterClass ) ;"
        },
        {
            "Word": "argumentsReaderFactory",
            "WordID": "2",
            "SentID": 4635,
            "TokenID": "3",
            "Context": "ArgumentPartReader reader = argumentsReaderFactory . getArgumentPartReader ( contentType , parameterType ) ;"
        },
        {
            "Word": "StreamFactory",
            "WordID": "1",
            "SentID": 4636,
            "TokenID": "3",
            "Context": "boolean streamArgument = StreamFactory . isStream ( parameterType ) ;"
        },
        {
            "Word": "argumentPartReader",
            "WordID": "2",
            "SentID": 4639,
            "TokenID": "5",
            "Context": "arguments [ argumentIndex ] = argumentPartReader . read ( inputStream , parameterType ) ;"
        },
        {
            "Word": "documentBuilder",
            "WordID": "1",
            "SentID": 4657,
            "TokenID": "1",
            "Context": "return documentBuilder . loadXML ( inputStream ) ;"
        },
        {
            "Word": "appFactory",
            "WordID": "1",
            "SentID": 4664,
            "TokenID": "3",
            "Context": "T instance = appFactory . getInstance ( interfaceClass ) ;"
        },
        {
            "Word": "ConverterRegistry",
            "WordID": "2",
            "SentID": 4734,
            "TokenID": "1",
            "Context": "return ConverterRegistry . getConverter ( ) . asObject ( value , type ) ;"
        },
        {
            "Word": "getAppFactory",
            "WordID": "2",
            "SentID": 4842,
            "TokenID": "1",
            "Context": "return getAppFactory ( ) . getInstance ( interfaceClass , args ) ;"
        },
        {
            "Word": "getAppFactory",
            "WordID": "3",
            "SentID": 4844,
            "TokenID": "1",
            "Context": "return getAppFactory ( ) . getInstance ( instanceName , interfaceClass , args ) ;"
        },
        {
            "Word": "getAppFactory",
            "WordID": "4",
            "SentID": 4846,
            "TokenID": "1",
            "Context": "return getAppFactory ( ) . getOptionalInstance ( interfaceClass , args ) ;"
        },
        {
            "Word": "getAppFactory",
            "WordID": "5",
            "SentID": 4848,
            "TokenID": "1",
            "Context": "return getAppFactory ( ) . getRemoteInstance ( implementationURL , interfaceClass ) ;"
        },
        {
            "Word": "reader",
            "WordID": "11",
            "SentID": 4879,
            "TokenID": "0",
            "Context": "reader . setContentHandler ( loader ) ;"
        },
        {
            "Word": "reader",
            "WordID": "14",
            "SentID": 4900,
            "TokenID": "3",
            "Context": "int b = reader . read ( ) ;"
        },
        {
            "Word": "ConverterRegistry",
            "WordID": "3",
            "SentID": 4933,
            "TokenID": "2",
            "Context": "if ( ConverterRegistry . hasType ( type ) ) {"
        },
        {
            "Word": "ConverterRegistry",
            "WordID": "4",
            "SentID": 4934,
            "TokenID": "1",
            "Context": "return ConverterRegistry . getConverter ( ) . asObject ( value , ( Class < T > ) type ) ;"
        },
        {
            "Word": "ConverterRegistry",
            "WordID": "5",
            "SentID": 4945,
            "TokenID": "3",
            "Context": "Converter converter = ConverterRegistry . getConverter ( ) ;"
        },
        {
            "Word": "reader",
            "WordID": "16",
            "SentID": 4955,
            "TokenID": "5",
            "Context": "return json . parse ( reader , formalParameters ) ;"
        },
        {
            "Word": "StreamFactory",
            "WordID": "2",
            "SentID": 4986,
            "TokenID": "3",
            "Context": "Closeable closeable = StreamFactory . getInstance ( inputStream , type ) ;"
        },
        {
            "Labels": [
                "\"Java Object Manipulation and Data Conversion Operations\""
            ],
            "Meaningful": "I don't know",
            "Lexicographic": "Factory",
            "Syntactic": "objects",
            "Semantic": "Configuration",
            "Description": "miscellaneous objects, many have \"Factory\" in the name and relate to configuration",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Lexicographic",
            "Q6_Answer": "None"
        }
    ],
    "414": [
        {
            "Word": "0",
            "WordID": "13",
            "SentID": 705,
            "TokenID": "6",
            "Context": "Character . toLowerCase ( original [ 0 ] ) ) ) ;"
        },
        {
            "Word": "0",
            "WordID": "15",
            "SentID": 724,
            "TokenID": "5",
            "Context": "return toGoeSafe ( latitudeAndLongitude [ 0 ] ) ;"
        },
        {
            "Word": "0",
            "WordID": "16",
            "SentID": 729,
            "TokenID": "5",
            "Context": "return toDoubleSafe ( latitudeAndLongitude [ 0 ] ) ;"
        },
        {
            "Word": "0",
            "WordID": "43",
            "SentID": 1930,
            "TokenID": "12",
            "Context": "process = Runtime . getRuntime ( ) . exec ( commandParams [ 0 ] ) ;"
        },
        {
            "Word": "0",
            "WordID": "45",
            "SentID": 1944,
            "TokenID": "4",
            "Context": "\"<unknown>\" : commandParams [ 0 ] ;"
        },
        {
            "Word": "0",
            "WordID": "66",
            "SentID": 2969,
            "TokenID": "5",
            "Context": "String name = nameValuePairArr [ 0 ] ;"
        },
        {
            "Word": "0",
            "WordID": "74",
            "SentID": 3781,
            "TokenID": "2",
            "Context": "num [ 0 ] ++ ;"
        },
        {
            "Word": "0",
            "WordID": "75",
            "SentID": 3800,
            "TokenID": "8",
            "Context": "File path = new File ( args [ 0 ] ) ;"
        },
        {
            "Word": "0",
            "WordID": "89",
            "SentID": 3930,
            "TokenID": "4",
            "Context": "words = args [ 0 ] ;"
        },
        {
            "Word": "0",
            "WordID": "91",
            "SentID": 3953,
            "TokenID": "8",
            "Context": "StringBuilder interfaceNames = new StringBuilder ( interfaceClasses [ 0 ] . getName ( ) ) ;"
        },
        {
            "Word": "0",
            "WordID": "92",
            "SentID": 3962,
            "TokenID": "4",
            "Context": "if ( formalParameters [ 0 ] instanceof ParameterizedType ) {"
        },
        {
            "Word": "0",
            "WordID": "93",
            "SentID": 3963,
            "TokenID": "14",
            "Context": "Class < ? > type = ( Class < ? > ) formalParameters [ 0 ] ;"
        },
        {
            "Word": "0",
            "WordID": "94",
            "SentID": 3966,
            "TokenID": "2",
            "Context": "arguments [ 0 ] = new FormImpl ( httpRequest ) ;"
        },
        {
            "Word": "0",
            "WordID": "95",
            "SentID": 3968,
            "TokenID": "2",
            "Context": "arguments [ 0 ] = new FormIteratorImpl ( httpRequest ) ;"
        },
        {
            "Word": "0",
            "WordID": "96",
            "SentID": 3971,
            "TokenID": "2",
            "Context": "arguments [ 0 ] = form . getUploadedFile ( ) ;"
        },
        {
            "Word": "0",
            "WordID": "97",
            "SentID": 3973,
            "TokenID": "10",
            "Context": "threadLocal . set ( ( Closeable ) ( arguments [ 0 ] = getUploadStream ( httpRequest , formalParameters ) ) ) ;"
        },
        {
            "Word": "0",
            "WordID": "98",
            "SentID": 3975,
            "TokenID": "10",
            "Context": "threadLocal . set ( ( Closeable ) ( arguments [ 0 ] = getUploadStream ( httpRequest , formalParameters ) . openStream ( ) ) ) ;"
        },
        {
            "Word": "0",
            "WordID": "99",
            "SentID": 3976,
            "TokenID": "2",
            "Context": "arguments [ 0 ] = new FormObject ( httpRequest , type ) . getValue ( ) ;"
        },
        {
            "Word": "0",
            "WordID": "106",
            "SentID": 4208,
            "TokenID": "4",
            "Context": "constructor = declaredConstructors [ 0 ] ;"
        },
        {
            "Word": "0",
            "WordID": "112",
            "SentID": 4590,
            "TokenID": "11",
            "Context": "return getArgumentsReader ( httpRequest . getContentType ( ) , formalParameters [ 0 ] ) ;"
        },
        {
            "Word": "0",
            "WordID": "115",
            "SentID": 4654,
            "TokenID": "16",
            "Context": "return new Object [ ] { read ( httpRequest . getInputStream ( ) , formalParameters [ 0 ] ) } ;"
        },
        {
            "Word": "0",
            "WordID": "117",
            "SentID": 4690,
            "TokenID": "7",
            "Context": "return httpRequest . getSession ( create [ 0 ] ) ;"
        },
        {
            "Word": "0",
            "WordID": "119",
            "SentID": 4871,
            "TokenID": "10",
            "Context": "return ( I ) Classes . loadService ( interfaceClasses [ 0 ] ) ;"
        },
        {
            "Word": "0",
            "WordID": "123",
            "SentID": 4950,
            "TokenID": "6",
            "Context": "final Type type = formalParameters [ 0 ] ;"
        },
        {
            "Word": "0",
            "WordID": "126",
            "SentID": 4976,
            "TokenID": "2",
            "Context": "args [ 0 ] = ( ( VarArgs < ? > ) args [ 0 ] ) . getArguments ( ) ;"
        },
        {
            "Word": "0",
            "WordID": "127",
            "SentID": 4976,
            "TokenID": "14",
            "Context": "args [ 0 ] = ( ( VarArgs < ? > ) args [ 0 ] ) . getArguments ( ) ;"
        },
        {
            "Labels": [
                "\"Initialization of Zero Value\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "Zero",
            "Semantic": "Indexing",
            "Lexicographic": "0",
            "Description": "integer 0 used to index the first element of an array",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "471": [
        {
            "Word": "==",
            "WordID": "55",
            "SentID": 721,
            "TokenID": "9",
            "Context": "if ( latitudeAndLongitude == null || latitudeAndLongitude . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "60",
            "SentID": 750,
            "TokenID": "5",
            "Context": "if ( bytesParam . length == 0 )"
        },
        {
            "Word": "==",
            "WordID": "81",
            "SentID": 1073,
            "TokenID": "3",
            "Context": "if ( formContStateId == 1 )"
        },
        {
            "Word": "==",
            "WordID": "82",
            "SentID": 1075,
            "TokenID": "4",
            "Context": "else if ( formContStateId == 2 )"
        },
        {
            "Word": "==",
            "WordID": "84",
            "SentID": 1082,
            "TokenID": "3",
            "Context": "if ( formContFlowStateId == 1 ) {"
        },
        {
            "Word": "==",
            "WordID": "85",
            "SentID": 1085,
            "TokenID": "4",
            "Context": "else if ( formContFlowStateId == 2 ) {"
        },
        {
            "Word": "==",
            "WordID": "86",
            "SentID": 1087,
            "TokenID": "4",
            "Context": "else if ( formContFlowStateId == 3 ) {"
        },
        {
            "Word": "==",
            "WordID": "87",
            "SentID": 1089,
            "TokenID": "4",
            "Context": "else if ( formContFlowStateId == 4 ) {"
        },
        {
            "Word": "==",
            "WordID": "88",
            "SentID": 1091,
            "TokenID": "4",
            "Context": "else if ( formContFlowStateId == 5 ) {"
        },
        {
            "Word": "==",
            "WordID": "102",
            "SentID": 1248,
            "TokenID": "3",
            "Context": "formToGetDescendantsForParam . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "126",
            "SentID": 1485,
            "TokenID": "3",
            "Context": "formsToFetchForLocalCacheArrParam . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "137",
            "SentID": 1790,
            "TokenID": "3",
            "Context": "fieldMapping . dataType == UtilGlobal . FieldTypeId . _7_TABLE_FIELD ) {"
        },
        {
            "Word": "==",
            "WordID": "142",
            "SentID": 1925,
            "TokenID": "9",
            "Context": "if ( commandParams == null || commandParams . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "143",
            "SentID": 1929,
            "TokenID": "5",
            "Context": "if ( commandParams . length == 1 ) {"
        },
        {
            "Word": "==",
            "WordID": "145",
            "SentID": 1943,
            "TokenID": "11",
            "Context": "String commandString = ( commandParams == null || commandParams . length == 0 ) ?"
        },
        {
            "Word": "==",
            "WordID": "158",
            "SentID": 2018,
            "TokenID": "15",
            "Context": "if ( fieldNameParam == null || fieldNameParam . trim ( ) . length ( ) == 0 )"
        },
        {
            "Word": "==",
            "WordID": "161",
            "SentID": 2025,
            "TokenID": "23",
            "Context": "if ( field . getFieldName ( ) == null || field . getFieldName ( ) . trim ( ) . length ( ) == 0 )"
        },
        {
            "Word": "==",
            "WordID": "183",
            "SentID": 2255,
            "TokenID": "5",
            "Context": "if ( bytesToConvert . length == 0 )"
        },
        {
            "Word": "==",
            "WordID": "194",
            "SentID": 2439,
            "TokenID": "15",
            "Context": "if ( parentTypeParam == null || parentTypeParam . trim ( ) . length ( ) == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "207",
            "SentID": 2705,
            "TokenID": "9",
            "Context": "if ( dataParam == null || dataParam . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "209",
            "SentID": 2725,
            "TokenID": "11",
            "Context": "if ( webServiceURLParam . trim ( ) . length ( ) == 0 )"
        },
        {
            "Word": "==",
            "WordID": "228",
            "SentID": 2937,
            "TokenID": "3",
            "Context": "if ( httpMethodParam == HttpMethod . POST ) {"
        },
        {
            "Word": "==",
            "WordID": "229",
            "SentID": 2938,
            "TokenID": "3",
            "Context": "if ( contentTypeParam == ContentType . APPLICATION_FORM_URLENCODED ) {"
        },
        {
            "Word": "==",
            "WordID": "230",
            "SentID": 2944,
            "TokenID": "5",
            "Context": "} else if ( httpMethodParam == HttpMethod . PUT ) {"
        },
        {
            "Word": "==",
            "WordID": "231",
            "SentID": 2947,
            "TokenID": "5",
            "Context": "} else if ( httpMethodParam == HttpMethod . DELETE ) {"
        },
        {
            "Word": "==",
            "WordID": "233",
            "SentID": 2977,
            "TokenID": "3",
            "Context": "if ( status == 404 ) {"
        },
        {
            "Word": "==",
            "WordID": "235",
            "SentID": 2984,
            "TokenID": "5",
            "Context": "} else if ( status == 400 ) {"
        },
        {
            "Word": "==",
            "WordID": "237",
            "SentID": 2995,
            "TokenID": "7",
            "Context": "if ( flowJobExcept . getErrorCode ( ) == FluidClientException . ErrorCode . CONNECT_ERROR ) {"
        },
        {
            "Word": "==",
            "WordID": "249",
            "SentID": 3120,
            "TokenID": "5",
            "Context": "if ( formsToGetFieldListingForForParam . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "265",
            "SentID": 3433,
            "TokenID": "2",
            "Context": "return o2Value == o1Value ;"
        },
        {
            "Word": "==",
            "WordID": "267",
            "SentID": 3534,
            "TokenID": "7",
            "Context": "if ( child . getNodeType ( ) == Node . ELEMENT_NODE ) {"
        },
        {
            "Word": "==",
            "WordID": "268",
            "SentID": 3560,
            "TokenID": "7",
            "Context": "if ( child . getNodeType ( ) == Node . TEXT_NODE ) {"
        },
        {
            "Word": "==",
            "WordID": "279",
            "SentID": 3914,
            "TokenID": "3",
            "Context": "if ( tailLen == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "280",
            "SentID": 3918,
            "TokenID": "3",
            "Context": "if ( tailLen == 0 || cn == null ) {"
        },
        {
            "Word": "==",
            "WordID": "287",
            "SentID": 4020,
            "TokenID": "3",
            "Context": "if ( queryParametersIndex == - 1 ) {"
        },
        {
            "Word": "==",
            "WordID": "288",
            "SentID": 4023,
            "TokenID": "3",
            "Context": "if ( extensionIndex == - 1 ) {"
        },
        {
            "Word": "==",
            "WordID": "290",
            "SentID": 4042,
            "TokenID": "3",
            "Context": "if ( valueSeparatorIndex == - 1 ) {"
        },
        {
            "Word": "==",
            "WordID": "291",
            "SentID": 4046,
            "TokenID": "3",
            "Context": "if ( parametersSeparatorIndex == - 1 ) {"
        },
        {
            "Word": "==",
            "WordID": "292",
            "SentID": 4048,
            "TokenID": "3",
            "Context": "if ( valueSeparatorIndex == parametersSeparatorIndex ) {"
        },
        {
            "Word": "==",
            "WordID": "303",
            "SentID": 4201,
            "TokenID": "5",
            "Context": "if ( declaredConstructors . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "304",
            "SentID": 4204,
            "TokenID": "9",
            "Context": "if ( declaredConstructor . getParameterTypes ( ) . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "310",
            "SentID": 4319,
            "TokenID": "9",
            "Context": "if ( hrefs == null || hrefs . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "316",
            "SentID": 4394,
            "TokenID": "7",
            "Context": "if ( subobj . getNodeType ( ) == JsonNodeType . OBJECT ) {"
        },
        {
            "Word": "==",
            "WordID": "317",
            "SentID": 4405,
            "TokenID": "10",
            "Context": "( title != null && title . getNodeType ( ) == JsonNodeType . STRING ) ? title . asText ( ) : null ) ;"
        },
        {
            "Word": "==",
            "WordID": "330",
            "SentID": 4586,
            "TokenID": "5",
            "Context": "if ( formalParameters . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "336",
            "SentID": 4688,
            "TokenID": "5",
            "Context": "if ( create . length == 0 ) {"
        },
        {
            "Word": "==",
            "WordID": "345",
            "SentID": 4901,
            "TokenID": "3",
            "Context": "if ( b == - 1 ) {"
        },
        {
            "Word": "==",
            "WordID": "346",
            "SentID": 4936,
            "TokenID": "3",
            "Context": "if ( type == String [ ] . class ) {"
        },
        {
            "Word": "==",
            "WordID": "349",
            "SentID": 4975,
            "TokenID": "12",
            "Context": "if ( args [ 0 ] instanceof VarArgs && formalParameters . length == 1 && formalParameters [ 0 ] . isArray ( ) ) {"
        },
        {
            "Word": "==",
            "WordID": "350",
            "SentID": 4992,
            "TokenID": "11",
            "Context": "if ( message . getEndpoint ( ) . getEntityType ( ) == this . endpoint . getEntityType ( ) ) {"
        },
        {
            "Labels": [
                "\"Equality Comparison Operator\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "Equal Equal Operator",
            "Semantic": "Conditionals, Network",
            "Lexicographic": "==",
            "Description": "equality comparison operator used in conditionals, most comparing a variable and an integer and many relating to network",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "295": [
        {
            "Word": "public",
            "WordID": "74",
            "SentID": 743,
            "TokenID": "1",
            "Context": "} public static byte [ ] decodeBase64 ( String base64StringParam )"
        },
        {
            "Word": "public",
            "WordID": "75",
            "SentID": 748,
            "TokenID": "1",
            "Context": "} public static String encodeBase16 ( byte [ ] bytesParam )"
        },
        {
            "Word": "public",
            "WordID": "76",
            "SentID": 753,
            "TokenID": "1",
            "Context": "} public static byte [ ] decodeBase16 ( String stringParam ) {"
        },
        {
            "Word": "public",
            "WordID": "77",
            "SentID": 761,
            "TokenID": "1",
            "Context": "} public static String encodeBase64 ( byte [ ] bytesParam )"
        },
        {
            "Word": "public",
            "WordID": "218",
            "SentID": 2654,
            "TokenID": "1",
            "Context": "} public static byte [ ] generateRandom ( int seedParam ) {"
        },
        {
            "Word": "public",
            "WordID": "219",
            "SentID": 2658,
            "TokenID": "1",
            "Context": "} public static byte [ ] hmacSha256 ( byte [ ] hMacKeyParam , byte [ ] encryptedDataParam ) {"
        },
        {
            "Word": "public",
            "WordID": "220",
            "SentID": 2665,
            "TokenID": "1",
            "Context": "} public static byte [ ] generateLocalHMAC ("
        },
        {
            "Word": "public",
            "WordID": "221",
            "SentID": 2672,
            "TokenID": "1",
            "Context": "} public static byte [ ] generateLocalHMACForReqToken ("
        },
        {
            "Word": "public",
            "WordID": "222",
            "SentID": 2681,
            "TokenID": "1",
            "Context": "} public static byte [ ] decryptInitPacket ("
        },
        {
            "Word": "public",
            "WordID": "223",
            "SentID": 2689,
            "TokenID": "1",
            "Context": "} public static byte [ ] decrypt ( byte [ ] keyParam , byte [ ] dataToDecryptParam , byte [ ] ivParam ) {"
        },
        {
            "Word": "public",
            "WordID": "224",
            "SentID": 2700,
            "TokenID": "1",
            "Context": "} public static byte [ ] encrypt ( byte [ ] keyParam , byte [ ] dataToEncryptParam , byte [ ] ivParam ) {"
        },
        {
            "Word": "public",
            "WordID": "225",
            "SentID": 2704,
            "TokenID": "1",
            "Context": "} public static byte [ ] sha256 ( final byte [ ] dataParam ) {"
        },
        {
            "Word": "public",
            "WordID": "235",
            "SentID": 2989,
            "TokenID": "1",
            "Context": "} public static String encodeParam ( String textParam ) {"
        },
        {
            "Word": "public",
            "WordID": "251",
            "SentID": 3152,
            "TokenID": "1",
            "Context": "} public static SyntaxFactory getInstance ( ) {"
        },
        {
            "Word": "public",
            "WordID": "286",
            "SentID": 3344,
            "TokenID": "1",
            "Context": "} public static boolean hasDifferentValue ( XsdStringRestrictions o1 , XsdStringRestrictions o2 ) {"
        },
        {
            "Word": "public",
            "WordID": "290",
            "SentID": 3430,
            "TokenID": "1",
            "Context": "} public static boolean hasDifferentValue ( XsdDoubleRestrictions o1 , XsdDoubleRestrictions o2 ) {"
        },
        {
            "Word": "public",
            "WordID": "294",
            "SentID": 3563,
            "TokenID": "1",
            "Context": "} public static boolean hasDifferentValue ( XsdIntegerRestrictions o1 , XsdIntegerRestrictions o2 ) {"
        },
        {
            "Word": "public",
            "WordID": "295",
            "SentID": 3566,
            "TokenID": "1",
            "Context": "} public static < T extends XsdEnum > T belongsToEnum ( final XsdEnum < T > instance , final String value ) {"
        },
        {
            "Word": "public",
            "WordID": "296",
            "SentID": 3581,
            "TokenID": "1",
            "Context": "} public static Integer validateRequiredNonNegativeInteger ( String elementName , String attributeName , String value ) {"
        },
        {
            "Word": "public",
            "WordID": "297",
            "SentID": 3584,
            "TokenID": "1",
            "Context": "} public static Integer validateRequiredPositiveInteger ( String elementName , String attributeName , String value ) {"
        },
        {
            "Word": "public",
            "WordID": "298",
            "SentID": 3588,
            "TokenID": "1",
            "Context": "} public static Double validateRequiredDouble ( String elementName , String attributeName , String value ) {"
        },
        {
            "Word": "public",
            "WordID": "299",
            "SentID": 3601,
            "TokenID": "1",
            "Context": "} public static ReferenceBase createFromXsd ( XsdAbstractElement element ) {"
        },
        {
            "Word": "public",
            "WordID": "308",
            "SentID": 3683,
            "TokenID": "1",
            "Context": "} public static ExtensionContext . Store getStore ( ExtensionContext extensionContext , Class clazz ) {"
        },
        {
            "Word": "public",
            "WordID": "336",
            "SentID": 3807,
            "TokenID": "1",
            "Context": "} public static int load ( InputStream fin , FileLoading loading ) throws IOException {"
        },
        {
            "Word": "public",
            "WordID": "341",
            "SentID": 3847,
            "TokenID": "1",
            "Context": "} public static File getDefalutPath ( ) {"
        },
        {
            "Word": "public",
            "WordID": "353",
            "SentID": 4026,
            "TokenID": "1",
            "Context": "} public static ContentType forFile ( File file ) {"
        },
        {
            "Word": "public",
            "WordID": "354",
            "SentID": 4031,
            "TokenID": "1",
            "Context": "} public static ContentType valueOf ( String value ) {"
        },
        {
            "Word": "public",
            "WordID": "381",
            "SentID": 4833,
            "TokenID": "1",
            "Context": "} public static Iterable < LinkHeader > getLinkHeaders ( HttpResponse response ) {"
        },
        {
            "Word": "public",
            "WordID": "382",
            "SentID": 4841,
            "TokenID": "1",
            "Context": "} public static < T > T getInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "public",
            "WordID": "383",
            "SentID": 4843,
            "TokenID": "1",
            "Context": "} public static < T > T getInstance ( String instanceName , Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "public",
            "WordID": "384",
            "SentID": 4845,
            "TokenID": "1",
            "Context": "} public static < T > T getOptionalInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "public",
            "WordID": "385",
            "SentID": 4847,
            "TokenID": "1",
            "Context": "} public static < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) {"
        },
        {
            "Word": "public",
            "WordID": "386",
            "SentID": 4849,
            "TokenID": "1",
            "Context": "} public static AppFactory getAppFactory ( ) {"
        },
        {
            "Word": "public",
            "WordID": "387",
            "SentID": 4853,
            "TokenID": "1",
            "Context": "} public static void addFilterRow ( Grid grid ) {"
        },
        {
            "Word": "public",
            "WordID": "393",
            "SentID": 4980,
            "TokenID": "1",
            "Context": "} public static boolean isXHR ( HttpServletRequest httpRequest ) {"
        },
        {
            "Word": "public",
            "WordID": "394",
            "SentID": 4983,
            "TokenID": "1",
            "Context": "} public static boolean isAndroid ( HttpServletRequest httpRequest ) {"
        },
        {
            "Labels": [
                "\"Access Modifiers\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "public",
            "Semantic": "Function Declaration",
            "Syntactic": "access modifiers",
            "Description": "public access modifiers used in function declarations",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "311": [
        {
            "Word": "static",
            "WordID": "1",
            "SentID": 743,
            "TokenID": "2",
            "Context": "} public static byte [ ] decodeBase64 ( String base64StringParam )"
        },
        {
            "Word": "static",
            "WordID": "2",
            "SentID": 748,
            "TokenID": "2",
            "Context": "} public static String encodeBase16 ( byte [ ] bytesParam )"
        },
        {
            "Word": "static",
            "WordID": "3",
            "SentID": 753,
            "TokenID": "2",
            "Context": "} public static byte [ ] decodeBase16 ( String stringParam ) {"
        },
        {
            "Word": "static",
            "WordID": "4",
            "SentID": 761,
            "TokenID": "2",
            "Context": "} public static String encodeBase64 ( byte [ ] bytesParam )"
        },
        {
            "Word": "static",
            "WordID": "5",
            "SentID": 1093,
            "TokenID": "1",
            "Context": "public static List < Role > convertToObjects ( String roleListingParam )"
        },
        {
            "Word": "static",
            "WordID": "6",
            "SentID": 1203,
            "TokenID": "1",
            "Context": "private static Method getMethod ( Class clazzParam , String nameParam )"
        },
        {
            "Word": "static",
            "WordID": "7",
            "SentID": 1208,
            "TokenID": "2",
            "Context": "} private static Object invoke ( Method methodParam , Object objParam )"
        },
        {
            "Word": "static",
            "WordID": "8",
            "SentID": 1284,
            "TokenID": "2",
            "Context": "} protected static String getStringPropertyFromProperties ("
        },
        {
            "Word": "static",
            "WordID": "9",
            "SentID": 1289,
            "TokenID": "2",
            "Context": "} protected static int getIntPropertyFromProperties ("
        },
        {
            "Word": "static",
            "WordID": "10",
            "SentID": 2654,
            "TokenID": "2",
            "Context": "} public static byte [ ] generateRandom ( int seedParam ) {"
        },
        {
            "Word": "static",
            "WordID": "11",
            "SentID": 2658,
            "TokenID": "2",
            "Context": "} public static byte [ ] hmacSha256 ( byte [ ] hMacKeyParam , byte [ ] encryptedDataParam ) {"
        },
        {
            "Word": "static",
            "WordID": "12",
            "SentID": 2665,
            "TokenID": "2",
            "Context": "} public static byte [ ] generateLocalHMAC ("
        },
        {
            "Word": "static",
            "WordID": "13",
            "SentID": 2672,
            "TokenID": "2",
            "Context": "} public static byte [ ] generateLocalHMACForReqToken ("
        },
        {
            "Word": "static",
            "WordID": "14",
            "SentID": 2675,
            "TokenID": "2",
            "Context": "} private static byte [ ] poisonBytes ( byte [ ] bytesToPoisonParam ) {"
        },
        {
            "Word": "static",
            "WordID": "15",
            "SentID": 2681,
            "TokenID": "2",
            "Context": "} public static byte [ ] decryptInitPacket ("
        },
        {
            "Word": "static",
            "WordID": "16",
            "SentID": 2689,
            "TokenID": "2",
            "Context": "} public static byte [ ] decrypt ( byte [ ] keyParam , byte [ ] dataToDecryptParam , byte [ ] ivParam ) {"
        },
        {
            "Word": "static",
            "WordID": "17",
            "SentID": 2700,
            "TokenID": "2",
            "Context": "} public static byte [ ] encrypt ( byte [ ] keyParam , byte [ ] dataToEncryptParam , byte [ ] ivParam ) {"
        },
        {
            "Word": "static",
            "WordID": "18",
            "SentID": 2704,
            "TokenID": "2",
            "Context": "} public static byte [ ] sha256 ( final byte [ ] dataParam ) {"
        },
        {
            "Word": "static",
            "WordID": "19",
            "SentID": 2989,
            "TokenID": "2",
            "Context": "} public static String encodeParam ( String textParam ) {"
        },
        {
            "Word": "static",
            "WordID": "20",
            "SentID": 3152,
            "TokenID": "2",
            "Context": "} public static SyntaxFactory getInstance ( ) {"
        },
        {
            "Word": "static",
            "WordID": "21",
            "SentID": 3344,
            "TokenID": "2",
            "Context": "} public static boolean hasDifferentValue ( XsdStringRestrictions o1 , XsdStringRestrictions o2 ) {"
        },
        {
            "Word": "static",
            "WordID": "22",
            "SentID": 3387,
            "TokenID": "1",
            "Context": "} static ReferenceBase xsdAnnotationChildrenParse ( Node node , XsdAnnotationChildren annotationChildren ) {"
        },
        {
            "Word": "static",
            "WordID": "23",
            "SentID": 3430,
            "TokenID": "2",
            "Context": "} public static boolean hasDifferentValue ( XsdDoubleRestrictions o1 , XsdDoubleRestrictions o2 ) {"
        },
        {
            "Word": "static",
            "WordID": "24",
            "SentID": 3532,
            "TokenID": "1",
            "Context": "} static ReferenceBase xsdParseSkeleton ( Node node , XsdAbstractElement element ) {"
        },
        {
            "Word": "static",
            "WordID": "25",
            "SentID": 3544,
            "TokenID": "2",
            "Context": "} protected static Map < String , String > convertNodeMap ( NamedNodeMap nodeMap ) {"
        },
        {
            "Word": "static",
            "WordID": "26",
            "SentID": 3558,
            "TokenID": "1",
            "Context": "} static String xsdRawContentParse ( Node node ) {"
        },
        {
            "Word": "static",
            "WordID": "27",
            "SentID": 3563,
            "TokenID": "2",
            "Context": "} public static boolean hasDifferentValue ( XsdIntegerRestrictions o1 , XsdIntegerRestrictions o2 ) {"
        },
        {
            "Word": "static",
            "WordID": "28",
            "SentID": 3566,
            "TokenID": "2",
            "Context": "} public static < T extends XsdEnum > T belongsToEnum ( final XsdEnum < T > instance , final String value ) {"
        },
        {
            "Word": "static",
            "WordID": "29",
            "SentID": 3574,
            "TokenID": "1",
            "Context": "} static String maxOccursValidation ( String elementName , String value ) {"
        },
        {
            "Word": "static",
            "WordID": "30",
            "SentID": 3577,
            "TokenID": "1",
            "Context": "} static Integer validateNonNegativeInteger ( String elementName , String attributeName , String value ) {"
        },
        {
            "Word": "static",
            "WordID": "31",
            "SentID": 3581,
            "TokenID": "2",
            "Context": "} public static Integer validateRequiredNonNegativeInteger ( String elementName , String attributeName , String value ) {"
        },
        {
            "Word": "static",
            "WordID": "32",
            "SentID": 3584,
            "TokenID": "2",
            "Context": "} public static Integer validateRequiredPositiveInteger ( String elementName , String attributeName , String value ) {"
        },
        {
            "Word": "static",
            "WordID": "33",
            "SentID": 3586,
            "TokenID": "2",
            "Context": "} private static Double validateDouble ( String elementName , String attributeName , String value ) {"
        },
        {
            "Word": "static",
            "WordID": "34",
            "SentID": 3588,
            "TokenID": "2",
            "Context": "} public static Double validateRequiredDouble ( String elementName , String attributeName , String value ) {"
        },
        {
            "Word": "static",
            "WordID": "35",
            "SentID": 3590,
            "TokenID": "1",
            "Context": "} static String getFormDefaultValue ( XsdAbstractElement parent ) {"
        },
        {
            "Word": "static",
            "WordID": "36",
            "SentID": 3595,
            "TokenID": "1",
            "Context": "} static String getFinalDefaultValue ( XsdAbstractElement parent ) {"
        },
        {
            "Word": "static",
            "WordID": "37",
            "SentID": 3598,
            "TokenID": "1",
            "Context": "} static String getBlockDefaultValue ( XsdAbstractElement parent ) {"
        },
        {
            "Word": "static",
            "WordID": "38",
            "SentID": 3601,
            "TokenID": "2",
            "Context": "} public static ReferenceBase createFromXsd ( XsdAbstractElement element ) {"
        },
        {
            "Word": "static",
            "WordID": "39",
            "SentID": 3683,
            "TokenID": "2",
            "Context": "} public static ExtensionContext . Store getStore ( ExtensionContext extensionContext , Class clazz ) {"
        },
        {
            "Word": "static",
            "WordID": "40",
            "SentID": 3685,
            "TokenID": "2",
            "Context": "} private static ExtensionContext . Namespace namespace ("
        },
        {
            "Word": "static",
            "WordID": "41",
            "SentID": 3807,
            "TokenID": "2",
            "Context": "} public static int load ( InputStream fin , FileLoading loading ) throws IOException {"
        },
        {
            "Word": "static",
            "WordID": "42",
            "SentID": 3813,
            "TokenID": "2",
            "Context": "} private static char [ ] tail ( String str ) {"
        },
        {
            "Word": "static",
            "WordID": "43",
            "SentID": 3847,
            "TokenID": "2",
            "Context": "} public static File getDefalutPath ( ) {"
        },
        {
            "Word": "static",
            "WordID": "44",
            "SentID": 3866,
            "TokenID": "2",
            "Context": "} private static char [ ] toChars ( StringBuilder bufSentence ) {"
        },
        {
            "Word": "static",
            "WordID": "45",
            "SentID": 3870,
            "TokenID": "2",
            "Context": "} private static int toAscii ( int codePoint ) {"
        },
        {
            "Word": "static",
            "WordID": "46",
            "SentID": 3978,
            "TokenID": "2",
            "Context": "} private static UploadStream getUploadStream ( HttpServletRequest httpRequest , Type [ ] formalParameters ) throws IOException {"
        },
        {
            "Word": "static",
            "WordID": "47",
            "SentID": 4018,
            "TokenID": "2",
            "Context": "} private static String key ( String requestPath ) {"
        },
        {
            "Word": "static",
            "WordID": "48",
            "SentID": 4026,
            "TokenID": "2",
            "Context": "} public static ContentType forFile ( File file ) {"
        },
        {
            "Word": "static",
            "WordID": "49",
            "SentID": 4031,
            "TokenID": "2",
            "Context": "} public static ContentType valueOf ( String value ) {"
        },
        {
            "Word": "static",
            "WordID": "50",
            "SentID": 4038,
            "TokenID": "2",
            "Context": "} private static Map < String , String > parseParameters ( String expression ) {"
        },
        {
            "Word": "static",
            "WordID": "51",
            "SentID": 4199,
            "TokenID": "2",
            "Context": "} private static Constructor < ? > getDeclaredConstructor ( Class < ? > implementationClass ) {"
        },
        {
            "Word": "static",
            "WordID": "52",
            "SentID": 4211,
            "TokenID": "2",
            "Context": "} private static Collection < Field > scanDependencies ( Class < ? > clazz ) {"
        },
        {
            "Word": "static",
            "WordID": "53",
            "SentID": 4242,
            "TokenID": "2",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Class < ? > clazz , Class < T > annotationClass ) {"
        },
        {
            "Word": "static",
            "WordID": "54",
            "SentID": 4248,
            "TokenID": "2",
            "Context": "} private static boolean hasAnnotation ( Class < ? > clazz , Class < ? extends Annotation > annotationClass ) {"
        },
        {
            "Word": "static",
            "WordID": "55",
            "SentID": 4250,
            "TokenID": "2",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Method method , Class < T > annotationClass ) {"
        },
        {
            "Word": "static",
            "WordID": "56",
            "SentID": 4255,
            "TokenID": "2",
            "Context": "} private static Method getInterfaceMethod ( Method method ) {"
        },
        {
            "Word": "static",
            "WordID": "57",
            "SentID": 4257,
            "TokenID": "2",
            "Context": "} private static Class < ? extends Interceptor > getInterceptorClass ( Class < ? > clazz ) {"
        },
        {
            "Word": "static",
            "WordID": "58",
            "SentID": 4260,
            "TokenID": "2",
            "Context": "} private static Class < ? extends Interceptor > getInterceptorClass ( Method method ) {"
        },
        {
            "Word": "static",
            "WordID": "59",
            "SentID": 4269,
            "TokenID": "2",
            "Context": "} private static Class < ? > type ( Field field ) {"
        },
        {
            "Word": "static",
            "WordID": "60",
            "SentID": 4273,
            "TokenID": "1",
            "Context": "protected static Object getDependencyValue ( ManagedClassSPI hostManagedClass , Class < ? > type ) {"
        },
        {
            "Word": "static",
            "WordID": "61",
            "SentID": 4297,
            "TokenID": "2",
            "Context": "} private static boolean isProxyRequired ( ManagedClassSPI hostManagedClass , ManagedClassSPI dependencyManagedClass ) {"
        },
        {
            "Word": "static",
            "WordID": "62",
            "SentID": 4406,
            "TokenID": "2",
            "Context": "} private static Map < URI , String > getOrAdd ( Map < String , Map < URI , String > > map , String key ) {"
        },
        {
            "Word": "static",
            "WordID": "63",
            "SentID": 4418,
            "TokenID": "1",
            "Context": "public static String getFullMessage ( Throwable throwable ) {"
        },
        {
            "Word": "static",
            "WordID": "64",
            "SentID": 4528,
            "TokenID": "2",
            "Context": "} private static void convertersInitialization ( Config config ) throws ConfigException {"
        },
        {
            "Word": "static",
            "WordID": "65",
            "SentID": 4538,
            "TokenID": "2",
            "Context": "} private static void pojoStaticInitialization ( Config config ) throws ConfigException {"
        },
        {
            "Word": "static",
            "WordID": "66",
            "SentID": 4704,
            "TokenID": "2",
            "Context": "} private static List < InvocationMeter > getMeters ( ) {"
        },
        {
            "Word": "static",
            "WordID": "67",
            "SentID": 4761,
            "TokenID": "2",
            "Context": "} private static boolean isEmptyUriRequest ( HttpServletRequest httpRequest ) {"
        },
        {
            "Word": "static",
            "WordID": "68",
            "SentID": 4773,
            "TokenID": "2",
            "Context": "} protected static void sendUnauthorized ( RequestContext context ) {"
        },
        {
            "Word": "static",
            "WordID": "69",
            "SentID": 4781,
            "TokenID": "2",
            "Context": "} protected static void sendBadRequest ( RequestContext context ) throws IOException {"
        },
        {
            "Word": "static",
            "WordID": "70",
            "SentID": 4784,
            "TokenID": "2",
            "Context": "} protected static void sendNotFound ( RequestContext context , Exception exception ) throws IOException {"
        },
        {
            "Word": "static",
            "WordID": "71",
            "SentID": 4786,
            "TokenID": "2",
            "Context": "} protected static void sendError ( RequestContext context , Throwable throwable ) throws IOException {"
        },
        {
            "Word": "static",
            "WordID": "72",
            "SentID": 4794,
            "TokenID": "2",
            "Context": "} protected static void dumpError ( RequestContext context , Throwable throwable ) {"
        },
        {
            "Word": "static",
            "WordID": "73",
            "SentID": 4795,
            "TokenID": "2",
            "Context": "} protected static void sendJsonObject ( RequestContext context , Object object , int statusCode ) throws IOException {"
        },
        {
            "Word": "static",
            "WordID": "74",
            "SentID": 4833,
            "TokenID": "2",
            "Context": "} public static Iterable < LinkHeader > getLinkHeaders ( HttpResponse response ) {"
        },
        {
            "Word": "static",
            "WordID": "75",
            "SentID": 4841,
            "TokenID": "2",
            "Context": "} public static < T > T getInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "static",
            "WordID": "76",
            "SentID": 4843,
            "TokenID": "2",
            "Context": "} public static < T > T getInstance ( String instanceName , Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "static",
            "WordID": "77",
            "SentID": 4845,
            "TokenID": "2",
            "Context": "} public static < T > T getOptionalInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "static",
            "WordID": "78",
            "SentID": 4847,
            "TokenID": "2",
            "Context": "} public static < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) {"
        },
        {
            "Word": "static",
            "WordID": "79",
            "SentID": 4849,
            "TokenID": "2",
            "Context": "} public static AppFactory getAppFactory ( ) {"
        },
        {
            "Word": "static",
            "WordID": "80",
            "SentID": 4853,
            "TokenID": "2",
            "Context": "} public static void addFilterRow ( Grid grid ) {"
        },
        {
            "Word": "static",
            "WordID": "81",
            "SentID": 4875,
            "TokenID": "2",
            "Context": "} protected static void loadXML ( InputStream inputStream , Loader loader ) throws ConfigException {"
        },
        {
            "Word": "static",
            "WordID": "82",
            "SentID": 4896,
            "TokenID": "2",
            "Context": "} private static List < Parameter > parse ( Reader reader ) throws IOException {"
        },
        {
            "Word": "static",
            "WordID": "83",
            "SentID": 4929,
            "TokenID": "1",
            "Context": "private static < T > T asObject ( String value , Type type ) {"
        },
        {
            "Word": "static",
            "WordID": "84",
            "SentID": 4949,
            "TokenID": "2",
            "Context": "} private static boolean isObject ( Type [ ] formalParameters ) {"
        },
        {
            "Word": "static",
            "WordID": "85",
            "SentID": 4971,
            "TokenID": "2",
            "Context": "} private static Object [ ] preProcessArguments ( ManagedClassSPI managedClass , Member member , Class < ? > [ ] formalParameters , Object ... args ) {"
        },
        {
            "Word": "static",
            "WordID": "86",
            "SentID": 4980,
            "TokenID": "2",
            "Context": "} public static boolean isXHR ( HttpServletRequest httpRequest ) {"
        },
        {
            "Word": "static",
            "WordID": "87",
            "SentID": 4983,
            "TokenID": "2",
            "Context": "} public static boolean isAndroid ( HttpServletRequest httpRequest ) {"
        },
        {
            "Word": "static",
            "WordID": "88",
            "SentID": 4995,
            "TokenID": "1",
            "Context": "public static List < PropertyDescriptor > getProperties ( Class < ? > beanType ) {"
        },
        {
            "Labels": [
                "\"Declaration of Static Variables/Methods in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "static",
            "Semantic": "Function Declaration, Network",
            "Syntactic": "access modifier",
            "Description": "static access modifier used in function declarations, many related to network",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "345": [
        {
            "Word": "i",
            "WordID": "1",
            "SentID": 758,
            "TokenID": "3",
            "Context": "for ( int i = 0 ; i < len ; i += 2 ) {"
        },
        {
            "Word": "i",
            "WordID": "2",
            "SentID": 758,
            "TokenID": "7",
            "Context": "for ( int i = 0 ; i < len ; i += 2 ) {"
        },
        {
            "Word": "i",
            "WordID": "3",
            "SentID": 758,
            "TokenID": "11",
            "Context": "for ( int i = 0 ; i < len ; i += 2 ) {"
        },
        {
            "Word": "i",
            "WordID": "4",
            "SentID": 759,
            "TokenID": "2",
            "Context": "data [ i / 2 ] = ( byte ) ( ( Character . digit ( stringParam . charAt ( i ) , 16 ) << 4 )"
        },
        {
            "Word": "i",
            "WordID": "5",
            "SentID": 759,
            "TokenID": "20",
            "Context": "data [ i / 2 ] = ( byte ) ( ( Character . digit ( stringParam . charAt ( i ) , 16 ) << 4 )"
        },
        {
            "Word": "i",
            "WordID": "6",
            "SentID": 760,
            "TokenID": "9",
            "Context": "+ Character . digit ( stringParam . charAt ( i + 1 ) , 16 ) ) ;"
        },
        {
            "Word": "i",
            "WordID": "7",
            "SentID": 3546,
            "TokenID": "3",
            "Context": "for ( int i = 0 ; i < nodeMap . getLength ( ) ; i ++ ) {"
        },
        {
            "Word": "i",
            "WordID": "8",
            "SentID": 3546,
            "TokenID": "7",
            "Context": "for ( int i = 0 ; i < nodeMap . getLength ( ) ; i ++ ) {"
        },
        {
            "Word": "i",
            "WordID": "9",
            "SentID": 3546,
            "TokenID": "15",
            "Context": "for ( int i = 0 ; i < nodeMap . getLength ( ) ; i ++ ) {"
        },
        {
            "Word": "i",
            "WordID": "10",
            "SentID": 3547,
            "TokenID": "7",
            "Context": "Node node = nodeMap . item ( i ) ;"
        },
        {
            "Word": "i",
            "WordID": "11",
            "SentID": 3954,
            "TokenID": "3",
            "Context": "for ( int i = 1 ; i < interfaceClasses . length ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "12",
            "SentID": 3954,
            "TokenID": "7",
            "Context": "for ( int i = 1 ; i < interfaceClasses . length ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "13",
            "SentID": 3954,
            "TokenID": "14",
            "Context": "for ( int i = 1 ; i < interfaceClasses . length ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "14",
            "SentID": 3955,
            "TokenID": "6",
            "Context": "interfaceNames . append ( interfaceClasses [ i ] . getName ( ) ) ;"
        },
        {
            "Word": "i",
            "WordID": "15",
            "SentID": 4173,
            "TokenID": "3",
            "Context": "for ( int i = 0 ; i < descriptor . getChildrenCount ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "16",
            "SentID": 4173,
            "TokenID": "7",
            "Context": "for ( int i = 0 ; i < descriptor . getChildrenCount ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "17",
            "SentID": 4173,
            "TokenID": "16",
            "Context": "for ( int i = 0 ; i < descriptor . getChildrenCount ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "18",
            "SentID": 4174,
            "TokenID": "7",
            "Context": "String interfaceName = descriptor . getChild ( i ) . getAttribute ( \"name\" ) ;"
        },
        {
            "Word": "i",
            "WordID": "19",
            "SentID": 4178,
            "TokenID": "3",
            "Context": "for ( int i = 0 ; i < interfaceNames . size ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "20",
            "SentID": 4178,
            "TokenID": "7",
            "Context": "for ( int i = 0 ; i < interfaceNames . size ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "21",
            "SentID": 4178,
            "TokenID": "16",
            "Context": "for ( int i = 0 ; i < interfaceNames . size ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "22",
            "SentID": 4179,
            "TokenID": "8",
            "Context": "final String interfaceName = interfaceNames . get ( i ) ;"
        },
        {
            "Word": "i",
            "WordID": "23",
            "SentID": 4185,
            "TokenID": "2",
            "Context": "interfaceClasses [ i ] = interfaceClass ;"
        },
        {
            "Word": "i",
            "WordID": "24",
            "SentID": 4461,
            "TokenID": "3",
            "Context": "for ( int i = 0 ; i < classDescriptors . size ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "25",
            "SentID": 4461,
            "TokenID": "7",
            "Context": "for ( int i = 0 ; i < classDescriptors . size ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "26",
            "SentID": 4461,
            "TokenID": "16",
            "Context": "for ( int i = 0 ; i < classDescriptors . size ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "27",
            "SentID": 4462,
            "TokenID": "6",
            "Context": "if ( classDescriptors . get ( i ) . hasAttribute ( \"interface\" , interfaceClass ) ) {"
        },
        {
            "Word": "i",
            "WordID": "28",
            "SentID": 4463,
            "TokenID": "4",
            "Context": "classDescriptors . set ( i , classDescriptor ) ;"
        },
        {
            "Word": "i",
            "WordID": "30",
            "SentID": 4924,
            "TokenID": "2",
            "Context": "for ( i = 0 ; i < argumentsCount ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "31",
            "SentID": 4924,
            "TokenID": "6",
            "Context": "for ( i = 0 ; i < argumentsCount ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "32",
            "SentID": 4924,
            "TokenID": "11",
            "Context": "for ( i = 0 ; i < argumentsCount ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "33",
            "SentID": 4925,
            "TokenID": "2",
            "Context": "arguments [ i ] = asObject ( parameters . get ( i ) . getValue ( ) , formalParameters [ i ] ) ;"
        },
        {
            "Word": "i",
            "WordID": "34",
            "SentID": 4925,
            "TokenID": "11",
            "Context": "arguments [ i ] = asObject ( parameters . get ( i ) . getValue ( ) , formalParameters [ i ] ) ;"
        },
        {
            "Word": "i",
            "WordID": "35",
            "SentID": 4925,
            "TokenID": "20",
            "Context": "arguments [ i ] = asObject ( parameters . get ( i ) . getValue ( ) , formalParameters [ i ] ) ;"
        },
        {
            "Word": "i",
            "WordID": "36",
            "SentID": 4926,
            "TokenID": "3",
            "Context": "for ( ; i < formalParameters . length ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "37",
            "SentID": 4926,
            "TokenID": "10",
            "Context": "for ( ; i < formalParameters . length ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "38",
            "SentID": 4927,
            "TokenID": "2",
            "Context": "arguments [ i ] = null ;"
        },
        {
            "Word": "i",
            "WordID": "39",
            "SentID": 4928,
            "TokenID": "3",
            "Context": "for ( ; i < parameters . size ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "40",
            "SentID": 4928,
            "TokenID": "12",
            "Context": "for ( ; i < parameters . size ( ) ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "41",
            "SentID": 4974,
            "TokenID": "2",
            "Context": "args [ i ] = getDependencyValue ( managedClass , formalParameters [ i ] ) ;"
        },
        {
            "Word": "i",
            "WordID": "42",
            "SentID": 4974,
            "TokenID": "11",
            "Context": "args [ i ] = getDependencyValue ( managedClass , formalParameters [ i ] ) ;"
        },
        {
            "Word": "i",
            "WordID": "43",
            "SentID": 4978,
            "TokenID": "3",
            "Context": "for ( int i = 0 ; i < formalParameters . length ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "44",
            "SentID": 4978,
            "TokenID": "7",
            "Context": "for ( int i = 0 ; i < formalParameters . length ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "45",
            "SentID": 4978,
            "TokenID": "14",
            "Context": "for ( int i = 0 ; i < formalParameters . length ; ++ i ) {"
        },
        {
            "Word": "i",
            "WordID": "46",
            "SentID": 4979,
            "TokenID": "4",
            "Context": "if ( args [ i ] != null && ! Types . isInstanceOf ( args [ i ] , formalParameters [ i ] ) ) {"
        },
        {
            "Word": "i",
            "WordID": "47",
            "SentID": 4979,
            "TokenID": "16",
            "Context": "if ( args [ i ] != null && ! Types . isInstanceOf ( args [ i ] , formalParameters [ i ] ) ) {"
        },
        {
            "Word": "i",
            "WordID": "48",
            "SentID": 4979,
            "TokenID": "21",
            "Context": "if ( args [ i ] != null && ! Types . isInstanceOf ( args [ i ] , formalParameters [ i ] ) ) {"
        },
        {
            "Labels": [
                "\"Loop Counter or Variable Index\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "i",
            "Semantic": "Loops, Indexing",
            "Syntactic": "variable",
            "Description": "loop indexing variable labled \"i\"",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "274": [
        {
            "Word": "forEach",
            "WordID": "1",
            "SentID": 784,
            "TokenID": "6",
            "Context": "multiChoice . getSelectedMultiChoices ( ) . forEach ( selectedChoice ->"
        },
        {
            "Word": "forEach",
            "WordID": "2",
            "SentID": 1317,
            "TokenID": "6",
            "Context": "formJSONObjFlat . keySet ( ) . forEach ("
        },
        {
            "Word": "forEach",
            "WordID": "3",
            "SentID": 1856,
            "TokenID": "2",
            "Context": "formContainerIds . forEach ( formContId -> {"
        },
        {
            "Word": "forEach",
            "WordID": "4",
            "SentID": 2201,
            "TokenID": "6",
            "Context": "this . getFormFields ( ) . forEach ("
        },
        {
            "Word": "forEach",
            "WordID": "5",
            "SentID": 2758,
            "TokenID": "2",
            "Context": "returnValue . forEach ( listingItm -> {"
        },
        {
            "Word": "forEach",
            "WordID": "6",
            "SentID": 2762,
            "TokenID": "6",
            "Context": "castedToListing . getListing ( ) . forEach ( formItm -> {"
        },
        {
            "Word": "forEach",
            "WordID": "7",
            "SentID": 3090,
            "TokenID": "8",
            "Context": "this . messageHandlers . values ( ) . forEach ( handle -> {"
        },
        {
            "Word": "forEach",
            "WordID": "8",
            "SentID": 3399,
            "TokenID": "2",
            "Context": "unsolvedElements . forEach ( unsolvedElement -> replaceUnsolvedReference ( concreteElementsMap , unsolvedElement ) ) ;"
        },
        {
            "Word": "forEach",
            "WordID": "9",
            "SentID": 3440,
            "TokenID": "6",
            "Context": "union . getUnionElements ( ) . forEach ( unionMember -> {"
        },
        {
            "Word": "forEach",
            "WordID": "10",
            "SentID": 4332,
            "TokenID": "2",
            "Context": "defaultHeaders . forEach ( request :: addHeader ) ;"
        },
        {
            "Word": "forEach",
            "WordID": "11",
            "SentID": 4378,
            "TokenID": "5",
            "Context": "getLinkHeaders ( response ) . forEach ( header -> {"
        },
        {
            "Word": "forEach",
            "WordID": "12",
            "SentID": 4393,
            "TokenID": "6",
            "Context": "x . getValue ( ) . forEach ( subobj -> {"
        },
        {
            "Word": "forEach",
            "WordID": "13",
            "SentID": 4618,
            "TokenID": "10",
            "Context": "response . getElements ( ) . stream ( ) . forEach ( observer :: onNext ) ;"
        },
        {
            "Word": "forEach",
            "WordID": "14",
            "SentID": 4858,
            "TokenID": "6",
            "Context": "container . getContainerPropertyIds ( ) . forEach ( pid -> {"
        },
        {
            "Word": "forEach",
            "WordID": "15",
            "SentID": 4885,
            "TokenID": "9",
            "Context": "getPropertiesWithoutAnnotation ( entityType , EditorHidden . class ) . forEach ( ( property ) -> {"
        },
        {
            "Labels": [
                "\"Looping through Collection\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "forEach",
            "Semantic": "Loops, Lambda Function",
            "Description": "forEach loops that use lambda functions",
            "Syntactic": "",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "269": [
        {
            "Word": "(",
            "WordID": "967",
            "SentID": 784,
            "TokenID": "7",
            "Context": "multiChoice . getSelectedMultiChoices ( ) . forEach ( selectedChoice ->"
        },
        {
            "Word": "(",
            "WordID": "2080",
            "SentID": 1856,
            "TokenID": "3",
            "Context": "formContainerIds . forEach ( formContId -> {"
        },
        {
            "Word": "(",
            "WordID": "3179",
            "SentID": 2758,
            "TokenID": "3",
            "Context": "returnValue . forEach ( listingItm -> {"
        },
        {
            "Word": "(",
            "WordID": "3184",
            "SentID": 2762,
            "TokenID": "7",
            "Context": "castedToListing . getListing ( ) . forEach ( formItm -> {"
        },
        {
            "Word": "(",
            "WordID": "3533",
            "SentID": 3090,
            "TokenID": "9",
            "Context": "this . messageHandlers . values ( ) . forEach ( handle -> {"
        },
        {
            "Word": "(",
            "WordID": "3834",
            "SentID": 3357,
            "TokenID": "6",
            "Context": ". findFirst ( ) . ifPresent ( referenceBase -> {"
        },
        {
            "Word": "(",
            "WordID": "3952",
            "SentID": 3440,
            "TokenID": "7",
            "Context": "union . getUnionElements ( ) . forEach ( unionMember -> {"
        },
        {
            "Word": "(",
            "WordID": "5136",
            "SentID": 4378,
            "TokenID": "6",
            "Context": "getLinkHeaders ( response ) . forEach ( header -> {"
        },
        {
            "Word": "(",
            "WordID": "5157",
            "SentID": 4389,
            "TokenID": "7",
            "Context": "linksNode . fields ( ) . forEachRemaining ( x -> {"
        },
        {
            "Word": "(",
            "WordID": "5164",
            "SentID": 4393,
            "TokenID": "7",
            "Context": "x . getValue ( ) . forEach ( subobj -> {"
        },
        {
            "Word": "(",
            "WordID": "5801",
            "SentID": 4858,
            "TokenID": "7",
            "Context": "container . getContainerPropertyIds ( ) . forEach ( pid -> {"
        },
        {
            "Word": "(",
            "WordID": "5806",
            "SentID": 4863,
            "TokenID": "3",
            "Context": "filterField . addTextChangeListener ( event -> {"
        },
        {
            "Word": "(",
            "WordID": "5841",
            "SentID": 4885,
            "TokenID": "10",
            "Context": "getPropertiesWithoutAnnotation ( entityType , EditorHidden . class ) . forEach ( ( property ) -> {"
        },
        {
            "Labels": [
                "\"Method Invocation or Object Access\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "Opening Parenthesis",
            "Semantic": "Loops, Lambda Function",
            "Lexicographic": "(",
            "Description": "Opening parenthesis for loops with lambda functions",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "150": [
        {
            "Word": "->",
            "WordID": "1",
            "SentID": 784,
            "TokenID": "9",
            "Context": "multiChoice . getSelectedMultiChoices ( ) . forEach ( selectedChoice ->"
        },
        {
            "Word": "->",
            "WordID": "2",
            "SentID": 1318,
            "TokenID": "3",
            "Context": "( toAdd ) ->"
        },
        {
            "Word": "->",
            "WordID": "3",
            "SentID": 1856,
            "TokenID": "5",
            "Context": "formContainerIds . forEach ( formContId -> {"
        },
        {
            "Word": "->",
            "WordID": "4",
            "SentID": 2202,
            "TokenID": "3",
            "Context": "( formFieldItem ) ->"
        },
        {
            "Word": "->",
            "WordID": "5",
            "SentID": 2758,
            "TokenID": "5",
            "Context": "returnValue . forEach ( listingItm -> {"
        },
        {
            "Word": "->",
            "WordID": "6",
            "SentID": 2762,
            "TokenID": "9",
            "Context": "castedToListing . getListing ( ) . forEach ( formItm -> {"
        },
        {
            "Word": "->",
            "WordID": "7",
            "SentID": 3090,
            "TokenID": "11",
            "Context": "this . messageHandlers . values ( ) . forEach ( handle -> {"
        },
        {
            "Word": "->",
            "WordID": "8",
            "SentID": 3356,
            "TokenID": "4",
            "Context": ". filter ( attributeGroup -> attributeGroup instanceof UnsolvedReference && ( ( UnsolvedReference ) attributeGroup ) . getRef ( ) . equals ( element . getName ( ) ) )"
        },
        {
            "Word": "->",
            "WordID": "9",
            "SentID": 3357,
            "TokenID": "8",
            "Context": ". findFirst ( ) . ifPresent ( referenceBase -> {"
        },
        {
            "Word": "->",
            "WordID": "10",
            "SentID": 3364,
            "TokenID": "4",
            "Context": ". filter ( attribute -> attribute instanceof UnsolvedReference && ( ( UnsolvedReference ) attribute ) . getRef ( ) . equals ( element . getName ( ) ) )"
        },
        {
            "Word": "->",
            "WordID": "11",
            "SentID": 3372,
            "TokenID": "7",
            "Context": "this . elements . removeIf ( element ->"
        },
        {
            "Word": "->",
            "WordID": "12",
            "SentID": 3396,
            "TokenID": "4",
            "Context": ". filter ( concreteElement -> concreteElement instanceof NamedConcreteElement )"
        },
        {
            "Word": "->",
            "WordID": "13",
            "SentID": 3397,
            "TokenID": "4",
            "Context": ". map ( concreteElement -> ( NamedConcreteElement ) concreteElement )"
        },
        {
            "Word": "->",
            "WordID": "14",
            "SentID": 3399,
            "TokenID": "5",
            "Context": "unsolvedElements . forEach ( unsolvedElement -> replaceUnsolvedReference ( concreteElementsMap , unsolvedElement ) ) ;"
        },
        {
            "Word": "->",
            "WordID": "15",
            "SentID": 3417,
            "TokenID": "4",
            "Context": ". filter ( unsolvedReferenceObj ->"
        },
        {
            "Word": "->",
            "WordID": "16",
            "SentID": 3422,
            "TokenID": "5",
            "Context": "innerEntry . ifPresent ( entry -> entry . getParents ( ) . add ( unsolvedReference . getParent ( ) ) ) ;"
        },
        {
            "Word": "->",
            "WordID": "17",
            "SentID": 3440,
            "TokenID": "9",
            "Context": "union . getUnionElements ( ) . forEach ( unionMember -> {"
        },
        {
            "Word": "->",
            "WordID": "18",
            "SentID": 3491,
            "TokenID": "11",
            "Context": "if ( existingEnumeration . stream ( ) . noneMatch ( existingEnumerationElem -> existingEnumerationElem . getValue ( ) . equals ( enumerationElem . getValue ( ) ) ) ) {"
        },
        {
            "Word": "->",
            "WordID": "19",
            "SentID": 3554,
            "TokenID": "4",
            "Context": ". filter ( referenceBase -> referenceBase instanceof UnsolvedReference )"
        },
        {
            "Word": "->",
            "WordID": "20",
            "SentID": 3555,
            "TokenID": "4",
            "Context": ". map ( referenceBase -> ( UnsolvedReference ) referenceBase )"
        },
        {
            "Word": "->",
            "WordID": "21",
            "SentID": 3556,
            "TokenID": "4",
            "Context": ". filter ( unsolvedReference -> unsolvedReference . getRef ( ) . equals ( element . getName ( ) ) )"
        },
        {
            "Word": "->",
            "WordID": "22",
            "SentID": 3557,
            "TokenID": "4",
            "Context": ". ifPresent ( oldElement -> elements . set ( elements . indexOf ( oldElement ) , element ) ) ;"
        },
        {
            "Word": "->",
            "WordID": "23",
            "SentID": 3567,
            "TokenID": "20",
            "Context": "Optional < T > enumValue = Arrays . stream ( instance . getValues ( ) ) . filter ( enumField -> enumField . getValue ( ) . equals ( value ) ) . findFirst ( ) ;"
        },
        {
            "Word": "->",
            "WordID": "24",
            "SentID": 3674,
            "TokenID": "3",
            "Context": "parameterContext , key -> new TemporaryFolder ( ) , TemporaryFolder . class ) ;"
        },
        {
            "Word": "->",
            "WordID": "25",
            "SentID": 3677,
            "TokenID": "2",
            "Context": "return s -> s . startsWith ( annotation . messageStartsWith ( ) ) ;"
        },
        {
            "Word": "->",
            "WordID": "26",
            "SentID": 3679,
            "TokenID": "2",
            "Context": "return s -> s . contains ( annotation . messageContains ( ) ) ;"
        },
        {
            "Word": "->",
            "WordID": "27",
            "SentID": 3681,
            "TokenID": "2",
            "Context": "return s -> s . equals ( annotation . messageIs ( ) ) ;"
        },
        {
            "Word": "->",
            "WordID": "29",
            "SentID": 4304,
            "TokenID": "19",
            "Context": "return runAsync ( scheduler , ( rx . Observer < ? super TEntity > observer , Subscription subscription ) -> {"
        },
        {
            "Word": "->",
            "WordID": "30",
            "SentID": 4378,
            "TokenID": "8",
            "Context": "getLinkHeaders ( response ) . forEach ( header -> {"
        },
        {
            "Word": "->",
            "WordID": "31",
            "SentID": 4389,
            "TokenID": "9",
            "Context": "linksNode . fields ( ) . forEachRemaining ( x -> {"
        },
        {
            "Word": "->",
            "WordID": "32",
            "SentID": 4393,
            "TokenID": "9",
            "Context": "x . getValue ( ) . forEach ( subobj -> {"
        },
        {
            "Word": "->",
            "WordID": "33",
            "SentID": 4411,
            "TokenID": "4",
            "Context": ". filter ( x -> x . getName ( ) . equals ( \"Allow\" ) )"
        },
        {
            "Word": "->",
            "WordID": "34",
            "SentID": 4412,
            "TokenID": "4",
            "Context": ". flatMap ( x -> stream ( x . getElements ( ) ) ) . map ( x -> x . getName ( ) )"
        },
        {
            "Word": "->",
            "WordID": "35",
            "SentID": 4412,
            "TokenID": "18",
            "Context": ". flatMap ( x -> stream ( x . getElements ( ) ) ) . map ( x -> x . getName ( ) )"
        },
        {
            "Word": "->",
            "WordID": "36",
            "SentID": 4811,
            "TokenID": "14",
            "Context": "ConfirmDialog . show ( getUI ( ) , question , ( ConfirmDialog cd ) -> {"
        },
        {
            "Word": "->",
            "WordID": "37",
            "SentID": 4835,
            "TokenID": "4",
            "Context": ". flatMap ( x -> stream ( x . getElements ( ) ) . map ( LinkHeader :: new ) )"
        },
        {
            "Word": "->",
            "WordID": "38",
            "SentID": 4858,
            "TokenID": "9",
            "Context": "container . getContainerPropertyIds ( ) . forEach ( pid -> {"
        },
        {
            "Word": "->",
            "WordID": "39",
            "SentID": 4863,
            "TokenID": "5",
            "Context": "filterField . addTextChangeListener ( event -> {"
        },
        {
            "Word": "->",
            "WordID": "40",
            "SentID": 4885,
            "TokenID": "14",
            "Context": "getPropertiesWithoutAnnotation ( entityType , EditorHidden . class ) . forEach ( ( property ) -> {"
        },
        {
            "Word": "->",
            "WordID": "41",
            "SentID": 4895,
            "TokenID": "4",
            "Context": ". ifPresent ( x -> layout . addComponent ( buildDescriptionComponent ( property , x . value ( ) ) ) ) ;"
        },
        {
            "Labels": [
                "\"Arrow Operator Usage\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "Arrow operator",
            "Semantic": "Lambda Function",
            "Lexicographic": "->",
            "Description": "Arrow operators for lambda functions",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "214": [
        {
            "Word": "fluidError",
            "WordID": "1",
            "SentID": 802,
            "TokenID": "1",
            "Context": "Error fluidError = new Error ( jsonObject ) ;"
        },
        {
            "Word": "Error",
            "WordID": "2",
            "SentID": 802,
            "TokenID": "4",
            "Context": "Error fluidError = new Error ( jsonObject ) ;"
        },
        {
            "Word": "fluidError",
            "WordID": "2",
            "SentID": 803,
            "TokenID": "2",
            "Context": "if ( fluidError . getErrorCode ( ) > 0 ) {"
        },
        {
            "Word": "fluidError",
            "WordID": "3",
            "SentID": 804,
            "TokenID": "1",
            "Context": "return fluidError ;"
        },
        {
            "Word": "fluidError",
            "WordID": "4",
            "SentID": 805,
            "TokenID": "3",
            "Context": "String echo = fluidError . getEcho ( ) ;"
        },
        {
            "Word": "Error",
            "WordID": "3",
            "SentID": 808,
            "TokenID": "4",
            "Context": "if ( objectToProcess instanceof Error ) {"
        },
        {
            "Word": "fluidError",
            "WordID": "5",
            "SentID": 809,
            "TokenID": "1",
            "Context": "Error fluidError = ( ( Error ) objectToProcess ) ;"
        },
        {
            "Word": "fluidError",
            "WordID": "6",
            "SentID": 810,
            "TokenID": "6",
            "Context": "this . errors . add ( fluidError ) ;"
        },
        {
            "Word": "fluidError",
            "WordID": "7",
            "SentID": 812,
            "TokenID": "6",
            "Context": "this . messageReceivedCallback . errorMessageReceived ( fluidError ) ;"
        },
        {
            "Word": "fluidError",
            "WordID": "8",
            "SentID": 816,
            "TokenID": "0",
            "Context": "fluidError . getErrorMessage ( ) ,"
        },
        {
            "Word": "fluidError",
            "WordID": "9",
            "SentID": 817,
            "TokenID": "0",
            "Context": "fluidError . getErrorCode ( ) ) ) ;"
        },
        {
            "Word": "firstFluidError",
            "WordID": "1",
            "SentID": 840,
            "TokenID": "1",
            "Context": "Error firstFluidError = this . getErrors ( ) . get ( 0 ) ;"
        },
        {
            "Word": "firstFluidError",
            "WordID": "2",
            "SentID": 842,
            "TokenID": "0",
            "Context": "firstFluidError . getErrorMessage ( ) ,"
        },
        {
            "Word": "firstFluidError",
            "WordID": "3",
            "SentID": 843,
            "TokenID": "0",
            "Context": "firstFluidError . getErrorCode ( ) ) ) ;"
        },
        {
            "Word": "sqlError",
            "WordID": "2",
            "SentID": 1016,
            "TokenID": "4",
            "Context": "throw new FluidSQLException ( sqlError ) ;"
        },
        {
            "Word": "Error",
            "WordID": "7",
            "SentID": 2873,
            "TokenID": "6",
            "Context": "if ( jsonOjb . isNull ( Error . JSONMapping . ERROR_CODE ) ) {"
        },
        {
            "Word": "Error",
            "WordID": "8",
            "SentID": 2875,
            "TokenID": "7",
            "Context": "int errorCode = jsonOjb . getInt ( Error . JSONMapping . ERROR_CODE ) ;"
        },
        {
            "Word": "Error",
            "WordID": "9",
            "SentID": 2877,
            "TokenID": "8",
            "Context": "String errorMessage = ( jsonOjb . isNull ( Error . JSONMapping . ERROR_MESSAGE )"
        },
        {
            "Word": "Error",
            "WordID": "10",
            "SentID": 2878,
            "TokenID": "4",
            "Context": "jsonOjb . getString ( Error . JSONMapping . ERROR_MESSAGE ) ) ;"
        },
        {
            "Word": "Error",
            "WordID": "11",
            "SentID": 2929,
            "TokenID": "6",
            "Context": "if ( jsonOjb . isNull ( Error . JSONMapping . ERROR_CODE ) )"
        },
        {
            "Word": "isError",
            "WordID": "1",
            "SentID": 2997,
            "TokenID": "3",
            "Context": "} protected boolean isError ( ABaseFluidJSONObject baseDomainParam ) {"
        },
        {
            "Word": "Error",
            "WordID": "14",
            "SentID": 3097,
            "TokenID": "4",
            "Context": "if ( qualifyObj instanceof Error ) {"
        },
        {
            "Word": "sendError",
            "WordID": "1",
            "SentID": 4007,
            "TokenID": "0",
            "Context": "sendError ( context , e ) ;"
        },
        {
            "Word": "onError",
            "WordID": "1",
            "SentID": 4617,
            "TokenID": "2",
            "Context": "observer . onError ( error ) ;"
        },
        {
            "Word": "BugError",
            "WordID": "1",
            "SentID": 4626,
            "TokenID": "2",
            "Context": "throw new BugError ( e ) ;"
        },
        {
            "Word": "checkError",
            "WordID": "1",
            "SentID": 4728,
            "TokenID": "4",
            "Context": "return ! writer . checkError ( ) ;"
        },
        {
            "Word": "Error",
            "WordID": "15",
            "SentID": 4757,
            "TokenID": "7",
            "Context": "} catch ( IOException | ServletException | Error | RuntimeException t ) {"
        },
        {
            "Word": "dumpError",
            "WordID": "1",
            "SentID": 4758,
            "TokenID": "0",
            "Context": "dumpError ( context , t ) ;"
        },
        {
            "Word": "sendError",
            "WordID": "2",
            "SentID": 4783,
            "TokenID": "6",
            "Context": "context . getResponse ( ) . sendError ( HttpServletResponse . SC_BAD_REQUEST , context . getRequestURI ( ) ) ;"
        },
        {
            "Word": "sendError",
            "WordID": "3",
            "SentID": 4786,
            "TokenID": "4",
            "Context": "} protected static void sendError ( RequestContext context , Throwable throwable ) throws IOException {"
        },
        {
            "Word": "dumpError",
            "WordID": "2",
            "SentID": 4792,
            "TokenID": "0",
            "Context": "dumpError ( context , throwable ) ;"
        },
        {
            "Word": "dumpError",
            "WordID": "3",
            "SentID": 4794,
            "TokenID": "4",
            "Context": "} protected static void dumpError ( RequestContext context , Throwable throwable ) {"
        },
        {
            "Word": "onError",
            "WordID": "2",
            "SentID": 4815,
            "TokenID": "0",
            "Context": "onError ( ex ) ;"
        },
        {
            "Word": "onError",
            "WordID": "3",
            "SentID": 4881,
            "TokenID": "3",
            "Context": "} protected void onError ( Exception ex ) {"
        },
        {
            "Labels": [
                "\"Error Handling and Debugging\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Error",
            "Syntactic": "Object, Function",
            "Semantic": "Error Handling",
            "Description": "Objects and functions for error handling",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "464": [
        {
            "Word": "getEcho",
            "WordID": "1",
            "SentID": 805,
            "TokenID": "5",
            "Context": "String echo = fluidError . getEcho ( ) ;"
        },
        {
            "Word": "getEcho",
            "WordID": "2",
            "SentID": 831,
            "TokenID": "5",
            "Context": "String echo = messageForm . getEcho ( ) ;"
        },
        {
            "Word": "getEcho",
            "WordID": "3",
            "SentID": 856,
            "TokenID": "4",
            "Context": "if ( returnVal . getEcho ( ) == null )"
        },
        {
            "Word": "getEcho",
            "WordID": "4",
            "SentID": 857,
            "TokenID": "6",
            "Context": "returnListing . add ( returnVal . getEcho ( ) ) ;"
        },
        {
            "Word": "setEcho",
            "WordID": "1",
            "SentID": 1258,
            "TokenID": "2",
            "Context": "listingToSend . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "setEcho",
            "WordID": "2",
            "SentID": 1464,
            "TokenID": "5",
            "Context": "formsToFetchForLocalCacheArr [ index ] . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "setEcho",
            "WordID": "3",
            "SentID": 1469,
            "TokenID": "2",
            "Context": "toAdd . setEcho ( formToFetchFor . getEcho ( ) ) ;"
        },
        {
            "Word": "getEcho",
            "WordID": "5",
            "SentID": 1469,
            "TokenID": "6",
            "Context": "toAdd . setEcho ( formToFetchFor . getEcho ( ) ) ;"
        },
        {
            "Word": "getEcho",
            "WordID": "6",
            "SentID": 1488,
            "TokenID": "5",
            "Context": "String echoToUse = formIter . getEcho ( ) ;"
        },
        {
            "Word": "getEcho",
            "WordID": "7",
            "SentID": 1490,
            "TokenID": "8",
            "Context": "if ( echoToUse . equals ( fieldListing . getEcho ( ) ) ) {"
        },
        {
            "Word": "getEcho",
            "WordID": "8",
            "SentID": 1515,
            "TokenID": "4",
            "Context": "if ( this . getEcho ( ) != null )"
        },
        {
            "Word": "ECHO",
            "WordID": "1",
            "SentID": 1516,
            "TokenID": "6",
            "Context": "returnVal . put ( JSONMapping . ECHO , this . getEcho ( ) ) ;"
        },
        {
            "Word": "getEcho",
            "WordID": "9",
            "SentID": 1516,
            "TokenID": "10",
            "Context": "returnVal . put ( JSONMapping . ECHO , this . getEcho ( ) ) ;"
        },
        {
            "Word": "setEcho",
            "WordID": "4",
            "SentID": 2235,
            "TokenID": "2",
            "Context": "itemToSend . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "getEcho",
            "WordID": "10",
            "SentID": 2717,
            "TokenID": "6",
            "Context": "listHandler . addExpectedMessage ( baseFluidJSONObjectParam . getEcho ( ) ) ;"
        },
        {
            "Word": "getEcho",
            "WordID": "11",
            "SentID": 2743,
            "TokenID": "6",
            "Context": "} else if ( baseToSetEchoOnIfNotSetParam . getEcho ( ) == null ||"
        },
        {
            "Word": "getEcho",
            "WordID": "12",
            "SentID": 2744,
            "TokenID": "2",
            "Context": "baseToSetEchoOnIfNotSetParam . getEcho ( ) . trim ( ) . isEmpty ( ) ) {"
        },
        {
            "Word": "setEcho",
            "WordID": "5",
            "SentID": 2745,
            "TokenID": "2",
            "Context": "baseToSetEchoOnIfNotSetParam . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "getEcho",
            "WordID": "13",
            "SentID": 3313,
            "TokenID": "4",
            "Context": "if ( formToCreateParam . getEcho ( ) == null || formToCreateParam . getEcho ( ) . trim ( ) . isEmpty ( ) )"
        },
        {
            "Word": "getEcho",
            "WordID": "14",
            "SentID": 3313,
            "TokenID": "12",
            "Context": "if ( formToCreateParam . getEcho ( ) == null || formToCreateParam . getEcho ( ) . trim ( ) . isEmpty ( ) )"
        },
        {
            "Word": "setEcho",
            "WordID": "6",
            "SentID": 3314,
            "TokenID": "2",
            "Context": "formToCreateParam . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Labels": [
                "\"Echo Management\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Echo",
            "Semantic": "Function Calls, getters, setters",
            "Syntactic": "method",
            "Description": "getter and setter methods with echo in the name",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "164": [
        {
            "Word": "errors",
            "WordID": "1",
            "SentID": 810,
            "TokenID": "2",
            "Context": "this . errors . add ( fluidError ) ;"
        },
        {
            "Word": "exists",
            "WordID": "1",
            "SentID": 1355,
            "TokenID": "3",
            "Context": "! inputDocumentParam . exists ( ) )"
        },
        {
            "Word": "exists",
            "WordID": "2",
            "SentID": 1378,
            "TokenID": "5",
            "Context": "if ( ! returnVal . exists ( ) )"
        },
        {
            "Word": "exists",
            "WordID": "3",
            "SentID": 3031,
            "TokenID": "4",
            "Context": "if ( certFile . exists ( ) && certFile . isFile ( ) ) {"
        },
        {
            "Word": "getParents",
            "WordID": "1",
            "SentID": 3422,
            "TokenID": "8",
            "Context": "innerEntry . ifPresent ( entry -> entry . getParents ( ) . add ( unsolvedReference . getParent ( ) ) ) ;"
        },
        {
            "Word": "restrictions",
            "WordID": "3",
            "SentID": 3443,
            "TokenID": "3",
            "Context": "XsdRestriction existingRestriction = restrictions . getOrDefault ( xsdBuiltinTypes . get ( unionMemberRestriction . getBase ( ) ) , null ) ;"
        },
        {
            "Word": "restrictions",
            "WordID": "5",
            "SentID": 3448,
            "TokenID": "6",
            "Context": "return new ArrayList < > ( restrictions . values ( ) ) ;"
        },
        {
            "Word": "exists",
            "WordID": "4",
            "SentID": 3510,
            "TokenID": "9",
            "Context": "if ( ! new File ( filePath ) . exists ( ) ) {"
        },
        {
            "Word": "elements",
            "WordID": "7",
            "SentID": 3557,
            "TokenID": "9",
            "Context": ". ifPresent ( oldElement -> elements . set ( elements . indexOf ( oldElement ) , element ) ) ;"
        },
        {
            "Word": "getValues",
            "WordID": "1",
            "SentID": 3567,
            "TokenID": "12",
            "Context": "Optional < T > enumValue = Arrays . stream ( instance . getValues ( ) ) . filter ( enumField -> enumField . getValue ( ) . equals ( value ) ) . findFirst ( ) ;"
        },
        {
            "Word": "possibleValues",
            "WordID": "2",
            "SentID": 3571,
            "TokenID": "3",
            "Context": "String values = possibleValues . toString ( ) ;"
        },
        {
            "Word": "values",
            "WordID": "6",
            "SentID": 3572,
            "TokenID": "2",
            "Context": "values = values . substring ( 0 , values . length ( ) - 2 ) ;"
        },
        {
            "Word": "values",
            "WordID": "7",
            "SentID": 3572,
            "TokenID": "8",
            "Context": "values = values . substring ( 0 , values . length ( ) - 2 ) ;"
        },
        {
            "Word": "Files",
            "WordID": "1",
            "SentID": 3651,
            "TokenID": "1",
            "Context": "return Files . createFile ( path ) . toFile ( ) ;"
        },
        {
            "Word": "Files",
            "WordID": "2",
            "SentID": 3654,
            "TokenID": "1",
            "Context": "return Files . createDirectory ( path ) . toFile ( ) ;"
        },
        {
            "Word": "exists",
            "WordID": "5",
            "SentID": 3657,
            "TokenID": "4",
            "Context": "if ( rootFolder . exists ( ) ) {"
        },
        {
            "Word": "Files",
            "WordID": "3",
            "SentID": 3658,
            "TokenID": "0",
            "Context": "Files . walkFileTree ("
        },
        {
            "Word": "Files",
            "WordID": "4",
            "SentID": 3667,
            "TokenID": "0",
            "Context": "Files . delete ( file ) ;"
        },
        {
            "Word": "Files",
            "WordID": "5",
            "SentID": 3669,
            "TokenID": "0",
            "Context": "Files . delete ( rootFolder . toPath ( ) ) ;"
        },
        {
            "Word": "listWordsFiles",
            "WordID": "1",
            "SentID": 3804,
            "TokenID": "5",
            "Context": "} protected File [ ] listWordsFiles ( ) {"
        },
        {
            "Word": "listFiles",
            "WordID": "1",
            "SentID": 3805,
            "TokenID": "3",
            "Context": "return dicPath . listFiles ( new FilenameFilter ( ) {"
        },
        {
            "Word": "listWordsFiles",
            "WordID": "2",
            "SentID": 3824,
            "TokenID": "5",
            "Context": "File [ ] words = listWordsFiles ( ) ;"
        },
        {
            "Word": "exists",
            "WordID": "6",
            "SentID": 3855,
            "TokenID": "5",
            "Context": "if ( ! defalutPath . exists ( ) ) {"
        },
        {
            "Word": "listFiles",
            "WordID": "2",
            "SentID": 3882,
            "TokenID": "7",
            "Context": "File [ ] txts = path . listFiles ( new FilenameFilter ( ) {"
        },
        {
            "Word": "Objects",
            "WordID": "1",
            "SentID": 3945,
            "TokenID": "1",
            "Context": "return Objects . toString ( template . update ( sql ) ) ;"
        },
        {
            "Word": "Files",
            "WordID": "6",
            "SentID": 4028,
            "TokenID": "7",
            "Context": "ContentType contentType = FILE_TYPES . get ( Files . getExtension ( file ) ) ;"
        },
        {
            "Word": "parseParameters",
            "WordID": "1",
            "SentID": 4038,
            "TokenID": "9",
            "Context": "} private static Map < String , String > parseParameters ( String expression ) {"
        },
        {
            "Word": "Classes",
            "WordID": "2",
            "SentID": 4155,
            "TokenID": "6",
            "Context": "Class < ? > implementationClass = Classes . forOptionalName ( implementationName ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "3",
            "SentID": 4180,
            "TokenID": "7",
            "Context": "final Class < ? > interfaceClass = Classes . forOptionalName ( interfaceName ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "4",
            "SentID": 4224,
            "TokenID": "3",
            "Context": "Field field = Classes . getOptionalField ( implementationClass , fieldName ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "6",
            "SentID": 4294,
            "TokenID": "2",
            "Context": "if ( Classes . isInstantiable ( type ) ) {"
        },
        {
            "Word": "Classes",
            "WordID": "7",
            "SentID": 4295,
            "TokenID": "1",
            "Context": "return Classes . newInstance ( type ) ;"
        },
        {
            "Word": "links",
            "WordID": "2",
            "SentID": 4372,
            "TokenID": "4",
            "Context": "handleHeaderLinks ( response , links , linkTemplates ) ;"
        },
        {
            "Word": "links",
            "WordID": "3",
            "SentID": 4373,
            "TokenID": "13",
            "Context": "handleBodyLinks ( serializer . readTree ( entity . getContent ( ) ) , links , linkTemplates ) ;"
        },
        {
            "Word": "links",
            "WordID": "4",
            "SentID": 4375,
            "TokenID": "2",
            "Context": "this . links = unmodifiableMap ( links ) ;"
        },
        {
            "Word": "links",
            "WordID": "5",
            "SentID": 4375,
            "TokenID": "6",
            "Context": "this . links = unmodifiableMap ( links ) ;"
        },
        {
            "Word": "links",
            "WordID": "7",
            "SentID": 4382,
            "TokenID": "2",
            "Context": "getOrAdd ( links , header . getRel ( ) )"
        },
        {
            "Word": "links",
            "WordID": "9",
            "SentID": 4391,
            "TokenID": "10",
            "Context": "Map < URI , String > linksForRel = getOrAdd ( links , rel ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "8",
            "SentID": 4493,
            "TokenID": "6",
            "Context": "ManagedPreDestroy managedInstance = ( ManagedPreDestroy ) Classes . unproxy ( instance ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "9",
            "SentID": 4532,
            "TokenID": "6",
            "Context": "Class < ? > valueType = Classes . forOptionalName ( className ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "10",
            "SentID": 4535,
            "TokenID": "8",
            "Context": "Class < ? extends Converter > converterClass = Classes . forOptionalName ( converterName ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "11",
            "SentID": 4545,
            "TokenID": "6",
            "Context": "Class < ? > pojoClass = Classes . forOptionalName ( pojoClassName ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "12",
            "SentID": 4551,
            "TokenID": "3",
            "Context": "Field staticField = Classes . getOptionalField ( pojoClass , fieldName ) ;"
        },
        {
            "Word": "readers",
            "WordID": "1",
            "SentID": 4589,
            "TokenID": "1",
            "Context": "return readers . get ( null ) ;"
        },
        {
            "Word": "readers",
            "WordID": "3",
            "SentID": 4594,
            "TokenID": "3",
            "Context": "ArgumentsReader reader = readers . get ( key ) ;"
        },
        {
            "Word": "readers",
            "WordID": "4",
            "SentID": 4598,
            "TokenID": "2",
            "Context": "reader = readers . get ( key ) ;"
        },
        {
            "Word": "writers",
            "WordID": "1",
            "SentID": 4606,
            "TokenID": "3",
            "Context": "ValueWriter writer = writers . get ( contentType ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "15",
            "SentID": 4646,
            "TokenID": "3",
            "Context": "TemplateEngine templateEngine = Classes . loadService ( TemplateEngine . class ) ;"
        },
        {
            "Word": "getParameters",
            "WordID": "1",
            "SentID": 4714,
            "TokenID": "4",
            "Context": "parameters = config . getParameters ( ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "16",
            "SentID": 4796,
            "TokenID": "3",
            "Context": "Json json = Classes . loadService ( Json . class ) ;"
        },
        {
            "Word": "bytes",
            "WordID": "3",
            "SentID": 4803,
            "TokenID": "8",
            "Context": "httpResponse . getOutputStream ( ) . write ( bytes ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "17",
            "SentID": 4871,
            "TokenID": "4",
            "Context": "return ( I ) Classes . loadService ( interfaceClasses [ 0 ] ) ;"
        },
        {
            "Word": "setCandidates",
            "WordID": "1",
            "SentID": 4872,
            "TokenID": "3",
            "Context": "} public void setCandidates ( Collection < T > candidates ) {"
        },
        {
            "Word": "Classes",
            "WordID": "18",
            "SentID": 4919,
            "TokenID": "3",
            "Context": "Object object = Classes . newInstance ( type ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "19",
            "SentID": 4920,
            "TokenID": "3",
            "Context": "Field field = Classes . getField ( type , Strings . toMemberName ( parameter . getName ( ) ) ) ;"
        },
        {
            "Word": "strings",
            "WordID": "2",
            "SentID": 4937,
            "TokenID": "4",
            "Context": "return ( T ) strings . toArray ( new String [ strings . size ( ) ] ) ;"
        },
        {
            "Word": "strings",
            "WordID": "3",
            "SentID": 4937,
            "TokenID": "11",
            "Context": "return ( T ) strings . toArray ( new String [ strings . size ( ) ] ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "21",
            "SentID": 4944,
            "TokenID": "6",
            "Context": "Collection < Object > collection = Classes . newCollection ( collectionType ) ;"
        },
        {
            "Word": "types",
            "WordID": "2",
            "SentID": 4965,
            "TokenID": "7",
            "Context": "return preProcessArguments ( managedClass , constructor , types , args ) ;"
        },
        {
            "Word": "types",
            "WordID": "4",
            "SentID": 4970,
            "TokenID": "7",
            "Context": "return preProcessArguments ( managedClass , method , types , args ) ;"
        },
        {
            "Labels": [
                "\"File Management and Data Processing in Java\""
            ],
            "Meaningful": "I don't know",
            "Syntactic": "Objects",
            "Description": "Miscellaneous objects",
            "Lexicographic": "",
            "Semantic": "",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Imprecise",
            "Q3_Answer": "Inferior",
            "Q4_Answer": "",
            "Q5_Answer": "Descriptive",
            "Q6_Answer": "None"
        }
    ],
    "38": [
        {
            "Word": "T",
            "WordID": "1",
            "SentID": 829,
            "TokenID": "0",
            "Context": "T messageForm = this . getNewInstanceBy ( jsonObject ) ;"
        },
        {
            "Word": "T",
            "WordID": "2",
            "SentID": 852,
            "TokenID": "2",
            "Context": "Iterator < T > iterForReturnVal ="
        },
        {
            "Word": "T",
            "WordID": "3",
            "SentID": 855,
            "TokenID": "0",
            "Context": "T returnVal = iterForReturnVal . next ( ) ;"
        },
        {
            "Word": "T",
            "WordID": "4",
            "SentID": 2592,
            "TokenID": "2",
            "Context": "for ( T toAdd : this . getListing ( ) )"
        },
        {
            "Word": "T",
            "WordID": "5",
            "SentID": 3566,
            "TokenID": "4",
            "Context": "} public static < T extends XsdEnum > T belongsToEnum ( final XsdEnum < T > instance , final String value ) {"
        },
        {
            "Word": "T",
            "WordID": "6",
            "SentID": 3566,
            "TokenID": "8",
            "Context": "} public static < T extends XsdEnum > T belongsToEnum ( final XsdEnum < T > instance , final String value ) {"
        },
        {
            "Word": "T",
            "WordID": "7",
            "SentID": 3566,
            "TokenID": "14",
            "Context": "} public static < T extends XsdEnum > T belongsToEnum ( final XsdEnum < T > instance , final String value ) {"
        },
        {
            "Word": "T",
            "WordID": "8",
            "SentID": 3567,
            "TokenID": "2",
            "Context": "Optional < T > enumValue = Arrays . stream ( instance . getValues ( ) ) . filter ( enumField -> enumField . getValue ( ) . equals ( value ) ) . findFirst ( ) ;"
        },
        {
            "Word": "T",
            "WordID": "9",
            "SentID": 4242,
            "TokenID": "4",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Class < ? > clazz , Class < T > annotationClass ) {"
        },
        {
            "Word": "T",
            "WordID": "10",
            "SentID": 4242,
            "TokenID": "8",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Class < ? > clazz , Class < T > annotationClass ) {"
        },
        {
            "Word": "T",
            "WordID": "11",
            "SentID": 4242,
            "TokenID": "19",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Class < ? > clazz , Class < T > annotationClass ) {"
        },
        {
            "Word": "T",
            "WordID": "12",
            "SentID": 4243,
            "TokenID": "0",
            "Context": "T annotation = clazz . getAnnotation ( annotationClass ) ;"
        },
        {
            "Word": "T",
            "WordID": "13",
            "SentID": 4250,
            "TokenID": "4",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Method method , Class < T > annotationClass ) {"
        },
        {
            "Word": "T",
            "WordID": "14",
            "SentID": 4250,
            "TokenID": "8",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Method method , Class < T > annotationClass ) {"
        },
        {
            "Word": "T",
            "WordID": "15",
            "SentID": 4250,
            "TokenID": "16",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Method method , Class < T > annotationClass ) {"
        },
        {
            "Word": "T",
            "WordID": "16",
            "SentID": 4251,
            "TokenID": "0",
            "Context": "T annotation = method . getAnnotation ( annotationClass ) ;"
        },
        {
            "Word": "T",
            "WordID": "17",
            "SentID": 4422,
            "TokenID": "2",
            "Context": "public < T > T newInstance ( ManagedClassSPI managedClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "18",
            "SentID": 4422,
            "TokenID": "4",
            "Context": "public < T > T newInstance ( ManagedClassSPI managedClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "19",
            "SentID": 4423,
            "TokenID": "14",
            "Context": "return getRemoteInstance ( managedClass . getImplementationURL ( ) , ( Class < ? super T > ) managedClass . getInterfaceClass ( ) ) ;"
        },
        {
            "Word": "T",
            "WordID": "20",
            "SentID": 4424,
            "TokenID": "2",
            "Context": "public < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) throws UnsupportedProtocolException {"
        },
        {
            "Word": "T",
            "WordID": "21",
            "SentID": 4424,
            "TokenID": "4",
            "Context": "public < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) throws UnsupportedProtocolException {"
        },
        {
            "Word": "T",
            "WordID": "22",
            "SentID": 4424,
            "TokenID": "14",
            "Context": "public < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) throws UnsupportedProtocolException {"
        },
        {
            "Word": "T",
            "WordID": "23",
            "SentID": 4502,
            "TokenID": "2",
            "Context": "public < T > T getInstance ( Class < ? super T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "24",
            "SentID": 4502,
            "TokenID": "4",
            "Context": "public < T > T getInstance ( Class < ? super T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "25",
            "SentID": 4502,
            "TokenID": "11",
            "Context": "public < T > T getInstance ( Class < ? super T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "26",
            "SentID": 4506,
            "TokenID": "2",
            "Context": "private < T > T getInstance ( ManagedClassSPI managedClass , InstanceKey instanceKey , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "27",
            "SentID": 4506,
            "TokenID": "4",
            "Context": "private < T > T getInstance ( ManagedClassSPI managedClass , InstanceKey instanceKey , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "28",
            "SentID": 4518,
            "TokenID": "2",
            "Context": "return ( T ) instance ;"
        },
        {
            "Word": "T",
            "WordID": "29",
            "SentID": 4522,
            "TokenID": "2",
            "Context": "InstanceInvocationHandler < T > handler = ( InstanceInvocationHandler < T > ) Proxy . getInvocationHandler ( instance ) ;"
        },
        {
            "Word": "T",
            "WordID": "30",
            "SentID": 4522,
            "TokenID": "9",
            "Context": "InstanceInvocationHandler < T > handler = ( InstanceInvocationHandler < T > ) Proxy . getInvocationHandler ( instance ) ;"
        },
        {
            "Word": "T",
            "WordID": "31",
            "SentID": 4561,
            "TokenID": "2",
            "Context": "public < T > T invoke ( Object object , Object ... args ) throws AuthorizationException , IllegalArgumentException , InvocationException {"
        },
        {
            "Word": "T",
            "WordID": "32",
            "SentID": 4561,
            "TokenID": "4",
            "Context": "public < T > T invoke ( Object object , Object ... args ) throws AuthorizationException , IllegalArgumentException , InvocationException {"
        },
        {
            "Word": "T",
            "WordID": "33",
            "SentID": 4566,
            "TokenID": "2",
            "Context": "return ( T ) method . invoke ( object , args ) ;"
        },
        {
            "Word": "T",
            "WordID": "34",
            "SentID": 4569,
            "TokenID": "2",
            "Context": "return ( T ) invoker . invoke ( object , args ) ;"
        },
        {
            "Word": "T",
            "WordID": "35",
            "SentID": 4572,
            "TokenID": "0",
            "Context": "T returnValue = null ;"
        },
        {
            "Word": "T",
            "WordID": "36",
            "SentID": 4573,
            "TokenID": "3",
            "Context": "returnValue = ( T ) invoker . invoke ( object , args ) ;"
        },
        {
            "Word": "T",
            "WordID": "37",
            "SentID": 4621,
            "TokenID": "2",
            "Context": "public < T > T asObject ( String string , Class < T > valueType ) {"
        },
        {
            "Word": "T",
            "WordID": "38",
            "SentID": 4621,
            "TokenID": "4",
            "Context": "public < T > T asObject ( String string , Class < T > valueType ) {"
        },
        {
            "Word": "T",
            "WordID": "39",
            "SentID": 4621,
            "TokenID": "12",
            "Context": "public < T > T asObject ( String string , Class < T > valueType ) {"
        },
        {
            "Word": "T",
            "WordID": "40",
            "SentID": 4622,
            "TokenID": "2",
            "Context": "return ( T ) new InstanceScope ( string ) ;"
        },
        {
            "Word": "T",
            "WordID": "41",
            "SentID": 4652,
            "TokenID": "2",
            "Context": "public < T > T asObject ( String string , Class < T > valueType ) throws IllegalArgumentException , ConverterException {"
        },
        {
            "Word": "T",
            "WordID": "42",
            "SentID": 4652,
            "TokenID": "4",
            "Context": "public < T > T asObject ( String string , Class < T > valueType ) throws IllegalArgumentException , ConverterException {"
        },
        {
            "Word": "T",
            "WordID": "43",
            "SentID": 4652,
            "TokenID": "12",
            "Context": "public < T > T asObject ( String string , Class < T > valueType ) throws IllegalArgumentException , ConverterException {"
        },
        {
            "Word": "T",
            "WordID": "44",
            "SentID": 4653,
            "TokenID": "2",
            "Context": "return ( T ) new InstanceType ( string ) ;"
        },
        {
            "Word": "T",
            "WordID": "45",
            "SentID": 4664,
            "TokenID": "0",
            "Context": "T instance = appFactory . getInstance ( interfaceClass ) ;"
        },
        {
            "Word": "T",
            "WordID": "46",
            "SentID": 4732,
            "TokenID": "3",
            "Context": "} protected < T > T getParameter ( String name , Class < T > type ) {"
        },
        {
            "Word": "T",
            "WordID": "47",
            "SentID": 4732,
            "TokenID": "5",
            "Context": "} protected < T > T getParameter ( String name , Class < T > type ) {"
        },
        {
            "Word": "T",
            "WordID": "48",
            "SentID": 4732,
            "TokenID": "13",
            "Context": "} protected < T > T getParameter ( String name , Class < T > type ) {"
        },
        {
            "Word": "T",
            "WordID": "49",
            "SentID": 4832,
            "TokenID": "2",
            "Context": "return ( T ) Proxy . newProxyInstance ( classLoader , interfaceClasses , handler ) ;"
        },
        {
            "Word": "T",
            "WordID": "50",
            "SentID": 4841,
            "TokenID": "4",
            "Context": "} public static < T > T getInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "51",
            "SentID": 4841,
            "TokenID": "6",
            "Context": "} public static < T > T getInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "52",
            "SentID": 4841,
            "TokenID": "11",
            "Context": "} public static < T > T getInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "53",
            "SentID": 4843,
            "TokenID": "4",
            "Context": "} public static < T > T getInstance ( String instanceName , Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "54",
            "SentID": 4843,
            "TokenID": "6",
            "Context": "} public static < T > T getInstance ( String instanceName , Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "55",
            "SentID": 4843,
            "TokenID": "14",
            "Context": "} public static < T > T getInstance ( String instanceName , Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "56",
            "SentID": 4845,
            "TokenID": "4",
            "Context": "} public static < T > T getOptionalInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "57",
            "SentID": 4845,
            "TokenID": "6",
            "Context": "} public static < T > T getOptionalInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "58",
            "SentID": 4845,
            "TokenID": "11",
            "Context": "} public static < T > T getOptionalInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "T",
            "WordID": "59",
            "SentID": 4847,
            "TokenID": "4",
            "Context": "} public static < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) {"
        },
        {
            "Word": "T",
            "WordID": "60",
            "SentID": 4847,
            "TokenID": "6",
            "Context": "} public static < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) {"
        },
        {
            "Word": "T",
            "WordID": "61",
            "SentID": 4847,
            "TokenID": "16",
            "Context": "} public static < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) {"
        },
        {
            "Word": "T",
            "WordID": "62",
            "SentID": 4872,
            "TokenID": "7",
            "Context": "} public void setCandidates ( Collection < T > candidates ) {"
        },
        {
            "Word": "T",
            "WordID": "63",
            "SentID": 4929,
            "TokenID": "3",
            "Context": "private static < T > T asObject ( String value , Type type ) {"
        },
        {
            "Word": "T",
            "WordID": "64",
            "SentID": 4929,
            "TokenID": "5",
            "Context": "private static < T > T asObject ( String value , Type type ) {"
        },
        {
            "Word": "T",
            "WordID": "65",
            "SentID": 4930,
            "TokenID": "2",
            "Context": "return ( T ) Types . getEmptyValue ( type ) ;"
        },
        {
            "Word": "T",
            "WordID": "66",
            "SentID": 4934,
            "TokenID": "14",
            "Context": "return ConverterRegistry . getConverter ( ) . asObject ( value , ( Class < T > ) type ) ;"
        },
        {
            "Word": "T",
            "WordID": "67",
            "SentID": 4937,
            "TokenID": "2",
            "Context": "return ( T ) strings . toArray ( new String [ strings . size ( ) ] ) ;"
        },
        {
            "Word": "T",
            "WordID": "68",
            "SentID": 4948,
            "TokenID": "2",
            "Context": "return ( T ) collection ;"
        },
        {
            "Labels": [
                "\"Single Letter Variable T in Java Code\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "T",
            "Semantic": "Generics",
            "Syntactic": "Variable",
            "Description": "T variable used in generics",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "276": [
        {
            "Word": "<",
            "WordID": "30",
            "SentID": 852,
            "TokenID": "1",
            "Context": "Iterator < T > iterForReturnVal ="
        },
        {
            "Word": "<",
            "WordID": "109",
            "SentID": 2754,
            "TokenID": "1",
            "Context": "List < ? extends ABaseFluidJSONObject > returnValue ="
        },
        {
            "Word": "<",
            "WordID": "114",
            "SentID": 2867,
            "TokenID": "1",
            "Context": "ResponseHandler < String > responseHandler = this . getJsonResponseHandler ("
        },
        {
            "Word": "<",
            "WordID": "117",
            "SentID": 2973,
            "TokenID": "3",
            "Context": "} private ResponseHandler < String > getJsonResponseHandler ( final String urlCalledParam ) {"
        },
        {
            "Word": "<",
            "WordID": "118",
            "SentID": 2974,
            "TokenID": "1",
            "Context": "ResponseHandler < String > responseHandler = new ResponseHandler < String > ( ) {"
        },
        {
            "Word": "<",
            "WordID": "119",
            "SentID": 2974,
            "TokenID": "8",
            "Context": "ResponseHandler < String > responseHandler = new ResponseHandler < String > ( ) {"
        },
        {
            "Word": "<",
            "WordID": "138",
            "SentID": 3415,
            "TokenID": "1",
            "Context": "Optional < UnsolvedReferenceItem > innerEntry ="
        },
        {
            "Word": "<",
            "WordID": "146",
            "SentID": 3536,
            "TokenID": "1",
            "Context": "BiFunction < XsdParserCore , Node , ReferenceBase > parserFunction = XsdParserCore . getParseMappers ( ) . get ( nodeName ) ;"
        },
        {
            "Word": "<",
            "WordID": "153",
            "SentID": 3566,
            "TokenID": "13",
            "Context": "} public static < T extends XsdEnum > T belongsToEnum ( final XsdEnum < T > instance , final String value ) {"
        },
        {
            "Word": "<",
            "WordID": "154",
            "SentID": 3567,
            "TokenID": "1",
            "Context": "Optional < T > enumValue = Arrays . stream ( instance . getValues ( ) ) . filter ( enumField -> enumField . getValue ( ) . equals ( value ) ) . findFirst ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "156",
            "SentID": 3641,
            "TokenID": "6",
            "Context": "} private Object resolve ( Class < ? > targetType , Random annotation ) {"
        },
        {
            "Word": "<",
            "WordID": "157",
            "SentID": 3660,
            "TokenID": "2",
            "Context": "new SimpleFileVisitor < Path > ( ) {"
        },
        {
            "Word": "<",
            "WordID": "158",
            "SentID": 3675,
            "TokenID": "3",
            "Context": "} private Predicate < String > getPredicate ( ExpectedException annotation ) {"
        },
        {
            "Word": "<",
            "WordID": "177",
            "SentID": 3938,
            "TokenID": "6",
            "Context": "dataSource . setDriverClass ( ( Class < Driver > ) Class . forName ( driverClassName ) ) ;"
        },
        {
            "Word": "<",
            "WordID": "179",
            "SentID": 3952,
            "TokenID": "1",
            "Context": "Class < ? > [ ] interfaceClasses = managedClass . getInterfaceClasses ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "181",
            "SentID": 3963,
            "TokenID": "1",
            "Context": "Class < ? > type = ( Class < ? > ) formalParameters [ 0 ] ;"
        },
        {
            "Word": "<",
            "WordID": "182",
            "SentID": 3963,
            "TokenID": "8",
            "Context": "Class < ? > type = ( Class < ? > ) formalParameters [ 0 ] ;"
        },
        {
            "Word": "<",
            "WordID": "187",
            "SentID": 4084,
            "TokenID": "1",
            "Context": "Class < ? extends Interceptor > classInterceptor = getInterceptorClass ( implementationClass ) ;"
        },
        {
            "Word": "<",
            "WordID": "188",
            "SentID": 4097,
            "TokenID": "1",
            "Context": "Class < ? extends Interceptor > methodInterceptor = getInterceptorClass ( method ) ;"
        },
        {
            "Word": "<",
            "WordID": "189",
            "SentID": 4150,
            "TokenID": "3",
            "Context": "} private Class < ? > loadImplementationClass ( Config descriptor ) throws ConfigException {"
        },
        {
            "Word": "<",
            "WordID": "190",
            "SentID": 4155,
            "TokenID": "1",
            "Context": "Class < ? > implementationClass = Classes . forOptionalName ( implementationName ) ;"
        },
        {
            "Word": "<",
            "WordID": "191",
            "SentID": 4162,
            "TokenID": "3",
            "Context": "} private Class < ? > [ ] loadInterfaceClasses ( Config descriptor ) throws ConfigException {"
        },
        {
            "Word": "<",
            "WordID": "194",
            "SentID": 4167,
            "TokenID": "3",
            "Context": "return new Class < ? > [ ] { implementationClass } ;"
        },
        {
            "Word": "<",
            "WordID": "196",
            "SentID": 4177,
            "TokenID": "1",
            "Context": "Class < ? > [ ] interfaceClasses = new Class < ? > [ interfaceNames . size ( ) ] ;"
        },
        {
            "Word": "<",
            "WordID": "197",
            "SentID": 4177,
            "TokenID": "10",
            "Context": "Class < ? > [ ] interfaceClasses = new Class < ? > [ interfaceNames . size ( ) ] ;"
        },
        {
            "Word": "<",
            "WordID": "199",
            "SentID": 4180,
            "TokenID": "2",
            "Context": "final Class < ? > interfaceClass = Classes . forOptionalName ( interfaceName ) ;"
        },
        {
            "Word": "<",
            "WordID": "200",
            "SentID": 4199,
            "TokenID": "4",
            "Context": "} private static Constructor < ? > getDeclaredConstructor ( Class < ? > implementationClass ) {"
        },
        {
            "Word": "<",
            "WordID": "201",
            "SentID": 4199,
            "TokenID": "10",
            "Context": "} private static Constructor < ? > getDeclaredConstructor ( Class < ? > implementationClass ) {"
        },
        {
            "Word": "<",
            "WordID": "202",
            "SentID": 4200,
            "TokenID": "1",
            "Context": "Constructor < ? > [ ] declaredConstructors = ( Constructor < ? > [ ] ) implementationClass . getDeclaredConstructors ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "203",
            "SentID": 4200,
            "TokenID": "10",
            "Context": "Constructor < ? > [ ] declaredConstructors = ( Constructor < ? > [ ] ) implementationClass . getDeclaredConstructors ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "204",
            "SentID": 4202,
            "TokenID": "3",
            "Context": "for ( Constructor < ? > declaredConstructor : declaredConstructors ) {"
        },
        {
            "Word": "<",
            "WordID": "206",
            "SentID": 4211,
            "TokenID": "10",
            "Context": "} private static Collection < Field > scanDependencies ( Class < ? > clazz ) {"
        },
        {
            "Word": "<",
            "WordID": "209",
            "SentID": 4235,
            "TokenID": "3",
            "Context": "for ( Class < ? > interfaceClass : interfaceClasses ) {"
        },
        {
            "Word": "<",
            "WordID": "211",
            "SentID": 4242,
            "TokenID": "12",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Class < ? > clazz , Class < T > annotationClass ) {"
        },
        {
            "Word": "<",
            "WordID": "212",
            "SentID": 4242,
            "TokenID": "18",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Class < ? > clazz , Class < T > annotationClass ) {"
        },
        {
            "Word": "<",
            "WordID": "213",
            "SentID": 4244,
            "TokenID": "3",
            "Context": "for ( Class < ? > interfaceClass : clazz . getInterfaces ( ) ) {"
        },
        {
            "Word": "<",
            "WordID": "214",
            "SentID": 4248,
            "TokenID": "7",
            "Context": "} private static boolean hasAnnotation ( Class < ? > clazz , Class < ? extends Annotation > annotationClass ) {"
        },
        {
            "Word": "<",
            "WordID": "215",
            "SentID": 4248,
            "TokenID": "13",
            "Context": "} private static boolean hasAnnotation ( Class < ? > clazz , Class < ? extends Annotation > annotationClass ) {"
        },
        {
            "Word": "<",
            "WordID": "217",
            "SentID": 4250,
            "TokenID": "15",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Method method , Class < T > annotationClass ) {"
        },
        {
            "Word": "<",
            "WordID": "218",
            "SentID": 4252,
            "TokenID": "3",
            "Context": "for ( Class < ? > interfaceClass : method . getDeclaringClass ( ) . getInterfaces ( ) ) {"
        },
        {
            "Word": "<",
            "WordID": "219",
            "SentID": 4257,
            "TokenID": "4",
            "Context": "} private static Class < ? extends Interceptor > getInterceptorClass ( Class < ? > clazz ) {"
        },
        {
            "Word": "<",
            "WordID": "220",
            "SentID": 4257,
            "TokenID": "12",
            "Context": "} private static Class < ? extends Interceptor > getInterceptorClass ( Class < ? > clazz ) {"
        },
        {
            "Word": "<",
            "WordID": "221",
            "SentID": 4260,
            "TokenID": "4",
            "Context": "} private static Class < ? extends Interceptor > getInterceptorClass ( Method method ) {"
        },
        {
            "Word": "<",
            "WordID": "224",
            "SentID": 4269,
            "TokenID": "4",
            "Context": "} private static Class < ? > type ( Field field ) {"
        },
        {
            "Word": "<",
            "WordID": "225",
            "SentID": 4271,
            "TokenID": "3",
            "Context": "return ( Class < ? > ) ( ( ParameterizedType ) field . getGenericType ( ) ) . getActualTypeArguments ( ) [ 0 ] ;"
        },
        {
            "Word": "<",
            "WordID": "226",
            "SentID": 4273,
            "TokenID": "9",
            "Context": "protected static Object getDependencyValue ( ManagedClassSPI hostManagedClass , Class < ? > type ) {"
        },
        {
            "Word": "<",
            "WordID": "227",
            "SentID": 4274,
            "TokenID": "1",
            "Context": "Stack < Class < ? > > stackTrace = dependenciesStack . get ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "228",
            "SentID": 4274,
            "TokenID": "3",
            "Context": "Stack < Class < ? > > stackTrace = dependenciesStack . get ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "230",
            "SentID": 4281,
            "TokenID": "3",
            "Context": "for ( Class < ? > stackTraceClass : stackTrace ) {"
        },
        {
            "Word": "<",
            "WordID": "231",
            "SentID": 4289,
            "TokenID": "1",
            "Context": "ScopeProxyHandler < ? > handler = new ScopeProxyHandler < > ( container , type ) ;"
        },
        {
            "Word": "<",
            "WordID": "233",
            "SentID": 4291,
            "TokenID": "9",
            "Context": "Object value = container . getOptionalInstance ( ( Class < ? super Object > ) type ) ;"
        },
        {
            "Word": "<",
            "WordID": "234",
            "SentID": 4303,
            "TokenID": "2",
            "Context": "} StoppableObservable < TEntity > getObservable ( Scheduler scheduler ) {"
        },
        {
            "Word": "<",
            "WordID": "235",
            "SentID": 4304,
            "TokenID": "9",
            "Context": "return runAsync ( scheduler , ( rx . Observer < ? super TEntity > observer , Subscription subscription ) -> {"
        },
        {
            "Word": "<",
            "WordID": "255",
            "SentID": 4414,
            "TokenID": "3",
            "Context": "} protected Optional < Boolean > isMethodAllowed ( String method ) {"
        },
        {
            "Word": "<",
            "WordID": "257",
            "SentID": 4423,
            "TokenID": "11",
            "Context": "return getRemoteInstance ( managedClass . getImplementationURL ( ) , ( Class < ? super T > ) managedClass . getInterfaceClass ( ) ) ;"
        },
        {
            "Word": "<",
            "WordID": "259",
            "SentID": 4424,
            "TokenID": "11",
            "Context": "public < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) throws UnsupportedProtocolException {"
        },
        {
            "Word": "<",
            "WordID": "263",
            "SentID": 4468,
            "TokenID": "3",
            "Context": "for ( Class < ? > interfaceClass : managedClass . getInterfaceClasses ( ) ) {"
        },
        {
            "Word": "<",
            "WordID": "266",
            "SentID": 4478,
            "TokenID": "13",
            "Context": "Set < ManagedClassSPI > sortedClasses = new TreeSet < > ( new Comparator < ManagedClassSPI > ( ) {"
        },
        {
            "Word": "<",
            "WordID": "267",
            "SentID": 4485,
            "TokenID": "4",
            "Context": "getInstance ( ( Class < ? super Object > ) managedClass . getInterfaceClass ( ) ) ;"
        },
        {
            "Word": "<",
            "WordID": "269",
            "SentID": 4502,
            "TokenID": "8",
            "Context": "public < T > T getInstance ( Class < ? super T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "<",
            "WordID": "271",
            "SentID": 4522,
            "TokenID": "1",
            "Context": "InstanceInvocationHandler < T > handler = ( InstanceInvocationHandler < T > ) Proxy . getInvocationHandler ( instance ) ;"
        },
        {
            "Word": "<",
            "WordID": "272",
            "SentID": 4522,
            "TokenID": "8",
            "Context": "InstanceInvocationHandler < T > handler = ( InstanceInvocationHandler < T > ) Proxy . getInvocationHandler ( instance ) ;"
        },
        {
            "Word": "<",
            "WordID": "273",
            "SentID": 4532,
            "TokenID": "1",
            "Context": "Class < ? > valueType = Classes . forOptionalName ( className ) ;"
        },
        {
            "Word": "<",
            "WordID": "274",
            "SentID": 4535,
            "TokenID": "1",
            "Context": "Class < ? extends Converter > converterClass = Classes . forOptionalName ( converterName ) ;"
        },
        {
            "Word": "<",
            "WordID": "275",
            "SentID": 4545,
            "TokenID": "1",
            "Context": "Class < ? > pojoClass = Classes . forOptionalName ( pojoClassName ) ;"
        },
        {
            "Word": "<",
            "WordID": "277",
            "SentID": 4608,
            "TokenID": "2",
            "Context": "} StoppableObservable < TEntity > getObservable ( final long startIndex , Scheduler scheduler ) {"
        },
        {
            "Word": "<",
            "WordID": "278",
            "SentID": 4611,
            "TokenID": "1",
            "Context": "PartialResponse < TEntity > response ;"
        },
        {
            "Word": "<",
            "WordID": "280",
            "SentID": 4621,
            "TokenID": "11",
            "Context": "public < T > T asObject ( String string , Class < T > valueType ) {"
        },
        {
            "Word": "<",
            "WordID": "282",
            "SentID": 4652,
            "TokenID": "11",
            "Context": "public < T > T asObject ( String string , Class < T > valueType ) throws IllegalArgumentException , ConverterException {"
        },
        {
            "Word": "<",
            "WordID": "288",
            "SentID": 4732,
            "TokenID": "12",
            "Context": "} protected < T > T getParameter ( String name , Class < T > type ) {"
        },
        {
            "Word": "<",
            "WordID": "289",
            "SentID": 4805,
            "TokenID": "3",
            "Context": "( ( StreamHandler < ? > ) value ) . invokeHandler ( httpResponse . getOutputStream ( ) ) ;"
        },
        {
            "Word": "<",
            "WordID": "291",
            "SentID": 4821,
            "TokenID": "1",
            "Context": "Constructor < ? > constructor = managedClass . getConstructor ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "292",
            "SentID": 4831,
            "TokenID": "2",
            "Context": "final Class < ? > [ ] interfaceClasses = managedClass . getInterfaceClasses ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "295",
            "SentID": 4841,
            "TokenID": "10",
            "Context": "} public static < T > T getInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "<",
            "WordID": "297",
            "SentID": 4843,
            "TokenID": "13",
            "Context": "} public static < T > T getInstance ( String instanceName , Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "<",
            "WordID": "299",
            "SentID": 4845,
            "TokenID": "10",
            "Context": "} public static < T > T getOptionalInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "<",
            "WordID": "301",
            "SentID": 4847,
            "TokenID": "13",
            "Context": "} public static < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) {"
        },
        {
            "Word": "<",
            "WordID": "306",
            "SentID": 4883,
            "TokenID": "6",
            "Context": "} protected Component buildAndBind ( Class < TEntity > entityType ) {"
        },
        {
            "Word": "<",
            "WordID": "314",
            "SentID": 4934,
            "TokenID": "13",
            "Context": "return ConverterRegistry . getConverter ( ) . asObject ( value , ( Class < T > ) type ) ;"
        },
        {
            "Word": "<",
            "WordID": "316",
            "SentID": 4940,
            "TokenID": "1",
            "Context": "Class < ? > itemType = String . class ;"
        },
        {
            "Word": "<",
            "WordID": "317",
            "SentID": 4943,
            "TokenID": "4",
            "Context": "itemType = ( Class < ? > ) ( ( ParameterizedType ) type ) . getActualTypeArguments ( ) [ 0 ] ;"
        },
        {
            "Word": "<",
            "WordID": "318",
            "SentID": 4944,
            "TokenID": "1",
            "Context": "Collection < Object > collection = Classes . newCollection ( collectionType ) ;"
        },
        {
            "Word": "<",
            "WordID": "319",
            "SentID": 4964,
            "TokenID": "2",
            "Context": "final Class < ? > [ ] types = constructor . getParameterTypes ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "320",
            "SentID": 4969,
            "TokenID": "2",
            "Context": "final Class < ? > [ ] types = method . getParameterTypes ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "321",
            "SentID": 4971,
            "TokenID": "15",
            "Context": "} private static Object [ ] preProcessArguments ( ManagedClassSPI managedClass , Member member , Class < ? > [ ] formalParameters , Object ... args ) {"
        },
        {
            "Word": "<",
            "WordID": "322",
            "SentID": 4976,
            "TokenID": "8",
            "Context": "args [ 0 ] = ( ( VarArgs < ? > ) args [ 0 ] ) . getArguments ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "324",
            "SentID": 4991,
            "TokenID": "5",
            "Context": "public void handle ( ElementEvent < TEntity > message ) {"
        },
        {
            "Word": "<",
            "WordID": "326",
            "SentID": 4995,
            "TokenID": "9",
            "Context": "public static List < PropertyDescriptor > getProperties ( Class < ? > beanType ) {"
        },
        {
            "Labels": [
                "\"Punctuation: Period Operator in Java\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "Opening Angle Bracket",
            "Semantic": "Generics",
            "Lexicographic": "<",
            "Description": "Opening angle bracket for generics",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "498": [
        {
            "Word": "while",
            "WordID": "1",
            "SentID": 854,
            "TokenID": "0",
            "Context": "while ( iterForReturnVal . hasNext ( ) )"
        },
        {
            "Word": "while",
            "WordID": "2",
            "SentID": 877,
            "TokenID": "0",
            "Context": "while ( ( len = zis . read ( buffer ) ) > 0 ) {"
        },
        {
            "Word": "while",
            "WordID": "3",
            "SentID": 1006,
            "TokenID": "0",
            "Context": "while ( resultSet . next ( ) )"
        },
        {
            "Word": "while",
            "WordID": "4",
            "SentID": 1839,
            "TokenID": "0",
            "Context": "while ( resultSet . next ( ) ) {"
        },
        {
            "Word": "while",
            "WordID": "5",
            "SentID": 1936,
            "TokenID": "0",
            "Context": "while ( ( readLine = reader . readLine ( ) ) != null ) {"
        },
        {
            "Word": "while",
            "WordID": "6",
            "SentID": 1940,
            "TokenID": "0",
            "Context": "while ( ( readLine = errorReader . readLine ( ) ) != null ) {"
        },
        {
            "Word": "while",
            "WordID": "7",
            "SentID": 2175,
            "TokenID": "0",
            "Context": "while ( iterKeys . hasNext ( ) )"
        },
        {
            "Word": "while",
            "WordID": "8",
            "SentID": 3810,
            "TokenID": "0",
            "Context": "while ( ( line = br . readLine ( ) ) != null ) {"
        },
        {
            "Word": "while",
            "WordID": "9",
            "SentID": 3859,
            "TokenID": "0",
            "Context": "while ( ( data = readNext ( ) ) != - 1 ) {"
        },
        {
            "Word": "while",
            "WordID": "10",
            "SentID": 3890,
            "TokenID": "0",
            "Context": "while ( ( word = mmSeg . next ( ) ) != null ) {"
        },
        {
            "Word": "while",
            "WordID": "11",
            "SentID": 4309,
            "TokenID": "0",
            "Context": "while ( endCondition == null || ! endCondition . test ( previousEntity ) ) {"
        },
        {
            "Word": "while",
            "WordID": "12",
            "SentID": 4421,
            "TokenID": "1",
            "Context": "} while ( throwable != null ) ;"
        },
        {
            "Word": "while",
            "WordID": "13",
            "SentID": 4610,
            "TokenID": "0",
            "Context": "while ( ! subscription . isUnsubscribed ( ) ) {"
        },
        {
            "Labels": [
                "\"Loop Control Structure\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "While",
            "Semantic": "Loops",
            "Syntactic": "keyword",
            "Description": "while keyword used in loops",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "395": [
        {
            "Word": "hasNext",
            "WordID": "1",
            "SentID": 854,
            "TokenID": "4",
            "Context": "while ( iterForReturnVal . hasNext ( ) )"
        },
        {
            "Word": "next",
            "WordID": "1",
            "SentID": 855,
            "TokenID": "5",
            "Context": "T returnVal = iterForReturnVal . next ( ) ;"
        },
        {
            "Word": "next",
            "WordID": "2",
            "SentID": 1006,
            "TokenID": "4",
            "Context": "while ( resultSet . next ( ) )"
        },
        {
            "Word": "next",
            "WordID": "3",
            "SentID": 1032,
            "TokenID": "4",
            "Context": "if ( resultSet . next ( ) ) {"
        },
        {
            "Word": "next",
            "WordID": "4",
            "SentID": 1839,
            "TokenID": "4",
            "Context": "while ( resultSet . next ( ) ) {"
        },
        {
            "Word": "next",
            "WordID": "5",
            "SentID": 1867,
            "TokenID": "4",
            "Context": "if ( resultSetForTblInfo . next ( ) ) {"
        },
        {
            "Word": "hasNext",
            "WordID": "2",
            "SentID": 2023,
            "TokenID": "2",
            "Context": "fieldIter . hasNext ( ) ; ) {"
        },
        {
            "Word": "next",
            "WordID": "6",
            "SentID": 2024,
            "TokenID": "5",
            "Context": "Field field = fieldIter . next ( ) ;"
        },
        {
            "Word": "hasNext",
            "WordID": "3",
            "SentID": 2036,
            "TokenID": "2",
            "Context": "fieldIter . hasNext ( ) ; fieldIndex ++ ) {"
        },
        {
            "Word": "hasNext",
            "WordID": "4",
            "SentID": 2175,
            "TokenID": "4",
            "Context": "while ( iterKeys . hasNext ( ) )"
        },
        {
            "Word": "next",
            "WordID": "7",
            "SentID": 2176,
            "TokenID": "5",
            "Context": "String key = iterKeys . next ( ) ;"
        },
        {
            "Word": "next",
            "WordID": "8",
            "SentID": 3890,
            "TokenID": "7",
            "Context": "while ( ( word = mmSeg . next ( ) ) != null ) {"
        },
        {
            "Word": "hasNext",
            "WordID": "5",
            "SentID": 3980,
            "TokenID": "5",
            "Context": "if ( ! form . hasNext ( ) ) {"
        },
        {
            "Word": "next",
            "WordID": "9",
            "SentID": 3981,
            "TokenID": "5",
            "Context": "Part part = form . next ( ) ;"
        },
        {
            "Word": "hasNext",
            "WordID": "6",
            "SentID": 4578,
            "TokenID": "5",
            "Context": "if ( ! fileItemIterator . hasNext ( ) ) {"
        },
        {
            "Word": "next",
            "WordID": "10",
            "SentID": 4579,
            "TokenID": "5",
            "Context": "FileItemStream fileItemStream = fileItemIterator . next ( ) ;"
        },
        {
            "Word": "next",
            "WordID": "11",
            "SentID": 4632,
            "TokenID": "4",
            "Context": "fileItemStream = iterator . next ( ) ;"
        },
        {
            "Labels": [
                "Iteration Methods"
            ],
            "Meaningful": "Yes",
            "Lexicographic": "next",
            "Semantic": "Conditionals, Loops",
            "Syntactic": "methods",
            "Description": "next() and hasNext() methods called in conditionals and loops",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "245": [
        {
            "Word": "allReturnValueEchoMessages",
            "WordID": "1",
            "SentID": 861,
            "TokenID": "4",
            "Context": "List < String > allReturnValueEchoMessages ="
        },
        {
            "Word": "allReturnValueEchoMessages",
            "WordID": "2",
            "SentID": 864,
            "TokenID": "3",
            "Context": "if ( ! allReturnValueEchoMessages . contains ( toCheckFor ) )"
        },
        {
            "Word": "getRoleToFormDefinitions",
            "WordID": "1",
            "SentID": 1107,
            "TokenID": "4",
            "Context": "if ( this . getRoleToFormDefinitions ( ) != null &&"
        },
        {
            "Word": "getRoleToFormDefinitions",
            "WordID": "2",
            "SentID": 1108,
            "TokenID": "3",
            "Context": "! this . getRoleToFormDefinitions ( ) . isEmpty ( ) )"
        },
        {
            "Word": "getRoleToFormDefinitions",
            "WordID": "3",
            "SentID": 1110,
            "TokenID": "7",
            "Context": "for ( RoleToFormDefinition toAdd : this . getRoleToFormDefinitions ( ) )"
        },
        {
            "Word": "getRoleToFormFieldToFormDefinitions",
            "WordID": "1",
            "SentID": 1113,
            "TokenID": "4",
            "Context": "if ( this . getRoleToFormFieldToFormDefinitions ( ) != null &&"
        },
        {
            "Word": "getRoleToFormFieldToFormDefinitions",
            "WordID": "2",
            "SentID": 1114,
            "TokenID": "3",
            "Context": "! this . getRoleToFormFieldToFormDefinitions ( ) . isEmpty ( ) )"
        },
        {
            "Word": "getRoleToFormFieldToFormDefinitions",
            "WordID": "3",
            "SentID": 1116,
            "TokenID": "7",
            "Context": "for ( RoleToFormFieldToFormDefinition toAdd : this . getRoleToFormFieldToFormDefinitions ( ) )"
        },
        {
            "Word": "HttpClients",
            "WordID": "1",
            "SentID": 3017,
            "TokenID": "4",
            "Context": "this . closeableHttpClient = HttpClients . custom ( ) . setSSLSocketFactory ("
        },
        {
            "Word": "HttpClients",
            "WordID": "2",
            "SentID": 3025,
            "TokenID": "4",
            "Context": "this . closeableHttpClient = HttpClients . createDefault ( ) ;"
        },
        {
            "Word": "messageHandlers",
            "WordID": "1",
            "SentID": 3089,
            "TokenID": "4",
            "Context": "if ( this . messageHandlers != null ) {"
        },
        {
            "Word": "messageHandlers",
            "WordID": "2",
            "SentID": 3090,
            "TokenID": "2",
            "Context": "this . messageHandlers . values ( ) . forEach ( handle -> {"
        },
        {
            "Word": "messageHandlers",
            "WordID": "3",
            "SentID": 3095,
            "TokenID": "12",
            "Context": "for ( IMessageResponseHandler handler : new ArrayList < > ( this . messageHandlers . values ( ) ) ) {"
        },
        {
            "Word": "attributeGroups",
            "WordID": "1",
            "SentID": 3355,
            "TokenID": "0",
            "Context": "attributeGroups . stream ( )"
        },
        {
            "Word": "attributeGroups",
            "WordID": "2",
            "SentID": 3358,
            "TokenID": "0",
            "Context": "attributeGroups . remove ( referenceBase ) ;"
        },
        {
            "Word": "attributeGroups",
            "WordID": "3",
            "SentID": 3359,
            "TokenID": "0",
            "Context": "attributeGroups . add ( element ) ;"
        },
        {
            "Word": "restrictions",
            "WordID": "2",
            "SentID": 3438,
            "TokenID": "0",
            "Context": "restrictions . put ( xsdBuiltinTypes . get ( restriction . getBase ( ) ) , restriction ) ;"
        },
        {
            "Word": "restrictions",
            "WordID": "4",
            "SentID": 3447,
            "TokenID": "0",
            "Context": "restrictions . put ( xsdBuiltinTypes . get ( unionMemberRestriction . getBase ( ) ) , unionMemberRestriction ) ;"
        },
        {
            "Word": "mHeaderViewInfos",
            "WordID": "1",
            "SentID": 3624,
            "TokenID": "0",
            "Context": "mHeaderViewInfos . add ( info ) ;"
        },
        {
            "Word": "mHeaderViewInfos",
            "WordID": "2",
            "SentID": 3627,
            "TokenID": "5",
            "Context": "mAdapter = new FooterViewGridAdapter ( mHeaderViewInfos , mFooterViewInfos , mAdapter ) ;"
        },
        {
            "Word": "mFooterViewInfos",
            "WordID": "1",
            "SentID": 3627,
            "TokenID": "7",
            "Context": "mAdapter = new FooterViewGridAdapter ( mHeaderViewInfos , mFooterViewInfos , mAdapter ) ;"
        },
        {
            "Word": "mFooterViewInfos",
            "WordID": "2",
            "SentID": 3630,
            "TokenID": "2",
            "Context": "if ( mFooterViewInfos . size ( ) > 0 ) {"
        },
        {
            "Word": "mFooterViewInfos",
            "WordID": "3",
            "SentID": 3633,
            "TokenID": "4",
            "Context": "removeFixedViewInfo ( v , mFooterViewInfos ) ;"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "1",
            "SentID": 3952,
            "TokenID": "6",
            "Context": "Class < ? > [ ] interfaceClasses = managedClass . getInterfaceClasses ( ) ;"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "2",
            "SentID": 3953,
            "TokenID": "6",
            "Context": "StringBuilder interfaceNames = new StringBuilder ( interfaceClasses [ 0 ] . getName ( ) ) ;"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "3",
            "SentID": 3954,
            "TokenID": "9",
            "Context": "for ( int i = 1 ; i < interfaceClasses . length ; ++ i ) {"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "4",
            "SentID": 3955,
            "TokenID": "4",
            "Context": "interfaceNames . append ( interfaceClasses [ i ] . getName ( ) ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "1",
            "SentID": 4061,
            "TokenID": "0",
            "Context": "Classes . setFieldValue ( instance , field . getAttribute ( \"name\" ) , field . getAttribute ( \"value\" ) ) ;"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "5",
            "SentID": 4177,
            "TokenID": "6",
            "Context": "Class < ? > [ ] interfaceClasses = new Class < ? > [ interfaceNames . size ( ) ] ;"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "6",
            "SentID": 4185,
            "TokenID": "0",
            "Context": "interfaceClasses [ i ] = interfaceClass ;"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "7",
            "SentID": 4186,
            "TokenID": "1",
            "Context": "return interfaceClasses ;"
        },
        {
            "Word": "declaredConstructors",
            "WordID": "1",
            "SentID": 4200,
            "TokenID": "6",
            "Context": "Constructor < ? > [ ] declaredConstructors = ( Constructor < ? > [ ] ) implementationClass . getDeclaredConstructors ( ) ;"
        },
        {
            "Word": "declaredConstructors",
            "WordID": "2",
            "SentID": 4201,
            "TokenID": "2",
            "Context": "if ( declaredConstructors . length == 0 ) {"
        },
        {
            "Word": "declaredConstructors",
            "WordID": "3",
            "SentID": 4202,
            "TokenID": "8",
            "Context": "for ( Constructor < ? > declaredConstructor : declaredConstructors ) {"
        },
        {
            "Word": "declaredConstructors",
            "WordID": "4",
            "SentID": 4208,
            "TokenID": "2",
            "Context": "constructor = declaredConstructors [ 0 ] ;"
        },
        {
            "Word": "Classes",
            "WordID": "5",
            "SentID": 4229,
            "TokenID": "0",
            "Context": "Classes . setFieldValue ( null , field , config . getAttribute ( \"value\" , field . getType ( ) ) ) ;"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "8",
            "SentID": 4235,
            "TokenID": "8",
            "Context": "for ( Class < ? > interfaceClass : interfaceClasses ) {"
        },
        {
            "Word": "getInterfaceClasses",
            "WordID": "2",
            "SentID": 4290,
            "TokenID": "17",
            "Context": "return Proxy . newProxyInstance ( dependencyManagedClass . getImplementationClass ( ) . getClassLoader ( ) , dependencyManagedClass . getInterfaceClasses ( ) , handler ) ;"
        },
        {
            "Word": "remoteFactories",
            "WordID": "1",
            "SentID": 4427,
            "TokenID": "3",
            "Context": "RemoteFactory remoteFactory = remoteFactories . get ( protocol ) ;"
        },
        {
            "Word": "scopeFactories",
            "WordID": "1",
            "SentID": 4439,
            "TokenID": "0",
            "Context": "scopeFactories . put ( InstanceScope . LOCAL , null ) ;"
        },
        {
            "Word": "scopeFactories",
            "WordID": "2",
            "SentID": 4441,
            "TokenID": "2",
            "Context": "if ( scopeFactories . put ( instanceScope , scopeFactory ) != null ) {"
        },
        {
            "Word": "instanceFactories",
            "WordID": "1",
            "SentID": 4443,
            "TokenID": "2",
            "Context": "if ( instanceFactories . put ( instanceType , instanceFactory ) != null ) {"
        },
        {
            "Word": "instanceProcessors",
            "WordID": "1",
            "SentID": 4445,
            "TokenID": "5",
            "Context": "for ( InstanceProcessor existingInstanceProcessoor : instanceProcessors ) {"
        },
        {
            "Word": "instanceProcessors",
            "WordID": "2",
            "SentID": 4447,
            "TokenID": "0",
            "Context": "instanceProcessors . add ( instanceProcessor ) ;"
        },
        {
            "Word": "classProcessors",
            "WordID": "1",
            "SentID": 4449,
            "TokenID": "5",
            "Context": "for ( ClassProcessor existingClassProcessoor : classProcessors ) {"
        },
        {
            "Word": "classProcessors",
            "WordID": "2",
            "SentID": 4451,
            "TokenID": "0",
            "Context": "classProcessors . add ( classProcessor ) ;"
        },
        {
            "Word": "classDescriptors",
            "WordID": "1",
            "SentID": 4454,
            "TokenID": "4",
            "Context": "List < Config > classDescriptors = new ArrayList < > ( ) ;"
        },
        {
            "Word": "classDescriptors",
            "WordID": "2",
            "SentID": 4461,
            "TokenID": "9",
            "Context": "for ( int i = 0 ; i < classDescriptors . size ( ) ; ++ i ) {"
        },
        {
            "Word": "classDescriptors",
            "WordID": "3",
            "SentID": 4462,
            "TokenID": "2",
            "Context": "if ( classDescriptors . get ( i ) . hasAttribute ( \"interface\" , interfaceClass ) ) {"
        },
        {
            "Word": "classDescriptors",
            "WordID": "4",
            "SentID": 4463,
            "TokenID": "0",
            "Context": "classDescriptors . set ( i , classDescriptor ) ;"
        },
        {
            "Word": "classDescriptors",
            "WordID": "5",
            "SentID": 4465,
            "TokenID": "0",
            "Context": "classDescriptors . add ( classDescriptor ) ;"
        },
        {
            "Word": "classDescriptors",
            "WordID": "6",
            "SentID": 4466,
            "TokenID": "5",
            "Context": "for ( Config classDescriptor : classDescriptors ) {"
        },
        {
            "Word": "classProcessors",
            "WordID": "3",
            "SentID": 4470,
            "TokenID": "5",
            "Context": "for ( ClassProcessor classProcessor : classProcessors ) {"
        },
        {
            "Word": "scopeFactories",
            "WordID": "3",
            "SentID": 4476,
            "TokenID": "0",
            "Context": "scopeFactories . get ( InstanceScope . APPLICATION ) . persistInstance ( new InstanceKey ( appContext . getKey ( ) ) , this ) ;"
        },
        {
            "Word": "sortedClasses",
            "WordID": "1",
            "SentID": 4478,
            "TokenID": "4",
            "Context": "Set < ManagedClassSPI > sortedClasses = new TreeSet < > ( new Comparator < ManagedClassSPI > ( ) {"
        },
        {
            "Word": "sortedClasses",
            "WordID": "2",
            "SentID": 4483,
            "TokenID": "0",
            "Context": "sortedClasses . add ( managedClass ) ;"
        },
        {
            "Word": "sortedClasses",
            "WordID": "3",
            "SentID": 4484,
            "TokenID": "5",
            "Context": "for ( ManagedClassSPI managedClass : sortedClasses ) {"
        },
        {
            "Word": "scopeFactories",
            "WordID": "4",
            "SentID": 4490,
            "TokenID": "3",
            "Context": "ScopeFactory scopeFactory = scopeFactories . get ( managedClass . getInstanceScope ( ) ) ;"
        },
        {
            "Word": "scopeFactories",
            "WordID": "5",
            "SentID": 4495,
            "TokenID": "5",
            "Context": "for ( ScopeFactory scopeFactory : scopeFactories . values ( ) ) {"
        },
        {
            "Word": "instanceProcessors",
            "WordID": "3",
            "SentID": 4499,
            "TokenID": "0",
            "Context": "instanceProcessors . clear ( ) ;"
        },
        {
            "Word": "scopeFactories",
            "WordID": "6",
            "SentID": 4500,
            "TokenID": "0",
            "Context": "scopeFactories . clear ( ) ;"
        },
        {
            "Word": "instanceFactories",
            "WordID": "2",
            "SentID": 4501,
            "TokenID": "0",
            "Context": "instanceFactories . clear ( ) ;"
        },
        {
            "Word": "instanceFactories",
            "WordID": "3",
            "SentID": 4507,
            "TokenID": "3",
            "Context": "InstanceFactory instanceFactory = instanceFactories . get ( managedClass . getInstanceType ( ) ) ;"
        },
        {
            "Word": "instanceProcessors",
            "WordID": "4",
            "SentID": 4526,
            "TokenID": "5",
            "Context": "for ( InstanceProcessor instanceProcessor : instanceProcessors ) {"
        },
        {
            "Word": "Classes",
            "WordID": "13",
            "SentID": 4555,
            "TokenID": "0",
            "Context": "Classes . setFieldValue ( null , staticField , value ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "14",
            "SentID": 4558,
            "TokenID": "0",
            "Context": "Classes . setFieldValue ( instance , dependency , getDependencyValue ( managedClass , dependency . getType ( ) ) ) ;"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "9",
            "SentID": 4831,
            "TokenID": "7",
            "Context": "final Class < ? > [ ] interfaceClasses = managedClass . getInterfaceClasses ( ) ;"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "10",
            "SentID": 4832,
            "TokenID": "10",
            "Context": "return ( T ) Proxy . newProxyInstance ( classLoader , interfaceClasses , handler ) ;"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "11",
            "SentID": 4869,
            "TokenID": "2",
            "Context": "if ( interfaceClasses == null ) {"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "12",
            "SentID": 4870,
            "TokenID": "2",
            "Context": "if ( interfaceClasses . length != 1 ) {"
        },
        {
            "Word": "interfaceClasses",
            "WordID": "13",
            "SentID": 4871,
            "TokenID": "8",
            "Context": "return ( I ) Classes . loadService ( interfaceClasses [ 0 ] ) ;"
        },
        {
            "Word": "Classes",
            "WordID": "20",
            "SentID": 4921,
            "TokenID": "0",
            "Context": "Classes . setFieldValue ( object , field , asObject ( parameter . getValue ( ) , field . getType ( ) ) ) ;"
        },
        {
            "Labels": [
                "\"Java Classes and Methods Management\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "objects",
            "Semantic": "Network, Configuration",
            "Description": "Miscellaneous objects used for Network and configuration operations",
            "Lexicographic": "",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "54": [
        {
            "Word": "ZipInputStream",
            "WordID": "1",
            "SentID": 869,
            "TokenID": "0",
            "Context": "ZipInputStream zis = null ;"
        },
        {
            "Word": "ZipInputStream",
            "WordID": "2",
            "SentID": 871,
            "TokenID": "3",
            "Context": "zis = new ZipInputStream ("
        },
        {
            "Word": "ByteArrayInputStream",
            "WordID": "1",
            "SentID": 872,
            "TokenID": "1",
            "Context": "new ByteArrayInputStream ( compressedBytesParam ) ) ;"
        },
        {
            "Word": "ByteArrayInputStream",
            "WordID": "2",
            "SentID": 873,
            "TokenID": "1",
            "Context": "new ByteArrayInputStream ( compressedBytesParam ) ,"
        },
        {
            "Word": "getInputStream",
            "WordID": "1",
            "SentID": 1934,
            "TokenID": "2",
            "Context": "process . getInputStream ( ) , charset ) ) ;"
        },
        {
            "Word": "getErrorStream",
            "WordID": "1",
            "SentID": 1939,
            "TokenID": "5",
            "Context": "new InputStreamReader ( process . getErrorStream ( ) , charset ) ) ;"
        },
        {
            "Word": "InputStream",
            "WordID": "1",
            "SentID": 3374,
            "TokenID": "5",
            "Context": "} private void parseJarFile ( InputStream inputStream ) {"
        },
        {
            "Word": "inputStream",
            "WordID": "1",
            "SentID": 3374,
            "TokenID": "6",
            "Context": "} private void parseJarFile ( InputStream inputStream ) {"
        },
        {
            "Word": "inputStream",
            "WordID": "2",
            "SentID": 3375,
            "TokenID": "5",
            "Context": "Node schemaNode = getSchemaNode ( inputStream ) ;"
        },
        {
            "Word": "FileInputStream",
            "WordID": "1",
            "SentID": 3775,
            "TokenID": "0",
            "Context": "FileInputStream fis = new FileInputStream ( new File ( \"dic/word-with-attr.dic\" ) ) ;"
        },
        {
            "Word": "FileInputStream",
            "WordID": "2",
            "SentID": 3775,
            "TokenID": "4",
            "Context": "FileInputStream fis = new FileInputStream ( new File ( \"dic/word-with-attr.dic\" ) ) ;"
        },
        {
            "Word": "FileInputStream",
            "WordID": "3",
            "SentID": 3783,
            "TokenID": "3",
            "Context": "fis = new FileInputStream ( new File ( \"dic/words-rmmseg.dic\" ) ) ;"
        },
        {
            "Word": "FileInputStream",
            "WordID": "4",
            "SentID": 3791,
            "TokenID": "5",
            "Context": "analyzers . load ( new FileInputStream ( new File ( \"analyzer.properties\" ) ) ) ;"
        },
        {
            "Word": "InputStream",
            "WordID": "2",
            "SentID": 3807,
            "TokenID": "6",
            "Context": "} public static int load ( InputStream fin , FileLoading loading ) throws IOException {"
        },
        {
            "Word": "BufferedInputStream",
            "WordID": "1",
            "SentID": 3809,
            "TokenID": "4",
            "Context": "new InputStreamReader ( new BufferedInputStream ( fin ) , \"UTF-8\" ) ) ;"
        },
        {
            "Word": "FileInputStream",
            "WordID": "5",
            "SentID": 3886,
            "TokenID": "10",
            "Context": "MMSeg mmSeg = new MMSeg ( new InputStreamReader ( new FileInputStream ( txt ) ) , seg ) ;"
        },
        {
            "Word": "FileOutputStream",
            "WordID": "1",
            "SentID": 3888,
            "TokenID": "7",
            "Context": "OutputStreamWriter osw = new OutputStreamWriter ( new FileOutputStream ( new File ( txt . getAbsoluteFile ( ) + \".\" + mode + \".word\" ) ) ) ;"
        },
        {
            "Word": "osw",
            "WordID": "2",
            "SentID": 3889,
            "TokenID": "6",
            "Context": "BufferedWriter bw = new BufferedWriter ( osw ) ;"
        },
        {
            "Word": "UploadStream",
            "WordID": "1",
            "SentID": 3972,
            "TokenID": "7",
            "Context": "else if ( type . equals ( UploadStream . class ) ) {"
        },
        {
            "Word": "getUploadStream",
            "WordID": "1",
            "SentID": 3973,
            "TokenID": "13",
            "Context": "threadLocal . set ( ( Closeable ) ( arguments [ 0 ] = getUploadStream ( httpRequest , formalParameters ) ) ) ;"
        },
        {
            "Word": "InputStream",
            "WordID": "3",
            "SentID": 3974,
            "TokenID": "7",
            "Context": "else if ( type . equals ( InputStream . class ) ) {"
        },
        {
            "Word": "getUploadStream",
            "WordID": "2",
            "SentID": 3975,
            "TokenID": "13",
            "Context": "threadLocal . set ( ( Closeable ) ( arguments [ 0 ] = getUploadStream ( httpRequest , formalParameters ) . openStream ( ) ) ) ;"
        },
        {
            "Word": "openStream",
            "WordID": "1",
            "SentID": 3975,
            "TokenID": "20",
            "Context": "threadLocal . set ( ( Closeable ) ( arguments [ 0 ] = getUploadStream ( httpRequest , formalParameters ) . openStream ( ) ) ) ;"
        },
        {
            "Word": "UploadStream",
            "WordID": "2",
            "SentID": 3978,
            "TokenID": "3",
            "Context": "} private static UploadStream getUploadStream ( HttpServletRequest httpRequest , Type [ ] formalParameters ) throws IOException {"
        },
        {
            "Word": "getUploadStream",
            "WordID": "3",
            "SentID": 3978,
            "TokenID": "4",
            "Context": "} private static UploadStream getUploadStream ( HttpServletRequest httpRequest , Type [ ] formalParameters ) throws IOException {"
        },
        {
            "Word": "UploadStream",
            "WordID": "3",
            "SentID": 3982,
            "TokenID": "6",
            "Context": "if ( ! ( part instanceof UploadStream ) ) {"
        },
        {
            "Word": "UploadStream",
            "WordID": "4",
            "SentID": 3983,
            "TokenID": "2",
            "Context": "return ( UploadStream ) part ;"
        },
        {
            "Word": "FileItemStream",
            "WordID": "1",
            "SentID": 4579,
            "TokenID": "0",
            "Context": "FileItemStream fileItemStream = fileItemIterator . next ( ) ;"
        },
        {
            "Word": "fileItemStream",
            "WordID": "2",
            "SentID": 4580,
            "TokenID": "2",
            "Context": "if ( fileItemStream . isFormField ( ) ) {"
        },
        {
            "Word": "fileItemStream",
            "WordID": "3",
            "SentID": 4581,
            "TokenID": "5",
            "Context": "currentPart = new FormFieldImpl ( fileItemStream ) ;"
        },
        {
            "Word": "fileItemStream",
            "WordID": "4",
            "SentID": 4582,
            "TokenID": "5",
            "Context": "currentPart = new UploadStreamImpl ( fileItemStream ) ;"
        },
        {
            "Word": "FileItemStream",
            "WordID": "2",
            "SentID": 4631,
            "TokenID": "0",
            "Context": "FileItemStream fileItemStream = null ;"
        },
        {
            "Word": "fileItemStream",
            "WordID": "5",
            "SentID": 4631,
            "TokenID": "1",
            "Context": "FileItemStream fileItemStream = null ;"
        },
        {
            "Word": "fileItemStream",
            "WordID": "7",
            "SentID": 4633,
            "TokenID": "3",
            "Context": "String contentType = fileItemStream . getContentType ( ) ;"
        },
        {
            "Word": "InputStream",
            "WordID": "4",
            "SentID": 4638,
            "TokenID": "0",
            "Context": "InputStream inputStream = streamArgument ? new LazyFileItemStream ( fileItemStream ) : fileItemStream . openStream ( ) ;"
        },
        {
            "Word": "LazyFileItemStream",
            "WordID": "1",
            "SentID": 4638,
            "TokenID": "6",
            "Context": "InputStream inputStream = streamArgument ? new LazyFileItemStream ( fileItemStream ) : fileItemStream . openStream ( ) ;"
        },
        {
            "Word": "openStream",
            "WordID": "2",
            "SentID": 4638,
            "TokenID": "13",
            "Context": "InputStream inputStream = streamArgument ? new LazyFileItemStream ( fileItemStream ) : fileItemStream . openStream ( ) ;"
        },
        {
            "Word": "inputStream",
            "WordID": "4",
            "SentID": 4639,
            "TokenID": "9",
            "Context": "arguments [ argumentIndex ] = argumentPartReader . read ( inputStream , parameterType ) ;"
        },
        {
            "Word": "inputStream",
            "WordID": "5",
            "SentID": 4642,
            "TokenID": "4",
            "Context": "threadLocal . set ( inputStream ) ;"
        },
        {
            "Word": "OutputStream",
            "WordID": "1",
            "SentID": 4644,
            "TokenID": "4",
            "Context": "protected void serialize ( OutputStream outputStream ) throws IOException {"
        },
        {
            "Word": "outputStream",
            "WordID": "1",
            "SentID": 4644,
            "TokenID": "5",
            "Context": "protected void serialize ( OutputStream outputStream ) throws IOException {"
        },
        {
            "Word": "outputStream",
            "WordID": "2",
            "SentID": 4645,
            "TokenID": "9",
            "Context": "Writer writer = new BufferedWriter ( new OutputStreamWriter ( outputStream , \"UTF-8\" ) ) ;"
        },
        {
            "Word": "getInputStream",
            "WordID": "2",
            "SentID": 4654,
            "TokenID": "10",
            "Context": "return new Object [ ] { read ( httpRequest . getInputStream ( ) , formalParameters [ 0 ] ) } ;"
        },
        {
            "Word": "InputStream",
            "WordID": "5",
            "SentID": 4655,
            "TokenID": "4",
            "Context": "public Object read ( InputStream inputStream , Type type ) throws IOException {"
        },
        {
            "Word": "inputStream",
            "WordID": "6",
            "SentID": 4655,
            "TokenID": "5",
            "Context": "public Object read ( InputStream inputStream , Type type ) throws IOException {"
        },
        {
            "Word": "inputStream",
            "WordID": "7",
            "SentID": 4657,
            "TokenID": "5",
            "Context": "return documentBuilder . loadXML ( inputStream ) ;"
        },
        {
            "Word": "InputStream",
            "WordID": "6",
            "SentID": 4658,
            "TokenID": "10",
            "Context": "} else if ( Types . isKindOf ( type , InputStream . class ) ) {"
        },
        {
            "Word": "inputStream",
            "WordID": "8",
            "SentID": 4659,
            "TokenID": "1",
            "Context": "return inputStream ;"
        },
        {
            "Word": "getOutputStream",
            "WordID": "1",
            "SentID": 4662,
            "TokenID": "9",
            "Context": "document . serialize ( new OutputStreamWriter ( httpResponse . getOutputStream ( ) , \"UTF-8\" ) ) ;"
        },
        {
            "Word": "getOutputStream",
            "WordID": "2",
            "SentID": 4803,
            "TokenID": "2",
            "Context": "httpResponse . getOutputStream ( ) . write ( bytes ) ;"
        },
        {
            "Word": "getOutputStream",
            "WordID": "3",
            "SentID": 4804,
            "TokenID": "2",
            "Context": "httpResponse . getOutputStream ( ) . flush ( ) ;"
        },
        {
            "Word": "getOutputStream",
            "WordID": "4",
            "SentID": 4805,
            "TokenID": "14",
            "Context": "( ( StreamHandler < ? > ) value ) . invokeHandler ( httpResponse . getOutputStream ( ) ) ;"
        },
        {
            "Word": "getInputStream",
            "WordID": "3",
            "SentID": 4837,
            "TokenID": "8",
            "Context": "QueryParametersParser queryParameters = new QueryParametersParser ( httpRequest . getInputStream ( ) ) ;"
        },
        {
            "Word": "getOutputStream",
            "WordID": "5",
            "SentID": 4840,
            "TokenID": "9",
            "Context": "json . stringify ( new OutputStreamWriter ( httpResponse . getOutputStream ( ) , \"UTF-8\" ) , value ) ;"
        },
        {
            "Word": "InputStream",
            "WordID": "7",
            "SentID": 4875,
            "TokenID": "6",
            "Context": "} protected static void loadXML ( InputStream inputStream , Loader loader ) throws ConfigException {"
        },
        {
            "Word": "inputStream",
            "WordID": "9",
            "SentID": 4875,
            "TokenID": "7",
            "Context": "} protected static void loadXML ( InputStream inputStream , Loader loader ) throws ConfigException {"
        },
        {
            "Word": "inputStream",
            "WordID": "10",
            "SentID": 4880,
            "TokenID": "7",
            "Context": "reader . parse ( new InputSource ( inputStream ) ) ;"
        },
        {
            "Word": "getInputStream",
            "WordID": "4",
            "SentID": 4954,
            "TokenID": "8",
            "Context": "JsonReader reader = new JsonReader ( httpRequest . getInputStream ( ) , expectedStartSequence ( formalParameters ) ) ;"
        },
        {
            "Word": "inputStream",
            "WordID": "11",
            "SentID": 4957,
            "TokenID": "8",
            "Context": "return json . parse ( new InputStreamReader ( inputStream , \"UTF-8\" ) , type ) ;"
        },
        {
            "Word": "inputStream",
            "WordID": "12",
            "SentID": 4986,
            "TokenID": "7",
            "Context": "Closeable closeable = StreamFactory . getInstance ( inputStream , type ) ;"
        },
        {
            "Labels": [
                "\"Stream-based File Input/Output Operations in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Stream, File, Input",
            "Semantic": "Network",
            "Syntactic": "miscelaneous identifiers",
            "Description": "miscelaneous identifiers, all with \"stream\" in the name except \"osw\" (but the 's' stands for Stream) and many with either \"FIle\" or \"Input\" in the name. Most relate to network stuff.",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "82": [
        {
            "Word": "read",
            "WordID": "1",
            "SentID": 877,
            "TokenID": "7",
            "Context": "while ( ( len = zis . read ( buffer ) ) > 0 ) {"
        },
        {
            "Word": "write",
            "WordID": "1",
            "SentID": 878,
            "TokenID": "2",
            "Context": "bos . write ( buffer , 0 , len ) ;"
        },
        {
            "Word": "generateRandom",
            "WordID": "1",
            "SentID": 1643,
            "TokenID": "7",
            "Context": "byte [ ] iv = AES256Local . generateRandom ( AES256Local . IV_SIZE_BYTES ) ;"
        },
        {
            "Word": "generateRandom",
            "WordID": "2",
            "SentID": 1644,
            "TokenID": "7",
            "Context": "byte [ ] seed = AES256Local . generateRandom ( AES256Local . SEED_SIZE_BYTES ) ;"
        },
        {
            "Word": "encrypt",
            "WordID": "1",
            "SentID": 1648,
            "TokenID": "7",
            "Context": "byte [ ] encryptedData = AES256Local . encrypt ("
        },
        {
            "Word": "before",
            "WordID": "1",
            "SentID": 2603,
            "TokenID": "4",
            "Context": "return ( expirationTime . before ( new Date ( ) ) ) ;"
        },
        {
            "Word": "generateRandom",
            "WordID": "3",
            "SentID": 2654,
            "TokenID": "6",
            "Context": "} public static byte [ ] generateRandom ( int seedParam ) {"
        },
        {
            "Word": "decrypt",
            "WordID": "1",
            "SentID": 2688,
            "TokenID": "1",
            "Context": "return decrypt ( derivedKey , encryptedDataParam , ivParam ) ;"
        },
        {
            "Word": "decrypt",
            "WordID": "2",
            "SentID": 2689,
            "TokenID": "6",
            "Context": "} public static byte [ ] decrypt ( byte [ ] keyParam , byte [ ] dataToDecryptParam , byte [ ] ivParam ) {"
        },
        {
            "Word": "encrypt",
            "WordID": "2",
            "SentID": 2700,
            "TokenID": "6",
            "Context": "} public static byte [ ] encrypt ( byte [ ] keyParam , byte [ ] dataToEncryptParam , byte [ ] ivParam ) {"
        },
        {
            "Word": "content",
            "WordID": "1",
            "SentID": 3388,
            "TokenID": "2",
            "Context": "annotationChildren . content = xsdRawContentParse ( node ) ;"
        },
        {
            "Word": "accept",
            "WordID": "1",
            "SentID": 3539,
            "TokenID": "2",
            "Context": "childElement . accept ( element . getVisitor ( ) ) ;"
        },
        {
            "Word": "addView",
            "WordID": "1",
            "SentID": 3619,
            "TokenID": "2",
            "Context": "fl . addView ( v ) ;"
        },
        {
            "Word": "view",
            "WordID": "1",
            "SentID": 3620,
            "TokenID": "2",
            "Context": "info . view = v ;"
        },
        {
            "Word": "Random",
            "WordID": "1",
            "SentID": 3637,
            "TokenID": "9",
            "Context": "return parameterContext . getParameter ( ) . getAnnotation ( Random . class ) != null ;"
        },
        {
            "Word": "Random",
            "WordID": "2",
            "SentID": 3640,
            "TokenID": "8",
            "Context": "parameterContext . getParameter ( ) . getAnnotation ( Random . class ) ) ;"
        },
        {
            "Word": "objects",
            "WordID": "1",
            "SentID": 3644,
            "TokenID": "1",
            "Context": ". objects ( annotation . type ( ) , annotation . size ( ) , annotation . excludes ( ) )"
        },
        {
            "Word": "random",
            "WordID": "2",
            "SentID": 3647,
            "TokenID": "1",
            "Context": "return random . objects ( annotation . type ( ) , annotation . size ( ) , annotation . excludes ( ) ) ;"
        },
        {
            "Word": "objects",
            "WordID": "2",
            "SentID": 3647,
            "TokenID": "3",
            "Context": "return random . objects ( annotation . type ( ) , annotation . size ( ) , annotation . excludes ( ) ) ;"
        },
        {
            "Word": "random",
            "WordID": "3",
            "SentID": 3648,
            "TokenID": "1",
            "Context": "return random . nextObject ( targetType , annotation . excludes ( ) ) ;"
        },
        {
            "Word": "destroy",
            "WordID": "1",
            "SentID": 3656,
            "TokenID": "2",
            "Context": "} void destroy ( ) throws IOException {"
        },
        {
            "Word": "restore",
            "WordID": "2",
            "SentID": 3712,
            "TokenID": "3",
            "Context": "} public void restore ( ) {"
        },
        {
            "Word": "trace",
            "WordID": "1",
            "SentID": 3724,
            "TokenID": "3",
            "Context": "} public void trace ( String format , Object arg ) {"
        },
        {
            "Word": "trace",
            "WordID": "2",
            "SentID": 3726,
            "TokenID": "3",
            "Context": "} public void trace ( String format , Object arg1 , Object arg2 ) {"
        },
        {
            "Word": "trace",
            "WordID": "3",
            "SentID": 3728,
            "TokenID": "3",
            "Context": "} public void trace ( String format , Object ... argArray ) {"
        },
        {
            "Word": "trace",
            "WordID": "4",
            "SentID": 3730,
            "TokenID": "3",
            "Context": "} public void trace ( String msg , Throwable t ) {"
        },
        {
            "Word": "debug",
            "WordID": "1",
            "SentID": 3732,
            "TokenID": "3",
            "Context": "} public void debug ( String format , Object arg ) {"
        },
        {
            "Word": "debug",
            "WordID": "2",
            "SentID": 3734,
            "TokenID": "3",
            "Context": "} public void debug ( String format , Object arg1 , Object arg2 ) {"
        },
        {
            "Word": "debug",
            "WordID": "3",
            "SentID": 3736,
            "TokenID": "3",
            "Context": "} public void debug ( String format , Object ... argArray ) {"
        },
        {
            "Word": "debug",
            "WordID": "4",
            "SentID": 3738,
            "TokenID": "3",
            "Context": "} public void debug ( String msg , Throwable t ) {"
        },
        {
            "Word": "info",
            "WordID": "7",
            "SentID": 3740,
            "TokenID": "3",
            "Context": "} public void info ( String format , Object arg ) {"
        },
        {
            "Word": "info",
            "WordID": "8",
            "SentID": 3742,
            "TokenID": "3",
            "Context": "} public void info ( String format , Object arg1 , Object arg2 ) {"
        },
        {
            "Word": "info",
            "WordID": "9",
            "SentID": 3744,
            "TokenID": "3",
            "Context": "} public void info ( String format , Object ... argArray ) {"
        },
        {
            "Word": "info",
            "WordID": "10",
            "SentID": 3746,
            "TokenID": "3",
            "Context": "} public void info ( String msg , Throwable t ) {"
        },
        {
            "Word": "warn",
            "WordID": "1",
            "SentID": 3748,
            "TokenID": "3",
            "Context": "} public void warn ( String format , Object arg ) {"
        },
        {
            "Word": "warn",
            "WordID": "2",
            "SentID": 3750,
            "TokenID": "3",
            "Context": "} public void warn ( String format , Object arg1 , Object arg2 ) {"
        },
        {
            "Word": "warn",
            "WordID": "3",
            "SentID": 3752,
            "TokenID": "3",
            "Context": "} public void warn ( String format , Object ... argArray ) {"
        },
        {
            "Word": "warn",
            "WordID": "4",
            "SentID": 3754,
            "TokenID": "3",
            "Context": "} public void warn ( String msg , Throwable t ) {"
        },
        {
            "Word": "error",
            "WordID": "1",
            "SentID": 3756,
            "TokenID": "3",
            "Context": "} public void error ( String format , Object arg ) {"
        },
        {
            "Word": "error",
            "WordID": "2",
            "SentID": 3758,
            "TokenID": "3",
            "Context": "} public void error ( String format , Object arg1 , Object arg2 ) {"
        },
        {
            "Word": "error",
            "WordID": "3",
            "SentID": 3760,
            "TokenID": "3",
            "Context": "} public void error ( String format , Object ... argArray ) {"
        },
        {
            "Word": "error",
            "WordID": "4",
            "SentID": 3762,
            "TokenID": "3",
            "Context": "} public void error ( String msg , Throwable t ) {"
        },
        {
            "Word": "usage",
            "WordID": "1",
            "SentID": 3789,
            "TokenID": "0",
            "Context": "usage ( ) ;"
        },
        {
            "Word": "run",
            "WordID": "1",
            "SentID": 3803,
            "TokenID": "2",
            "Context": "ef . run ( mode , n ) ;"
        },
        {
            "Word": "load",
            "WordID": "3",
            "SentID": 3807,
            "TokenID": "4",
            "Context": "} public static int load ( InputStream fin , FileLoading loading ) throws IOException {"
        },
        {
            "Word": "canRead",
            "WordID": "1",
            "SentID": 3822,
            "TokenID": "5",
            "Context": "if ( ! words . canRead ( ) ) {"
        },
        {
            "Word": "reload",
            "WordID": "1",
            "SentID": 3828,
            "TokenID": "4",
            "Context": "} public synchronized boolean reload ( ) {"
        },
        {
            "Word": "match",
            "WordID": "1",
            "SentID": 3840,
            "TokenID": "3",
            "Context": "} public boolean match ( String word ) {"
        },
        {
            "Word": "isRead",
            "WordID": "1",
            "SentID": 3861,
            "TokenID": "4",
            "Context": "if ( readChar . isRead ( d ) ) {"
        },
        {
            "Word": "head",
            "WordID": "1",
            "SentID": 3915,
            "TokenID": "5",
            "Context": "CharNode cn = dic . head ( chs [ offset ] ) ;"
        },
        {
            "Word": "head",
            "WordID": "2",
            "SentID": 3923,
            "TokenID": "4",
            "Context": "cn = dic . head ( chs [ offset ] ) ;"
        },
        {
            "Word": "update",
            "WordID": "1",
            "SentID": 3941,
            "TokenID": "5",
            "Context": "getDatabaseJdbcTemplate ( database ) . update ( sql ) ;"
        },
        {
            "Word": "update",
            "WordID": "2",
            "SentID": 3945,
            "TokenID": "7",
            "Context": "return Objects . toString ( template . update ( sql ) ) ;"
        },
        {
            "Word": "read",
            "WordID": "2",
            "SentID": 3960,
            "TokenID": "4",
            "Context": "public Object [ ] read ( HttpServletRequest httpRequest , Type [ ] formalParameters ) throws IOException , IllegalArgumentException {"
        },
        {
            "Word": "init",
            "WordID": "4",
            "SentID": 3984,
            "TokenID": "2",
            "Context": "public void init ( ServletConfig config ) throws UnavailableException {"
        },
        {
            "Word": "write",
            "WordID": "2",
            "SentID": 4017,
            "TokenID": "2",
            "Context": "valueWriter . write ( httpResponse , value ) ;"
        },
        {
            "Word": "config",
            "WordID": "3",
            "SentID": 4053,
            "TokenID": "2",
            "Context": "public void config ( Config config ) throws Exception {"
        },
        {
            "Word": "read",
            "WordID": "4",
            "SentID": 4306,
            "TokenID": "2",
            "Context": "previousEntity = read ( ) ;"
        },
        {
            "Word": "sleep",
            "WordID": "1",
            "SentID": 4310,
            "TokenID": "0",
            "Context": "sleep ( pollingInterval * 1000 ) ;"
        },
        {
            "Word": "read",
            "WordID": "5",
            "SentID": 4313,
            "TokenID": "2",
            "Context": "newEntity = read ( ) ;"
        },
        {
            "Word": "executeAndHandle",
            "WordID": "1",
            "SentID": 4327,
            "TokenID": "3",
            "Context": "} protected HttpResponse executeAndHandle ( Request request )"
        },
        {
            "Word": "fields",
            "WordID": "4",
            "SentID": 4389,
            "TokenID": "2",
            "Context": "linksNode . fields ( ) . forEachRemaining ( x -> {"
        },
        {
            "Word": "stream",
            "WordID": "9",
            "SentID": 4410,
            "TokenID": "4",
            "Context": "allowedMethods = unmodifiableSet ( stream ( response . getHeaders ( \"Allow\" ) )"
        },
        {
            "Word": "stream",
            "WordID": "10",
            "SentID": 4412,
            "TokenID": "5",
            "Context": ". flatMap ( x -> stream ( x . getElements ( ) ) ) . map ( x -> x . getName ( ) )"
        },
        {
            "Word": "config",
            "WordID": "16",
            "SentID": 4452,
            "TokenID": "2",
            "Context": "public void config ( Config config ) throws ConfigException {"
        },
        {
            "Word": "compare",
            "WordID": "1",
            "SentID": 4479,
            "TokenID": "2",
            "Context": "public int compare ( ManagedClassSPI o1 , ManagedClassSPI o2 ) {"
        },
        {
            "Word": "invoke",
            "WordID": "8",
            "SentID": 4561,
            "TokenID": "5",
            "Context": "public < T > T invoke ( Object object , Object ... args ) throws AuthorizationException , IllegalArgumentException , InvocationException {"
        },
        {
            "Word": "serialize",
            "WordID": "1",
            "SentID": 4644,
            "TokenID": "2",
            "Context": "protected void serialize ( OutputStream outputStream ) throws IOException {"
        },
        {
            "Word": "serialize",
            "WordID": "2",
            "SentID": 4651,
            "TokenID": "2",
            "Context": "template . serialize ( model , writer ) ;"
        },
        {
            "Word": "read",
            "WordID": "7",
            "SentID": 4654,
            "TokenID": "6",
            "Context": "return new Object [ ] { read ( httpRequest . getInputStream ( ) , formalParameters [ 0 ] ) } ;"
        },
        {
            "Word": "read",
            "WordID": "8",
            "SentID": 4655,
            "TokenID": "2",
            "Context": "public Object read ( InputStream inputStream , Type type ) throws IOException {"
        },
        {
            "Word": "write",
            "WordID": "3",
            "SentID": 4660,
            "TokenID": "2",
            "Context": "public void write ( HttpServletResponse httpResponse , Object value ) throws IOException {"
        },
        {
            "Word": "serialize",
            "WordID": "3",
            "SentID": 4662,
            "TokenID": "2",
            "Context": "document . serialize ( new OutputStreamWriter ( httpResponse . getOutputStream ( ) , \"UTF-8\" ) ) ;"
        },
        {
            "Word": "invoke",
            "WordID": "12",
            "SentID": 4663,
            "TokenID": "2",
            "Context": "public Object invoke ( Object proxy , Method method , Object [ ] args ) throws Throwable {"
        },
        {
            "Word": "attach",
            "WordID": "1",
            "SentID": 4666,
            "TokenID": "3",
            "Context": "} public void attach ( HttpServletRequest httpRequest , HttpServletResponse httpResponse ) {"
        },
        {
            "Word": "detach",
            "WordID": "1",
            "SentID": 4676,
            "TokenID": "3",
            "Context": "} public void detach ( ) {"
        },
        {
            "Word": "config",
            "WordID": "26",
            "SentID": 4709,
            "TokenID": "3",
            "Context": "} protected void config ( EventStreamConfig config ) {"
        },
        {
            "Word": "push",
            "WordID": "2",
            "SentID": 4715,
            "TokenID": "3",
            "Context": "} public void push ( Event event ) {"
        },
        {
            "Word": "offer",
            "WordID": "1",
            "SentID": 4717,
            "TokenID": "5",
            "Context": "if ( ! eventsQueue . offer ( event , EVENTS_QUEUE_PUSH_TIMEOUT , TimeUnit . MILLISECONDS ) ) {"
        },
        {
            "Word": "write",
            "WordID": "4",
            "SentID": 4736,
            "TokenID": "0",
            "Context": "write ( \"data:\" ) ;"
        },
        {
            "Word": "serialize",
            "WordID": "4",
            "SentID": 4738,
            "TokenID": "2",
            "Context": "json . serialize ( writer , event ) ;"
        },
        {
            "Word": "serialize",
            "WordID": "5",
            "SentID": 4740,
            "TokenID": "11",
            "Context": "byte [ ] encryptedMessage = cipher . doFinal ( json . serialize ( event ) ) ;"
        },
        {
            "Word": "write",
            "WordID": "5",
            "SentID": 4741,
            "TokenID": "0",
            "Context": "write ( Base64 . encode ( encryptedMessage ) ) ;"
        },
        {
            "Word": "service",
            "WordID": "1",
            "SentID": 4747,
            "TokenID": "2",
            "Context": "protected void service ( HttpServletRequest httpRequest , HttpServletResponse httpResponse ) throws IOException , ServletException {"
        },
        {
            "Word": "stringify",
            "WordID": "1",
            "SentID": 4797,
            "TokenID": "5",
            "Context": "String buffer = json . stringify ( object ) ;"
        },
        {
            "Word": "write",
            "WordID": "6",
            "SentID": 4803,
            "TokenID": "6",
            "Context": "httpResponse . getOutputStream ( ) . write ( bytes ) ;"
        },
        {
            "Word": "show",
            "WordID": "1",
            "SentID": 4811,
            "TokenID": "2",
            "Context": "ConfirmDialog . show ( getUI ( ) , question , ( ConfirmDialog cd ) -> {"
        },
        {
            "Word": "stream",
            "WordID": "12",
            "SentID": 4834,
            "TokenID": "1",
            "Context": "return stream ( response . getHeaders ( \"Link\" ) )"
        },
        {
            "Word": "stream",
            "WordID": "13",
            "SentID": 4835,
            "TokenID": "5",
            "Context": ". flatMap ( x -> stream ( x . getElements ( ) ) . map ( LinkHeader :: new ) )"
        },
        {
            "Word": "stringify",
            "WordID": "2",
            "SentID": 4840,
            "TokenID": "2",
            "Context": "json . stringify ( new OutputStreamWriter ( httpResponse . getOutputStream ( ) , \"UTF-8\" ) , value ) ;"
        },
        {
            "Word": "show",
            "WordID": "2",
            "SentID": 4882,
            "TokenID": "2",
            "Context": "Notification . show ( \"Error\" , ex . getLocalizedMessage ( ) , Notification . Type . ERROR_MESSAGE ) ;"
        },
        {
            "Word": "parse",
            "WordID": "5",
            "SentID": 4896,
            "TokenID": "7",
            "Context": "} private static List < Parameter > parse ( Reader reader ) throws IOException {"
        },
        {
            "Word": "read",
            "WordID": "9",
            "SentID": 4900,
            "TokenID": "5",
            "Context": "int b = reader . read ( ) ;"
        },
        {
            "Word": "handle",
            "WordID": "3",
            "SentID": 4991,
            "TokenID": "2",
            "Context": "public void handle ( ElementEvent < TEntity > message ) {"
        },
        {
            "Labels": [
                "\"Data Management and Security Functions in Java Programming\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "methods",
            "Semantic": "Network",
            "Description": "miscellaneous methods, many relating to network",
            "Lexicographic": "",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "197": [
        {
            "Word": "Map",
            "WordID": "1",
            "SentID": 995,
            "TokenID": "0",
            "Context": "Map < Long , String > definitionAndTitle ="
        },
        {
            "Word": "Map",
            "WordID": "2",
            "SentID": 1041,
            "TokenID": "0",
            "Context": "Map < Long , String > definitionAndTitleParam ,"
        },
        {
            "Word": "Map",
            "WordID": "3",
            "SentID": 2563,
            "TokenID": "2",
            "Context": "} public Map < Long , String > getFormDefinitionIdAndTitle ( )"
        },
        {
            "Word": "Map",
            "WordID": "4",
            "SentID": 2565,
            "TokenID": "0",
            "Context": "Map < Long , String > returnVal = new HashMap < > ( LOCAL_MAPPING ) ;"
        },
        {
            "Word": "HashMap",
            "WordID": "1",
            "SentID": 2565,
            "TokenID": "9",
            "Context": "Map < Long , String > returnVal = new HashMap < > ( LOCAL_MAPPING ) ;"
        },
        {
            "Word": "Map",
            "WordID": "5",
            "SentID": 3394,
            "TokenID": "0",
            "Context": "Map < String , List < NamedConcreteElement > > concreteElementsMap ="
        },
        {
            "Word": "Map",
            "WordID": "6",
            "SentID": 3400,
            "TokenID": "5",
            "Context": "} private void replaceUnsolvedReference ( Map < String , List < NamedConcreteElement > > concreteElementsMap , UnsolvedReference unsolvedReference ) {"
        },
        {
            "Word": "Map",
            "WordID": "7",
            "SentID": 3403,
            "TokenID": "0",
            "Context": "Map < String , String > oldElementAttributes = unsolvedReference . getElement ( ) . getAttributesMap ( ) ;"
        },
        {
            "Word": "Map",
            "WordID": "8",
            "SentID": 3435,
            "TokenID": "0",
            "Context": "Map < String , XsdRestriction > restrictions = new HashMap < > ( ) ;"
        },
        {
            "Word": "HashMap",
            "WordID": "3",
            "SentID": 3435,
            "TokenID": "9",
            "Context": "Map < String , XsdRestriction > restrictions = new HashMap < > ( ) ;"
        },
        {
            "Word": "Map",
            "WordID": "9",
            "SentID": 3436,
            "TokenID": "0",
            "Context": "Map < String , String > xsdBuiltinTypes = XsdParserCore . getXsdTypesToJava ( ) ;"
        },
        {
            "Word": "Map",
            "WordID": "10",
            "SentID": 3544,
            "TokenID": "3",
            "Context": "} protected static Map < String , String > convertNodeMap ( NamedNodeMap nodeMap ) {"
        },
        {
            "Word": "HashMap",
            "WordID": "4",
            "SentID": 3545,
            "TokenID": "0",
            "Context": "HashMap < String , String > attributesMapped = new HashMap < > ( ) ;"
        },
        {
            "Word": "HashMap",
            "WordID": "5",
            "SentID": 3545,
            "TokenID": "9",
            "Context": "HashMap < String , String > attributesMapped = new HashMap < > ( ) ;"
        },
        {
            "Word": "Map",
            "WordID": "11",
            "SentID": 3829,
            "TokenID": "0",
            "Context": "Map < File , Long > oldWordsLastTime = new HashMap < File , Long > ( wordsLastTime ) ;"
        },
        {
            "Word": "HashMap",
            "WordID": "6",
            "SentID": 3829,
            "TokenID": "9",
            "Context": "Map < File , Long > oldWordsLastTime = new HashMap < File , Long > ( wordsLastTime ) ;"
        },
        {
            "Word": "Map",
            "WordID": "12",
            "SentID": 3830,
            "TokenID": "0",
            "Context": "Map < Character , CharNode > oldDict = dict ;"
        },
        {
            "Word": "Map",
            "WordID": "13",
            "SentID": 3831,
            "TokenID": "0",
            "Context": "Map < Character , Object > oldUnit = unit ;"
        },
        {
            "Word": "Map",
            "WordID": "14",
            "SentID": 4038,
            "TokenID": "3",
            "Context": "} private static Map < String , String > parseParameters ( String expression ) {"
        },
        {
            "Word": "Map",
            "WordID": "15",
            "SentID": 4039,
            "TokenID": "0",
            "Context": "Map < String , String > parameters = new HashMap < > ( ) ;"
        },
        {
            "Word": "HashMap",
            "WordID": "7",
            "SentID": 4039,
            "TokenID": "9",
            "Context": "Map < String , String > parameters = new HashMap < > ( ) ;"
        },
        {
            "Word": "Map",
            "WordID": "16",
            "SentID": 4370,
            "TokenID": "0",
            "Context": "Map < String , Map < URI , String > > links = new HashMap < > ( ) ;"
        },
        {
            "Word": "Map",
            "WordID": "17",
            "SentID": 4370,
            "TokenID": "4",
            "Context": "Map < String , Map < URI , String > > links = new HashMap < > ( ) ;"
        },
        {
            "Word": "HashMap",
            "WordID": "8",
            "SentID": 4370,
            "TokenID": "14",
            "Context": "Map < String , Map < URI , String > > links = new HashMap < > ( ) ;"
        },
        {
            "Word": "Map",
            "WordID": "18",
            "SentID": 4371,
            "TokenID": "0",
            "Context": "Map < String , String > linkTemplates = new HashMap < > ( ) ;"
        },
        {
            "Word": "HashMap",
            "WordID": "9",
            "SentID": 4371,
            "TokenID": "9",
            "Context": "Map < String , String > linkTemplates = new HashMap < > ( ) ;"
        },
        {
            "Word": "Map",
            "WordID": "19",
            "SentID": 4377,
            "TokenID": "8",
            "Context": "} protected void handleHeaderLinks ( HttpResponse response , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "Map",
            "WordID": "20",
            "SentID": 4377,
            "TokenID": "12",
            "Context": "} protected void handleHeaderLinks ( HttpResponse response , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "Map",
            "WordID": "21",
            "SentID": 4377,
            "TokenID": "21",
            "Context": "} protected void handleHeaderLinks ( HttpResponse response , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "Map",
            "WordID": "22",
            "SentID": 4384,
            "TokenID": "8",
            "Context": "} protected void handleBodyLinks ( JsonNode jsonBody , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "Map",
            "WordID": "23",
            "SentID": 4384,
            "TokenID": "12",
            "Context": "} protected void handleBodyLinks ( JsonNode jsonBody , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "Map",
            "WordID": "24",
            "SentID": 4384,
            "TokenID": "21",
            "Context": "} protected void handleBodyLinks ( JsonNode jsonBody , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "Map",
            "WordID": "25",
            "SentID": 4391,
            "TokenID": "0",
            "Context": "Map < URI , String > linksForRel = getOrAdd ( links , rel ) ;"
        },
        {
            "Word": "Map",
            "WordID": "26",
            "SentID": 4397,
            "TokenID": "11",
            "Context": "} private void parseLinkObject ( String rel , ObjectNode obj , Map < URI , String > linksForRel , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "Map",
            "WordID": "27",
            "SentID": 4397,
            "TokenID": "19",
            "Context": "} private void parseLinkObject ( String rel , ObjectNode obj , Map < URI , String > linksForRel , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": "Map",
            "WordID": "28",
            "SentID": 4406,
            "TokenID": "3",
            "Context": "} private static Map < URI , String > getOrAdd ( Map < String , Map < URI , String > > map , String key ) {"
        },
        {
            "Word": "Map",
            "WordID": "29",
            "SentID": 4406,
            "TokenID": "11",
            "Context": "} private static Map < URI , String > getOrAdd ( Map < String , Map < URI , String > > map , String key ) {"
        },
        {
            "Word": "Map",
            "WordID": "30",
            "SentID": 4406,
            "TokenID": "15",
            "Context": "} private static Map < URI , String > getOrAdd ( Map < String , Map < URI , String > > map , String key ) {"
        },
        {
            "Word": "Map",
            "WordID": "31",
            "SentID": 4407,
            "TokenID": "0",
            "Context": "Map < URI , String > value = map . get ( key ) ;"
        },
        {
            "Labels": [
                "\"Java Collections Framework - Map Implementations\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Map",
            "Semantic": "Instantiation",
            "Syntactic": "Datatype Keyword",
            "Description": "Map and hashmap datatype keyword used for the instantiation of maps and hashmaps",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "458": [
        {
            "Word": ",",
            "WordID": "201",
            "SentID": 995,
            "TokenID": "3",
            "Context": "Map < Long , String > definitionAndTitle ="
        },
        {
            "Word": ",",
            "WordID": "210",
            "SentID": 1041,
            "TokenID": "3",
            "Context": "Map < Long , String > definitionAndTitleParam ,"
        },
        {
            "Word": ",",
            "WordID": "575",
            "SentID": 2563,
            "TokenID": "5",
            "Context": "} public Map < Long , String > getFormDefinitionIdAndTitle ( )"
        },
        {
            "Word": ",",
            "WordID": "576",
            "SentID": 2565,
            "TokenID": "3",
            "Context": "Map < Long , String > returnVal = new HashMap < > ( LOCAL_MAPPING ) ;"
        },
        {
            "Word": ",",
            "WordID": "787",
            "SentID": 3394,
            "TokenID": "3",
            "Context": "Map < String , List < NamedConcreteElement > > concreteElementsMap ="
        },
        {
            "Word": ",",
            "WordID": "789",
            "SentID": 3400,
            "TokenID": "8",
            "Context": "} private void replaceUnsolvedReference ( Map < String , List < NamedConcreteElement > > concreteElementsMap , UnsolvedReference unsolvedReference ) {"
        },
        {
            "Word": ",",
            "WordID": "791",
            "SentID": 3403,
            "TokenID": "3",
            "Context": "Map < String , String > oldElementAttributes = unsolvedReference . getElement ( ) . getAttributesMap ( ) ;"
        },
        {
            "Word": ",",
            "WordID": "793",
            "SentID": 3435,
            "TokenID": "3",
            "Context": "Map < String , XsdRestriction > restrictions = new HashMap < > ( ) ;"
        },
        {
            "Word": ",",
            "WordID": "794",
            "SentID": 3436,
            "TokenID": "3",
            "Context": "Map < String , String > xsdBuiltinTypes = XsdParserCore . getXsdTypesToJava ( ) ;"
        },
        {
            "Word": ",",
            "WordID": "821",
            "SentID": 3544,
            "TokenID": "6",
            "Context": "} protected static Map < String , String > convertNodeMap ( NamedNodeMap nodeMap ) {"
        },
        {
            "Word": ",",
            "WordID": "822",
            "SentID": 3545,
            "TokenID": "3",
            "Context": "HashMap < String , String > attributesMapped = new HashMap < > ( ) ;"
        },
        {
            "Word": ",",
            "WordID": "974",
            "SentID": 3820,
            "TokenID": "5",
            "Context": "for ( Entry < File , Long > flt : wordsLastTime . entrySet ( ) ) {"
        },
        {
            "Word": ",",
            "WordID": "975",
            "SentID": 3829,
            "TokenID": "3",
            "Context": "Map < File , Long > oldWordsLastTime = new HashMap < File , Long > ( wordsLastTime ) ;"
        },
        {
            "Word": ",",
            "WordID": "976",
            "SentID": 3829,
            "TokenID": "12",
            "Context": "Map < File , Long > oldWordsLastTime = new HashMap < File , Long > ( wordsLastTime ) ;"
        },
        {
            "Word": ",",
            "WordID": "977",
            "SentID": 3830,
            "TokenID": "3",
            "Context": "Map < Character , CharNode > oldDict = dict ;"
        },
        {
            "Word": ",",
            "WordID": "978",
            "SentID": 3831,
            "TokenID": "3",
            "Context": "Map < Character , Object > oldUnit = unit ;"
        },
        {
            "Word": ",",
            "WordID": "1047",
            "SentID": 4038,
            "TokenID": "6",
            "Context": "} private static Map < String , String > parseParameters ( String expression ) {"
        },
        {
            "Word": ",",
            "WordID": "1048",
            "SentID": 4039,
            "TokenID": "3",
            "Context": "Map < String , String > parameters = new HashMap < > ( ) ;"
        },
        {
            "Word": ",",
            "WordID": "1127",
            "SentID": 4370,
            "TokenID": "3",
            "Context": "Map < String , Map < URI , String > > links = new HashMap < > ( ) ;"
        },
        {
            "Word": ",",
            "WordID": "1128",
            "SentID": 4370,
            "TokenID": "7",
            "Context": "Map < String , Map < URI , String > > links = new HashMap < > ( ) ;"
        },
        {
            "Word": ",",
            "WordID": "1129",
            "SentID": 4371,
            "TokenID": "3",
            "Context": "Map < String , String > linkTemplates = new HashMap < > ( ) ;"
        },
        {
            "Word": ",",
            "WordID": "1135",
            "SentID": 4377,
            "TokenID": "11",
            "Context": "} protected void handleHeaderLinks ( HttpResponse response , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": ",",
            "WordID": "1136",
            "SentID": 4377,
            "TokenID": "15",
            "Context": "} protected void handleHeaderLinks ( HttpResponse response , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": ",",
            "WordID": "1138",
            "SentID": 4377,
            "TokenID": "24",
            "Context": "} protected void handleHeaderLinks ( HttpResponse response , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": ",",
            "WordID": "1143",
            "SentID": 4384,
            "TokenID": "11",
            "Context": "} protected void handleBodyLinks ( JsonNode jsonBody , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": ",",
            "WordID": "1144",
            "SentID": 4384,
            "TokenID": "15",
            "Context": "} protected void handleBodyLinks ( JsonNode jsonBody , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": ",",
            "WordID": "1146",
            "SentID": 4384,
            "TokenID": "24",
            "Context": "} protected void handleBodyLinks ( JsonNode jsonBody , Map < String , Map < URI , String > > links , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": ",",
            "WordID": "1147",
            "SentID": 4391,
            "TokenID": "3",
            "Context": "Map < URI , String > linksForRel = getOrAdd ( links , rel ) ;"
        },
        {
            "Word": ",",
            "WordID": "1157",
            "SentID": 4397,
            "TokenID": "14",
            "Context": "} private void parseLinkObject ( String rel , ObjectNode obj , Map < URI , String > linksForRel , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": ",",
            "WordID": "1159",
            "SentID": 4397,
            "TokenID": "22",
            "Context": "} private void parseLinkObject ( String rel , ObjectNode obj , Map < URI , String > linksForRel , Map < String , String > linkTemplates ) {"
        },
        {
            "Word": ",",
            "WordID": "1162",
            "SentID": 4406,
            "TokenID": "6",
            "Context": "} private static Map < URI , String > getOrAdd ( Map < String , Map < URI , String > > map , String key ) {"
        },
        {
            "Word": ",",
            "WordID": "1163",
            "SentID": 4406,
            "TokenID": "14",
            "Context": "} private static Map < URI , String > getOrAdd ( Map < String , Map < URI , String > > map , String key ) {"
        },
        {
            "Word": ",",
            "WordID": "1164",
            "SentID": 4406,
            "TokenID": "18",
            "Context": "} private static Map < URI , String > getOrAdd ( Map < String , Map < URI , String > > map , String key ) {"
        },
        {
            "Word": ",",
            "WordID": "1166",
            "SentID": 4407,
            "TokenID": "3",
            "Context": "Map < URI , String > value = map . get ( key ) ;"
        },
        {
            "Labels": [
                "\"Punctuation Symbols in Java Code\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "Comma",
            "Semantic": "Key-Value Seperator",
            "Lexicographic": ",",
            "Description": "comma used as a key value seperator in Map objects.",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "142": [
        {
            "Word": "ResultSet",
            "WordID": "1",
            "SentID": 998,
            "TokenID": "0",
            "Context": "ResultSet resultSet = null ;"
        },
        {
            "Word": "resultSet",
            "WordID": "1",
            "SentID": 998,
            "TokenID": "1",
            "Context": "ResultSet resultSet = null ;"
        },
        {
            "Word": "preparedStatement",
            "WordID": "3",
            "SentID": 1004,
            "TokenID": "0",
            "Context": "preparedStatement . setLong ( 1 , electronicFormIdParam ) ;"
        },
        {
            "Word": "resultSet",
            "WordID": "2",
            "SentID": 1005,
            "TokenID": "0",
            "Context": "resultSet = preparedStatement . executeQuery ( ) ;"
        },
        {
            "Word": "resultSet",
            "WordID": "3",
            "SentID": 1006,
            "TokenID": "2",
            "Context": "while ( resultSet . next ( ) )"
        },
        {
            "Word": "resultSet",
            "WordID": "4",
            "SentID": 1009,
            "TokenID": "0",
            "Context": "resultSet ) ) ;"
        },
        {
            "Word": "resultSet",
            "WordID": "5",
            "SentID": 1017,
            "TokenID": "6",
            "Context": "this . closeStatement ( preparedStatement , resultSet ) ;"
        },
        {
            "Word": "resultSet",
            "WordID": "6",
            "SentID": 1032,
            "TokenID": "2",
            "Context": "if ( resultSet . next ( ) ) {"
        },
        {
            "Word": "resultSet",
            "WordID": "7",
            "SentID": 1034,
            "TokenID": "0",
            "Context": "resultSet ) ;"
        },
        {
            "Word": "ResultSet",
            "WordID": "2",
            "SentID": 1042,
            "TokenID": "0",
            "Context": "ResultSet resultSetParam"
        },
        {
            "Word": "resultSet",
            "WordID": "8",
            "SentID": 1767,
            "TokenID": "8",
            "Context": "returnVal . add ( this . mapFormFieldMapping ( resultSet ) ) ;"
        },
        {
            "Word": "preparedStatement",
            "WordID": "6",
            "SentID": 1775,
            "TokenID": "0",
            "Context": "preparedStatement . setLong ( 1 , formDefinitionIdParam ) ;"
        },
        {
            "Word": "ResultSet",
            "WordID": "3",
            "SentID": 1779,
            "TokenID": "0",
            "Context": "ResultSet resultSet ;"
        },
        {
            "Word": "resultSet",
            "WordID": "9",
            "SentID": 1779,
            "TokenID": "1",
            "Context": "ResultSet resultSet ;"
        },
        {
            "Word": "resultSet",
            "WordID": "10",
            "SentID": 1781,
            "TokenID": "1",
            "Context": "return resultSet . getLong ( 1 ) ;"
        },
        {
            "Word": "ResultSet",
            "WordID": "4",
            "SentID": 1819,
            "TokenID": "0",
            "Context": "ResultSet resultSet = null , resultSetForTblInfo = null ;"
        },
        {
            "Word": "resultSet",
            "WordID": "11",
            "SentID": 1819,
            "TokenID": "1",
            "Context": "ResultSet resultSet = null , resultSetForTblInfo = null ;"
        },
        {
            "Word": "preparedStatement",
            "WordID": "9",
            "SentID": 1823,
            "TokenID": "0",
            "Context": "preparedStatement . setLong ( 1 , formFieldMappingParam . formDefinitionId ) ;"
        },
        {
            "Word": "preparedStatement",
            "WordID": "10",
            "SentID": 1824,
            "TokenID": "0",
            "Context": "preparedStatement . setLong ( 2 , formFieldMappingParam . formFieldId ) ;"
        },
        {
            "Word": "preparedStatement",
            "WordID": "11",
            "SentID": 1825,
            "TokenID": "0",
            "Context": "preparedStatement . setLong ( 3 , formContainerIdParam ) ;"
        },
        {
            "Word": "resultSet",
            "WordID": "12",
            "SentID": 1830,
            "TokenID": "0",
            "Context": "resultSet . getString ( 1 ) ,"
        },
        {
            "Word": "resultSet",
            "WordID": "13",
            "SentID": 1833,
            "TokenID": "0",
            "Context": "resultSet . getBoolean ( 1 ) ,"
        },
        {
            "Word": "resultSet",
            "WordID": "14",
            "SentID": 1839,
            "TokenID": "2",
            "Context": "while ( resultSet . next ( ) ) {"
        },
        {
            "Word": "resultSet",
            "WordID": "15",
            "SentID": 1840,
            "TokenID": "4",
            "Context": "selectedValues . add ( resultSet . getString ( 1 ) ) ;"
        },
        {
            "Word": "resultSet",
            "WordID": "16",
            "SentID": 1845,
            "TokenID": "0",
            "Context": "resultSet . getDate ( 1 ) ,"
        },
        {
            "Word": "resultSet",
            "WordID": "17",
            "SentID": 1848,
            "TokenID": "0",
            "Context": "resultSet . getDouble ( 1 ) ,"
        },
        {
            "Word": "resultSet",
            "WordID": "18",
            "SentID": 1852,
            "TokenID": "4",
            "Context": "formContainerIds . add ( resultSet . getLong ( 1 ) ) ;"
        },
        {
            "Word": "ResultSet",
            "WordID": "5",
            "SentID": 1889,
            "TokenID": "5",
            "Context": "} private FormFieldMapping mapFormFieldMapping ( ResultSet resultSetParam )"
        },
        {
            "Word": "resultSet",
            "WordID": "19",
            "SentID": 2571,
            "TokenID": "3",
            "Context": "Long id = resultSet . getLong ( 1 ) ;"
        },
        {
            "Word": "resultSet",
            "WordID": "20",
            "SentID": 2572,
            "TokenID": "3",
            "Context": "String title = resultSet . getString ( 2 ) ;"
        },
        {
            "Word": "SQLResultSet",
            "WordID": "1",
            "SentID": 3139,
            "TokenID": "4",
            "Context": "} public List < SQLResultSet > executeNativeSQLSynchronized ("
        },
        {
            "Word": "SQLResultSet",
            "WordID": "2",
            "SentID": 3150,
            "TokenID": "2",
            "Context": "List < SQLResultSet > returnValue ="
        },
        {
            "Labels": [
                "\"Database Query Handling in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "ResultSet, PreparedStatement",
            "Syntactic": "Object",
            "Description": "objects named resultSet, preparedStatement, and SQLResultSet",
            "Semantic": "",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Lexicographic",
            "Q6_Answer": "None"
        }
    ],
    "147": [
        {
            "Word": "getInstance",
            "WordID": "1",
            "SentID": 999,
            "TokenID": "5",
            "Context": "ISyntax syntax = SyntaxFactory . getInstance ( ) . getSyntaxFor ("
        },
        {
            "Word": "getInstance",
            "WordID": "2",
            "SentID": 1820,
            "TokenID": "5",
            "Context": "ISyntax syntax = SyntaxFactory . getInstance ( ) . getFieldValueSyntaxFor ("
        },
        {
            "Word": "getInstance",
            "WordID": "3",
            "SentID": 1859,
            "TokenID": "5",
            "Context": "ISyntax syntaxForFormContInfo = SyntaxFactory . getInstance ( ) . getSyntaxFor ("
        },
        {
            "Word": "getInstance",
            "WordID": "4",
            "SentID": 2659,
            "TokenID": "5",
            "Context": "Mac hmac = Mac . getInstance ( HMAC_ALGO ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "5",
            "SentID": 2691,
            "TokenID": "5",
            "Context": "Cipher cipher = Cipher . getInstance ( ALGO_CBC ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "6",
            "SentID": 2706,
            "TokenID": "6",
            "Context": "final MessageDigest digest = MessageDigest . getInstance ( \"SHA-256\" ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "7",
            "SentID": 3152,
            "TokenID": "4",
            "Context": "} public static SyntaxFactory getInstance ( ) {"
        },
        {
            "Word": "newInstance",
            "WordID": "1",
            "SentID": 3384,
            "TokenID": "5",
            "Context": "ClassLoader urlCl = URLClassLoader . newInstance ( new URL [ ] { url } , originalCl ) ;"
        },
        {
            "Word": "newInstance",
            "WordID": "2",
            "SentID": 3514,
            "TokenID": "5",
            "Context": "Document doc = DocumentBuilderFactory . newInstance ( ) . newDocumentBuilder ( ) . parse ( filePath ) ;"
        },
        {
            "Word": "newInstance",
            "WordID": "6",
            "SentID": 3797,
            "TokenID": "12",
            "Context": "analyzer = ( Analyzer ) Class . forName ( an ) . newInstance ( ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "8",
            "SentID": 3878,
            "TokenID": "5",
            "Context": "Dictionary dic = Dictionary . getInstance ( ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "9",
            "SentID": 4000,
            "TokenID": "5",
            "Context": "Object instance = container . getInstance ( method . getDeclaringClass ( ) ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "11",
            "SentID": 4492,
            "TokenID": "5",
            "Context": "Object instance = scopeFactory . getInstance ( instanceKey ) ;"
        },
        {
            "Word": "newInstance",
            "WordID": "9",
            "SentID": 4509,
            "TokenID": "3",
            "Context": "return instanceFactory . newInstance ( managedClass , args ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "15",
            "SentID": 4513,
            "TokenID": "4",
            "Context": "instance = scopeFactory . getInstance ( instanceKey ) ;"
        },
        {
            "Word": "newInstance",
            "WordID": "10",
            "SentID": 4515,
            "TokenID": "4",
            "Context": "instance = instanceFactory . newInstance ( managedClass , args ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "16",
            "SentID": 4537,
            "TokenID": "2",
            "Context": "ConverterRegistry . getInstance ( ) . registerConverter ( valueType , converterClass ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "17",
            "SentID": 4587,
            "TokenID": "3",
            "Context": "return EmptyArgumentsReader . getInstance ( ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "18",
            "SentID": 4664,
            "TokenID": "5",
            "Context": "T instance = appFactory . getInstance ( interfaceClass ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "19",
            "SentID": 4739,
            "TokenID": "5",
            "Context": "Cipher cipher = Cipher . getInstance ( secretKey . getAlgorithm ( ) ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "20",
            "SentID": 4754,
            "TokenID": "5",
            "Context": "RequestContext context = container . getInstance ( RequestContext . class ) ;"
        },
        {
            "Word": "newInstance",
            "WordID": "11",
            "SentID": 4822,
            "TokenID": "4",
            "Context": "instance = constructor . newInstance ( args ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "21",
            "SentID": 4827,
            "TokenID": "9",
            "Context": "TransactionalResource transactionalResource = managedClass . getContainer ( ) . getInstance ( TransactionalResource . class ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "23",
            "SentID": 4842,
            "TokenID": "5",
            "Context": "return getAppFactory ( ) . getInstance ( interfaceClass , args ) ;"
        },
        {
            "Word": "getInstance",
            "WordID": "25",
            "SentID": 4844,
            "TokenID": "5",
            "Context": "return getAppFactory ( ) . getInstance ( instanceName , interfaceClass , args ) ;"
        },
        {
            "Word": "newInstance",
            "WordID": "13",
            "SentID": 4876,
            "TokenID": "5",
            "Context": "SAXParserFactory factory = SAXParserFactory . newInstance ( ) ;"
        },
        {
            "Labels": [
                "\"Object Creation Methods\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "getInstance",
            "Semantic": "Configuration",
            "Syntactic": "methods",
            "Description": "getInstance method used for configuration and factories",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "316": [
        {
            "Word": "ISyntax",
            "WordID": "2",
            "SentID": 1001,
            "TokenID": "0",
            "Context": "ISyntax . ProcedureMapping . Form . GetFormContainersTableFieldFormContainers ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "3",
            "SentID": 1031,
            "TokenID": "0",
            "Context": "ISyntax . ProcedureMapping . Form . GetFormContainersParentFormContainer ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "4",
            "SentID": 1766,
            "TokenID": "0",
            "Context": "ISyntax . ProcedureMapping . Field . GetFormFieldsForFormContainer ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "5",
            "SentID": 1774,
            "TokenID": "0",
            "Context": "ISyntax . ProcedureMapping . Field . GetFormFieldsForFormDefinition ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "6",
            "SentID": 1780,
            "TokenID": "0",
            "Context": "ISyntax . ProcedureMapping . Field . GetFormDefinitionForFormContainer ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "9",
            "SentID": 1860,
            "TokenID": "0",
            "Context": "ISyntax . ProcedureMapping . Form . GetFormContainerInfo ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "10",
            "SentID": 2570,
            "TokenID": "0",
            "Context": "ISyntax . ProcedureMapping . FormDefinition . GetFormDefinitions ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "12",
            "SentID": 3159,
            "TokenID": "2",
            "Context": "if ( ISyntax . ProcedureMapping . isStoredProcedureMapping ( aliasParam ) ) {"
        },
        {
            "Word": "ISyntax",
            "WordID": "13",
            "SentID": 3162,
            "TokenID": "0",
            "Context": "ISyntax . ProcedureMapping . getParamCountForAlias ( aliasParam ) ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "15",
            "SentID": 3169,
            "TokenID": "2",
            "Context": "sqlTypeParam , ISyntax . ProcedureMapping . Field . GetFormFieldValue_1_Text ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "16",
            "SentID": 3170,
            "TokenID": "2",
            "Context": "sqlTypeParam , ISyntax . ProcedureMapping . Field . GetFormFieldValue_2_TrueFalse ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "17",
            "SentID": 3171,
            "TokenID": "2",
            "Context": "sqlTypeParam , ISyntax . ProcedureMapping . Field . GetFormFieldValue_3_ParagraphText ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "18",
            "SentID": 3173,
            "TokenID": "2",
            "Context": "sqlTypeParam , ISyntax . ProcedureMapping . Field . GetFormFieldValue_4_MultiChoice ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "19",
            "SentID": 3175,
            "TokenID": "2",
            "Context": "sqlTypeParam , ISyntax . ProcedureMapping . Field . GetFormFieldMultipleValue_4_MultiChoice ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "20",
            "SentID": 3178,
            "TokenID": "2",
            "Context": "sqlTypeParam , ISyntax . ProcedureMapping . Field . GetFormFieldValue_5_DateTime ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "21",
            "SentID": 3179,
            "TokenID": "2",
            "Context": "sqlTypeParam , ISyntax . ProcedureMapping . Field . GetFormFieldValue_6_Decimal ) ;"
        },
        {
            "Word": "ISyntax",
            "WordID": "22",
            "SentID": 3180,
            "TokenID": "2",
            "Context": "sqlTypeParam , ISyntax . ProcedureMapping . Field . GetFormFieldValue_7_TableField ) ;"
        },
        {
            "Labels": [
                "\"Syntax Interface in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "ISyntax",
            "Syntactic": "Object",
            "Semantic": "Form Manipulation",
            "Description": "ISyntax object used in form manipulation, mainly accessing a variable from ISyntax.ProcedureMapping.Form object",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "256": [
        {
            "Word": "<",
            "WordID": "46",
            "SentID": 1096,
            "TokenID": "8",
            "Context": "List < Role > returnVal = new ArrayList < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "56",
            "SentID": 1420,
            "TokenID": "8",
            "Context": "List < FormListing > returnVal = new ArrayList < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "63",
            "SentID": 1450,
            "TokenID": "8",
            "Context": "List < FormFieldListing > returnVal = new ArrayList < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "68",
            "SentID": 1465,
            "TokenID": "8",
            "Context": "List < FormFieldListing > listingReturnFieldValsPopulated = new ArrayList < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "96",
            "SentID": 2475,
            "TokenID": "6",
            "Context": "this . sqlInputs = new ArrayList < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "104",
            "SentID": 2565,
            "TokenID": "10",
            "Context": "Map < Long , String > returnVal = new HashMap < > ( LOCAL_MAPPING ) ;"
        },
        {
            "Word": "<",
            "WordID": "105",
            "SentID": 2569,
            "TokenID": "3",
            "Context": "return new HashMap < > ( LOCAL_MAPPING ) ;"
        },
        {
            "Word": "<",
            "WordID": "121",
            "SentID": 3095,
            "TokenID": "7",
            "Context": "for ( IMessageResponseHandler handler : new ArrayList < > ( this . messageHandlers . values ( ) ) ) {"
        },
        {
            "Word": "<",
            "WordID": "141",
            "SentID": 3435,
            "TokenID": "10",
            "Context": "Map < String , XsdRestriction > restrictions = new HashMap < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "143",
            "SentID": 3448,
            "TokenID": "3",
            "Context": "return new ArrayList < > ( restrictions . values ( ) ) ;"
        },
        {
            "Word": "<",
            "WordID": "149",
            "SentID": 3545,
            "TokenID": "10",
            "Context": "HashMap < String , String > attributesMapped = new HashMap < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "162",
            "SentID": 3705,
            "TokenID": "8",
            "Context": "List < SystemProperty > systemProperties = new ArrayList < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "185",
            "SentID": 4039,
            "TokenID": "10",
            "Context": "Map < String , String > parameters = new HashMap < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "193",
            "SentID": 4163,
            "TokenID": "8",
            "Context": "List < String > interfaceNames = new ArrayList < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "208",
            "SentID": 4212,
            "TokenID": "8",
            "Context": "Collection < Field > dependencies = new ArrayList < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "229",
            "SentID": 4276,
            "TokenID": "4",
            "Context": "stackTrace = new Stack < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "232",
            "SentID": 4289,
            "TokenID": "8",
            "Context": "ScopeProxyHandler < ? > handler = new ScopeProxyHandler < > ( container , type ) ;"
        },
        {
            "Word": "<",
            "WordID": "238",
            "SentID": 4370,
            "TokenID": "15",
            "Context": "Map < String , Map < URI , String > > links = new HashMap < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "240",
            "SentID": 4371,
            "TokenID": "10",
            "Context": "Map < String , String > linkTemplates = new HashMap < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "254",
            "SentID": 4408,
            "TokenID": "10",
            "Context": "map . put ( key , value = new HashMap < > ( ) ) ;"
        },
        {
            "Word": "<",
            "WordID": "261",
            "SentID": 4454,
            "TokenID": "8",
            "Context": "List < Config > classDescriptors = new ArrayList < > ( ) ;"
        },
        {
            "Word": "<",
            "WordID": "265",
            "SentID": 4478,
            "TokenID": "8",
            "Context": "Set < ManagedClassSPI > sortedClasses = new TreeSet < > ( new Comparator < ManagedClassSPI > ( ) {"
        },
        {
            "Word": "<",
            "WordID": "290",
            "SentID": 4820,
            "TokenID": "6",
            "Context": "eventBus . post ( new ElementDeletedEvent < > ( endpoint ) ) ;"
        },
        {
            "Word": "<",
            "WordID": "305",
            "SentID": 4874,
            "TokenID": "4",
            "Context": "container = new BeanItemContainer < > ( entityType , candidates ) ) ;"
        },
        {
            "Word": "<",
            "WordID": "328",
            "SentID": 4996,
            "TokenID": "8",
            "Context": "LinkedList < PropertyDescriptor > properties = new LinkedList < > ( ) ;"
        },
        {
            "Labels": [
                "\"Accessing Object Properties or Methods\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "Opening Angle Bracket",
            "Semantic": "List type, instantiation",
            "Lexicographic": "<",
            "Description": "Opening Angle Bracket used to define type when instantiating a list or map",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "251": [
        {
            "Word": ">",
            "WordID": "57",
            "SentID": 1096,
            "TokenID": "9",
            "Context": "List < Role > returnVal = new ArrayList < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "66",
            "SentID": 1420,
            "TokenID": "9",
            "Context": "List < FormListing > returnVal = new ArrayList < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "71",
            "SentID": 1450,
            "TokenID": "9",
            "Context": "List < FormFieldListing > returnVal = new ArrayList < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "74",
            "SentID": 1465,
            "TokenID": "9",
            "Context": "List < FormFieldListing > listingReturnFieldValsPopulated = new ArrayList < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "101",
            "SentID": 2475,
            "TokenID": "7",
            "Context": "this . sqlInputs = new ArrayList < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "109",
            "SentID": 2565,
            "TokenID": "11",
            "Context": "Map < Long , String > returnVal = new HashMap < > ( LOCAL_MAPPING ) ;"
        },
        {
            "Word": ">",
            "WordID": "111",
            "SentID": 2569,
            "TokenID": "4",
            "Context": "return new HashMap < > ( LOCAL_MAPPING ) ;"
        },
        {
            "Word": ">",
            "WordID": "131",
            "SentID": 3095,
            "TokenID": "8",
            "Context": "for ( IMessageResponseHandler handler : new ArrayList < > ( this . messageHandlers . values ( ) ) ) {"
        },
        {
            "Word": ">",
            "WordID": "151",
            "SentID": 3435,
            "TokenID": "11",
            "Context": "Map < String , XsdRestriction > restrictions = new HashMap < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "153",
            "SentID": 3448,
            "TokenID": "4",
            "Context": "return new ArrayList < > ( restrictions . values ( ) ) ;"
        },
        {
            "Word": ">",
            "WordID": "159",
            "SentID": 3545,
            "TokenID": "11",
            "Context": "HashMap < String , String > attributesMapped = new HashMap < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "171",
            "SentID": 3705,
            "TokenID": "9",
            "Context": "List < SystemProperty > systemProperties = new ArrayList < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "190",
            "SentID": 4039,
            "TokenID": "11",
            "Context": "Map < String , String > parameters = new HashMap < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "198",
            "SentID": 4163,
            "TokenID": "9",
            "Context": "List < String > interfaceNames = new ArrayList < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "211",
            "SentID": 4212,
            "TokenID": "9",
            "Context": "Collection < Field > dependencies = new ArrayList < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "231",
            "SentID": 4276,
            "TokenID": "5",
            "Context": "stackTrace = new Stack < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "234",
            "SentID": 4289,
            "TokenID": "9",
            "Context": "ScopeProxyHandler < ? > handler = new ScopeProxyHandler < > ( container , type ) ;"
        },
        {
            "Word": ">",
            "WordID": "240",
            "SentID": 4370,
            "TokenID": "16",
            "Context": "Map < String , Map < URI , String > > links = new HashMap < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "242",
            "SentID": 4371,
            "TokenID": "11",
            "Context": "Map < String , String > linkTemplates = new HashMap < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "256",
            "SentID": 4408,
            "TokenID": "11",
            "Context": "map . put ( key , value = new HashMap < > ( ) ) ;"
        },
        {
            "Word": ">",
            "WordID": "263",
            "SentID": 4454,
            "TokenID": "9",
            "Context": "List < Config > classDescriptors = new ArrayList < > ( ) ;"
        },
        {
            "Word": ">",
            "WordID": "266",
            "SentID": 4478,
            "TokenID": "9",
            "Context": "Set < ManagedClassSPI > sortedClasses = new TreeSet < > ( new Comparator < ManagedClassSPI > ( ) {"
        },
        {
            "Word": ">",
            "WordID": "291",
            "SentID": 4820,
            "TokenID": "7",
            "Context": "eventBus . post ( new ElementDeletedEvent < > ( endpoint ) ) ;"
        },
        {
            "Word": ">",
            "WordID": "305",
            "SentID": 4874,
            "TokenID": "5",
            "Context": "container = new BeanItemContainer < > ( entityType , candidates ) ) ;"
        },
        {
            "Word": ">",
            "WordID": "324",
            "SentID": 4996,
            "TokenID": "9",
            "Context": "LinkedList < PropertyDescriptor > properties = new LinkedList < > ( ) ;"
        },
        {
            "Labels": [
                "\"Symbol for accessing properties or methods in Java\""
            ],
            "Meaningful": "Yes",
            "Syntactic": "Closing Angle Bracket",
            "Semantic": "List type, Instantiation",
            "Lexicographic": ">",
            "Description": "Closing Angle Bracket used to instantiate a new List or Map object.",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "191": [
        {
            "Word": "CachedFieldValue",
            "WordID": "1",
            "SentID": 1154,
            "TokenID": "2",
            "Context": "} public CachedFieldValue getCachedFieldValueFrom ("
        },
        {
            "Word": "CachedFieldValue",
            "WordID": "2",
            "SentID": 1169,
            "TokenID": "1",
            "Context": "private CachedFieldValue getCacheFieldValueFromObject ( Object objWithKeyParam )"
        },
        {
            "Word": "CachedFieldValue",
            "WordID": "3",
            "SentID": 1200,
            "TokenID": "0",
            "Context": "CachedFieldValue returnVal = new CachedFieldValue ( ) ;"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "4",
            "SentID": 1537,
            "TokenID": "2",
            "Context": "} public FlowStepRule createFlowStepEntryRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "5",
            "SentID": 1537,
            "TokenID": "5",
            "Context": "} public FlowStepRule createFlowStepEntryRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "6",
            "SentID": 1540,
            "TokenID": "2",
            "Context": "return new FlowStepRule ( this . putJson ("
        },
        {
            "Word": "FlowStepRule",
            "WordID": "8",
            "SentID": 1542,
            "TokenID": "2",
            "Context": "} public FlowStepRule createFlowStepExitRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "9",
            "SentID": 1542,
            "TokenID": "5",
            "Context": "} public FlowStepRule createFlowStepExitRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "11",
            "SentID": 1544,
            "TokenID": "2",
            "Context": "} public FlowStepRule createFlowStepViewRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "12",
            "SentID": 1544,
            "TokenID": "5",
            "Context": "} public FlowStepRule createFlowStepViewRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "14",
            "SentID": 1546,
            "TokenID": "2",
            "Context": "} public FlowStepRule updateFlowStepEntryRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "15",
            "SentID": 1546,
            "TokenID": "5",
            "Context": "} public FlowStepRule updateFlowStepEntryRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "16",
            "SentID": 1547,
            "TokenID": "2",
            "Context": "return new FlowStepRule ( this . postJson ("
        },
        {
            "Word": "FlowStepRule",
            "WordID": "18",
            "SentID": 1549,
            "TokenID": "2",
            "Context": "} public FlowStepRule updateFlowStepExitRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "19",
            "SentID": 1549,
            "TokenID": "5",
            "Context": "} public FlowStepRule updateFlowStepExitRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "21",
            "SentID": 1551,
            "TokenID": "2",
            "Context": "} public FlowStepRule updateFlowStepViewRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "22",
            "SentID": 1551,
            "TokenID": "5",
            "Context": "} public FlowStepRule updateFlowStepViewRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "24",
            "SentID": 1553,
            "TokenID": "2",
            "Context": "} public FlowStepRule compileFlowStepViewRule ( String viewRuleSyntaxParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "25",
            "SentID": 1554,
            "TokenID": "0",
            "Context": "FlowStepRule flowStepRule = new FlowStepRule ( ) ;"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "26",
            "SentID": 1554,
            "TokenID": "4",
            "Context": "FlowStepRule flowStepRule = new FlowStepRule ( ) ;"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "30",
            "SentID": 1570,
            "TokenID": "2",
            "Context": "} public FlowStepRule compileFlowStepEntryRule ( String entryRuleSyntaxParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "33",
            "SentID": 1576,
            "TokenID": "2",
            "Context": "} public FlowStepRule moveFlowStepEntryRuleUp ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "34",
            "SentID": 1576,
            "TokenID": "5",
            "Context": "} public FlowStepRule moveFlowStepEntryRuleUp ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "36",
            "SentID": 1578,
            "TokenID": "2",
            "Context": "} public FlowStepRule moveFlowStepEntryRuleDown ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "37",
            "SentID": 1578,
            "TokenID": "5",
            "Context": "} public FlowStepRule moveFlowStepEntryRuleDown ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "39",
            "SentID": 1580,
            "TokenID": "2",
            "Context": "} public FlowStepRule deleteFlowStepEntryRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "40",
            "SentID": 1580,
            "TokenID": "5",
            "Context": "} public FlowStepRule deleteFlowStepEntryRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "42",
            "SentID": 1582,
            "TokenID": "5",
            "Context": "} public FlowStep deleteFlowStepExitRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "44",
            "SentID": 1584,
            "TokenID": "5",
            "Context": "} public FlowStep deleteFlowStepViewRule ( FlowStepRule flowStepRuleParam )"
        },
        {
            "Word": "FlowStepRule",
            "WordID": "46",
            "SentID": 1590,
            "TokenID": "0",
            "Context": "FlowStepRule returnedObj = new FlowStepRule ( this . postJson ("
        },
        {
            "Word": "FlowStepRule",
            "WordID": "47",
            "SentID": 1590,
            "TokenID": "4",
            "Context": "FlowStepRule returnedObj = new FlowStepRule ( this . postJson ("
        },
        {
            "Word": "CachedFieldValue",
            "WordID": "5",
            "SentID": 1808,
            "TokenID": "2",
            "Context": "CacheUtil . CachedFieldValue cachedFieldValue ="
        },
        {
            "Word": "MailMessageNameValue",
            "WordID": "1",
            "SentID": 2220,
            "TokenID": "2",
            "Context": "for ( MailMessageNameValue item : this . getNameValues ( ) )"
        },
        {
            "Word": "HeaderNameValue",
            "WordID": "1",
            "SentID": 2811,
            "TokenID": "2",
            "Context": "List < HeaderNameValue > headerListing = new ArrayList < HeaderNameValue > ( ) ;"
        },
        {
            "Word": "HeaderNameValue",
            "WordID": "2",
            "SentID": 2811,
            "TokenID": "9",
            "Context": "List < HeaderNameValue > headerListing = new ArrayList < HeaderNameValue > ( ) ;"
        },
        {
            "Word": "HeaderNameValue",
            "WordID": "3",
            "SentID": 2812,
            "TokenID": "5",
            "Context": "headerListing . add ( new HeaderNameValue ("
        },
        {
            "Word": "HeaderNameValue",
            "WordID": "4",
            "SentID": 2853,
            "TokenID": "2",
            "Context": "List < HeaderNameValue > headerNameValuesParam ) {"
        },
        {
            "Word": "HeaderNameValue",
            "WordID": "5",
            "SentID": 2863,
            "TokenID": "2",
            "Context": "for ( HeaderNameValue headerNameVal : headerNameValuesParam ) {"
        },
        {
            "Word": "HeaderNameValue",
            "WordID": "6",
            "SentID": 2884,
            "TokenID": "2",
            "Context": "List < HeaderNameValue > headerNameValuesParam ,"
        },
        {
            "Word": "FormNameValue",
            "WordID": "1",
            "SentID": 2896,
            "TokenID": "2",
            "Context": "List < FormNameValue > formNameValuesParam ,"
        },
        {
            "Word": "FormNameValue",
            "WordID": "2",
            "SentID": 2915,
            "TokenID": "2",
            "Context": "for ( FormNameValue nameValue : formNameValuesParam ) {"
        },
        {
            "Word": "XsdStringRestrictions",
            "WordID": "1",
            "SentID": 3344,
            "TokenID": "6",
            "Context": "} public static boolean hasDifferentValue ( XsdStringRestrictions o1 , XsdStringRestrictions o2 ) {"
        },
        {
            "Word": "XsdStringRestrictions",
            "WordID": "2",
            "SentID": 3344,
            "TokenID": "9",
            "Context": "} public static boolean hasDifferentValue ( XsdStringRestrictions o1 , XsdStringRestrictions o2 ) {"
        },
        {
            "Word": "XsdDoubleRestrictions",
            "WordID": "1",
            "SentID": 3430,
            "TokenID": "6",
            "Context": "} public static boolean hasDifferentValue ( XsdDoubleRestrictions o1 , XsdDoubleRestrictions o2 ) {"
        },
        {
            "Word": "XsdDoubleRestrictions",
            "WordID": "2",
            "SentID": 3430,
            "TokenID": "9",
            "Context": "} public static boolean hasDifferentValue ( XsdDoubleRestrictions o1 , XsdDoubleRestrictions o2 ) {"
        },
        {
            "Word": "XsdRestriction",
            "WordID": "5",
            "SentID": 3449,
            "TokenID": "5",
            "Context": "} private void updateExistingRestriction ( XsdRestriction existing , XsdRestriction newRestriction ) {"
        },
        {
            "Word": "XsdRestriction",
            "WordID": "6",
            "SentID": 3449,
            "TokenID": "8",
            "Context": "} private void updateExistingRestriction ( XsdRestriction existing , XsdRestriction newRestriction ) {"
        },
        {
            "Word": "XsdRestriction",
            "WordID": "7",
            "SentID": 3484,
            "TokenID": "5",
            "Context": "} private void updateExistingRestrictionEnumerations ( XsdRestriction existing , XsdRestriction newRestriction ) {"
        },
        {
            "Word": "XsdRestriction",
            "WordID": "8",
            "SentID": 3484,
            "TokenID": "8",
            "Context": "} private void updateExistingRestrictionEnumerations ( XsdRestriction existing , XsdRestriction newRestriction ) {"
        },
        {
            "Word": "XsdRestriction",
            "WordID": "9",
            "SentID": 3493,
            "TokenID": "5",
            "Context": "} private boolean existsRestrictionOverlap ( XsdRestriction existing , XsdRestriction newRestriction ) {"
        },
        {
            "Word": "XsdRestriction",
            "WordID": "10",
            "SentID": 3493,
            "TokenID": "8",
            "Context": "} private boolean existsRestrictionOverlap ( XsdRestriction existing , XsdRestriction newRestriction ) {"
        },
        {
            "Word": "XsdIntegerRestrictions",
            "WordID": "1",
            "SentID": 3563,
            "TokenID": "6",
            "Context": "} public static boolean hasDifferentValue ( XsdIntegerRestrictions o1 , XsdIntegerRestrictions o2 ) {"
        },
        {
            "Word": "XsdIntegerRestrictions",
            "WordID": "2",
            "SentID": 3563,
            "TokenID": "9",
            "Context": "} public static boolean hasDifferentValue ( XsdIntegerRestrictions o1 , XsdIntegerRestrictions o2 ) {"
        },
        {
            "Labels": [
                "\"Data Processing and XML Schema Restrictions in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "FlowStepRule, Value,Restriction",
            "Syntactic": "Object",
            "Semantic": "Function Declaration",
            "Description": "Objects named \"FlowStepRule\" or containing \"Value\" or \"Restrictions\" in the name. OFten used in function declarations.",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "95": [
        {
            "Word": "storageKey",
            "WordID": "1",
            "SentID": 1160,
            "TokenID": "1",
            "Context": "String storageKey = this . getStorageKeyFrom ("
        },
        {
            "Word": "objWithKey",
            "WordID": "1",
            "SentID": 1164,
            "TokenID": "1",
            "Context": "Object objWithKey ;"
        },
        {
            "Word": "objWithKey",
            "WordID": "2",
            "SentID": 1165,
            "TokenID": "0",
            "Context": "objWithKey = this . memcachedClient . get ( storageKey ) ;"
        },
        {
            "Word": "objWithKey",
            "WordID": "3",
            "SentID": 1168,
            "TokenID": "5",
            "Context": "return this . getCacheFieldValueFromObject ( objWithKey ) ;"
        },
        {
            "Word": "sessionKey",
            "WordID": "1",
            "SentID": 1645,
            "TokenID": "3",
            "Context": "byte [ ] sessionKey = UtilGlobal . decodeBase64 ("
        },
        {
            "Word": "sessionKey",
            "WordID": "2",
            "SentID": 1649,
            "TokenID": "0",
            "Context": "sessionKey ,"
        },
        {
            "Word": "sessionKey",
            "WordID": "3",
            "SentID": 1653,
            "TokenID": "6",
            "Context": "AES256Local . generateLocalHMACForReqToken ( encryptedData , sessionKey , seed ) ;"
        },
        {
            "Word": "containsKey",
            "WordID": "1",
            "SentID": 1764,
            "TokenID": "6",
            "Context": "if ( this . localDefinitionToFieldsMapping . containsKey ( formDefinitionId ) )"
        },
        {
            "Word": "containsKey",
            "WordID": "2",
            "SentID": 1772,
            "TokenID": "6",
            "Context": "if ( this . localDefinitionToFieldsMapping . containsKey ( formDefinitionIdParam ) )"
        },
        {
            "Word": "mappingKey",
            "WordID": "1",
            "SentID": 2400,
            "TokenID": "3",
            "Context": "for ( ObjectCursor mappingKey : getExistingIndex . getMappings ( ) . keys ( ) ) {"
        },
        {
            "Word": "mappingKey",
            "WordID": "2",
            "SentID": 2401,
            "TokenID": "3",
            "Context": "if ( ! mappingKey . value . toString ( ) . equals ( indexParam ) ) {"
        },
        {
            "Word": "mappingKey",
            "WordID": "3",
            "SentID": 2402,
            "TokenID": "11",
            "Context": "Object obj = getExistingIndex . getMappings ( ) . get ( mappingKey . value . toString ( ) ) ;"
        },
        {
            "Word": "containsKey",
            "WordID": "3",
            "SentID": 2405,
            "TokenID": "4",
            "Context": "if ( casted . containsKey ( formTypeString ) &&"
        },
        {
            "Word": "existingKey",
            "WordID": "1",
            "SentID": 2426,
            "TokenID": "3",
            "Context": "for ( String existingKey : existingPropertiesUpdated . keySet ( ) ) {"
        },
        {
            "Word": "existingKey",
            "WordID": "2",
            "SentID": 2427,
            "TokenID": "4",
            "Context": "newContentMappingBuilderFromParam . put ( existingKey ,"
        },
        {
            "Word": "existingKey",
            "WordID": "3",
            "SentID": 2428,
            "TokenID": "4",
            "Context": "existingPropertiesUpdated . get ( existingKey ) ) ;"
        },
        {
            "Word": "possibleExistingKey",
            "WordID": "1",
            "SentID": 2430,
            "TokenID": "3",
            "Context": "for ( String possibleExistingKey : newContentMappingBuilderFromParam . keySet ( ) ) {"
        },
        {
            "Word": "possibleExistingKey",
            "WordID": "2",
            "SentID": 2431,
            "TokenID": "7",
            "Context": "if ( ! existingPropertiesUpdated . has ( possibleExistingKey ) ) {"
        },
        {
            "Word": "derivedKey",
            "WordID": "1",
            "SentID": 2670,
            "TokenID": "3",
            "Context": "byte [ ] derivedKey = sha256 ( UtilGlobal . addAll ( passwordSha256 , poisonedSeed ) ) ;"
        },
        {
            "Word": "derivedKey",
            "WordID": "2",
            "SentID": 2671,
            "TokenID": "3",
            "Context": "return hmacSha256 ( derivedKey , encryptedDataParam ) ;"
        },
        {
            "Word": "derivedKey",
            "WordID": "3",
            "SentID": 2674,
            "TokenID": "3",
            "Context": "byte [ ] derivedKey = sha256 ( UtilGlobal . addAll ( keyParam , poisonedSeed ) ) ;"
        },
        {
            "Word": "derivedKey",
            "WordID": "4",
            "SentID": 2687,
            "TokenID": "3",
            "Context": "byte [ ] derivedKey = sha256 ( UtilGlobal . addAll ( passwordSha256 , seedParam ) ) ;"
        },
        {
            "Word": "derivedKey",
            "WordID": "5",
            "SentID": 2688,
            "TokenID": "3",
            "Context": "return decrypt ( derivedKey , encryptedDataParam , ivParam ) ;"
        },
        {
            "Word": "getByKey",
            "WordID": "1",
            "SentID": 3288,
            "TokenID": "10",
            "Context": "configuration , WS . Path . Configuration . Version1 . getByKey ( ) ) ) ;"
        },
        {
            "Word": "containsKey",
            "WordID": "4",
            "SentID": 3505,
            "TokenID": "4",
            "Context": "if ( attributesMap . containsKey ( REF_TAG ) && ( simpleType != null || form != null || type != null ) ) {"
        },
        {
            "Word": "containsKey",
            "WordID": "5",
            "SentID": 3517,
            "TokenID": "8",
            "Context": "if ( parent instanceof XsdSchema && attributesMap . containsKey ( FORM_TAG ) ) {"
        },
        {
            "Word": "containsKey",
            "WordID": "6",
            "SentID": 3518,
            "TokenID": "8",
            "Context": "if ( parent instanceof XsdSchema && attributesMap . containsKey ( REF_TAG ) ) {"
        },
        {
            "Word": "containsKey",
            "WordID": "7",
            "SentID": 3714,
            "TokenID": "4",
            "Context": "if ( restoreProperties . containsKey ( propertyName ) ) {"
        },
        {
            "Word": "getKey",
            "WordID": "1",
            "SentID": 3821,
            "TokenID": "5",
            "Context": "File words = flt . getKey ( ) ;"
        },
        {
            "Word": "containsKey",
            "WordID": "8",
            "SentID": 3827,
            "TokenID": "5",
            "Context": "if ( ! wordsLastTime . containsKey ( wordsFile ) ) {"
        },
        {
            "Word": "getKey",
            "WordID": "2",
            "SentID": 4390,
            "TokenID": "5",
            "Context": "String rel = x . getKey ( ) ;"
        },
        {
            "Word": "InstanceKey",
            "WordID": "1",
            "SentID": 4476,
            "TokenID": "12",
            "Context": "scopeFactories . get ( InstanceScope . APPLICATION ) . persistInstance ( new InstanceKey ( appContext . getKey ( ) ) , this ) ;"
        },
        {
            "Word": "getKey",
            "WordID": "3",
            "SentID": 4476,
            "TokenID": "16",
            "Context": "scopeFactories . get ( InstanceScope . APPLICATION ) . persistInstance ( new InstanceKey ( appContext . getKey ( ) ) , this ) ;"
        },
        {
            "Word": "getKey",
            "WordID": "8",
            "SentID": 4491,
            "TokenID": "8",
            "Context": "InstanceKey instanceKey = new InstanceKey ( managedClass . getKey ( ) ) ;"
        },
        {
            "Word": "instanceKey",
            "WordID": "2",
            "SentID": 4492,
            "TokenID": "7",
            "Context": "Object instance = scopeFactory . getInstance ( instanceKey ) ;"
        },
        {
            "Word": "instanceKey",
            "WordID": "3",
            "SentID": 4505,
            "TokenID": "5",
            "Context": "return getInstance ( managedClass , instanceKey , args ) ;"
        },
        {
            "Word": "InstanceKey",
            "WordID": "4",
            "SentID": 4506,
            "TokenID": "10",
            "Context": "private < T > T getInstance ( ManagedClassSPI managedClass , InstanceKey instanceKey , Object ... args ) {"
        },
        {
            "Word": "instanceKey",
            "WordID": "4",
            "SentID": 4506,
            "TokenID": "11",
            "Context": "private < T > T getInstance ( ManagedClassSPI managedClass , InstanceKey instanceKey , Object ... args ) {"
        },
        {
            "Word": "instanceKey",
            "WordID": "5",
            "SentID": 4513,
            "TokenID": "6",
            "Context": "instance = scopeFactory . getInstance ( instanceKey ) ;"
        },
        {
            "Word": "instanceKey",
            "WordID": "6",
            "SentID": 4516,
            "TokenID": "4",
            "Context": "scopeFactory . persistInstance ( instanceKey , instance ) ;"
        },
        {
            "Word": "EncoderKey",
            "WordID": "1",
            "SentID": 4592,
            "TokenID": "5",
            "Context": "return readers . get ( EncoderKey . APPLICATION_JSON ) ;"
        },
        {
            "Word": "hasSecretKey",
            "WordID": "1",
            "SentID": 4710,
            "TokenID": "4",
            "Context": "if ( config . hasSecretKey ( ) ) {"
        },
        {
            "Word": "secretKey",
            "WordID": "1",
            "SentID": 4711,
            "TokenID": "0",
            "Context": "secretKey = config . getSecretKey ( ) ;"
        },
        {
            "Word": "secretKey",
            "WordID": "2",
            "SentID": 4737,
            "TokenID": "2",
            "Context": "if ( secretKey == null ) {"
        },
        {
            "Word": "InstanceKey",
            "WordID": "5",
            "SentID": 4989,
            "TokenID": "4",
            "Context": "public void persistInstance ( InstanceKey instanceKey , Object instance ) {"
        },
        {
            "Word": "instanceKey",
            "WordID": "7",
            "SentID": 4989,
            "TokenID": "5",
            "Context": "public void persistInstance ( InstanceKey instanceKey , Object instance ) {"
        },
        {
            "Word": "instanceKey",
            "WordID": "8",
            "SentID": 4990,
            "TokenID": "4",
            "Context": "instancesPool . put ( instanceKey , instance ) ;"
        },
        {
            "Labels": [
                "\"Key Management and Access in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Key",
            "Syntactic": "Variable, Method",
            "Semantic": "Network, Encryption",
            "Description": "Variables and methods containing the substring \"Key\" dealing with Network and Encryption",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "126": [
        {
            "Word": "getMethod",
            "WordID": "1",
            "SentID": 1171,
            "TokenID": "5",
            "Context": "Method methodGetWord = CacheUtil . getMethod ("
        },
        {
            "Word": "getMethod",
            "WordID": "2",
            "SentID": 1174,
            "TokenID": "5",
            "Context": "Method methodGetValue = CacheUtil . getMethod ("
        },
        {
            "Word": "getMethod",
            "WordID": "3",
            "SentID": 1183,
            "TokenID": "3",
            "Context": "Method methodAvailableChoices = getMethod ("
        },
        {
            "Word": "getMethod",
            "WordID": "4",
            "SentID": 1189,
            "TokenID": "3",
            "Context": "Method methodSelectedChoices = getMethod ("
        },
        {
            "Word": "getMethod",
            "WordID": "5",
            "SentID": 1203,
            "TokenID": "3",
            "Context": "private static Method getMethod ( Class clazzParam , String nameParam )"
        },
        {
            "Word": "getDeclaredMethod",
            "WordID": "1",
            "SentID": 1205,
            "TokenID": "5",
            "Context": "Method returnVal = clazzParam . getDeclaredMethod ( nameParam ) ;"
        },
        {
            "Word": "HttpMethod",
            "WordID": "1",
            "SentID": 2886,
            "TokenID": "0",
            "Context": "HttpMethod . POST ,"
        },
        {
            "Word": "HttpMethod",
            "WordID": "2",
            "SentID": 2894,
            "TokenID": "0",
            "Context": "HttpMethod . DELETE ,"
        },
        {
            "Word": "HttpMethod",
            "WordID": "3",
            "SentID": 2901,
            "TokenID": "0",
            "Context": "HttpMethod . PUT ,"
        },
        {
            "Word": "HttpMethod",
            "WordID": "5",
            "SentID": 2937,
            "TokenID": "4",
            "Context": "if ( httpMethodParam == HttpMethod . POST ) {"
        },
        {
            "Word": "HttpMethod",
            "WordID": "6",
            "SentID": 2944,
            "TokenID": "6",
            "Context": "} else if ( httpMethodParam == HttpMethod . PUT ) {"
        },
        {
            "Word": "HttpMethod",
            "WordID": "7",
            "SentID": 2947,
            "TokenID": "6",
            "Context": "} else if ( httpMethodParam == HttpMethod . DELETE ) {"
        },
        {
            "Word": "managedMethod",
            "WordID": "2",
            "SentID": 3987,
            "TokenID": "3",
            "Context": "if ( ! managedMethod . isRemotelyAccessible ( ) ) {"
        },
        {
            "Word": "managedMethod",
            "WordID": "3",
            "SentID": 3988,
            "TokenID": "7",
            "Context": "if ( ! Types . isKindOf ( managedMethod . getReturnType ( ) , Resource . class ) ) {"
        },
        {
            "Word": "managedMethod",
            "WordID": "4",
            "SentID": 3989,
            "TokenID": "6",
            "Context": "restMethods . put ( key ( managedMethod ) , managedMethod ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "5",
            "SentID": 3989,
            "TokenID": "9",
            "Context": "restMethods . put ( key ( managedMethod ) , managedMethod ) ;"
        },
        {
            "Word": "method",
            "WordID": "2",
            "SentID": 3995,
            "TokenID": "0",
            "Context": "method = restMethods . get ( key ( httpRequest . getPathInfo ( ) ) ) ;"
        },
        {
            "Word": "method",
            "WordID": "4",
            "SentID": 4000,
            "TokenID": "7",
            "Context": "Object instance = container . getInstance ( method . getDeclaringClass ( ) ) ;"
        },
        {
            "Word": "method",
            "WordID": "5",
            "SentID": 4001,
            "TokenID": "2",
            "Context": "value = method . invoke ( instance , arguments ) ;"
        },
        {
            "Word": "method",
            "WordID": "6",
            "SentID": 4011,
            "TokenID": "2",
            "Context": "if ( method . isVoid ( ) ) {"
        },
        {
            "Word": "getInterfaceMethod",
            "WordID": "1",
            "SentID": 4089,
            "TokenID": "3",
            "Context": "Method interfaceMethod = getInterfaceMethod ( method ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "6",
            "SentID": 4090,
            "TokenID": "1",
            "Context": "ManagedMethod managedMethod = null ;"
        },
        {
            "Word": "remoteMethod",
            "WordID": "2",
            "SentID": 4092,
            "TokenID": "3",
            "Context": "if ( ! remoteMethod ) {"
        },
        {
            "Word": "remoteMethod",
            "WordID": "3",
            "SentID": 4093,
            "TokenID": "0",
            "Context": "remoteMethod = remoteType ;"
        },
        {
            "Word": "remoteMethod",
            "WordID": "4",
            "SentID": 4095,
            "TokenID": "0",
            "Context": "remoteMethod = false ;"
        },
        {
            "Word": "remoteMethod",
            "WordID": "5",
            "SentID": 4096,
            "TokenID": "2",
            "Context": "if ( remoteMethod ) {"
        },
        {
            "Word": "interfaceMethod",
            "WordID": "2",
            "SentID": 4102,
            "TokenID": "9",
            "Context": "managedMethod = new ManagedMethod ( this , methodInterceptor , interfaceMethod ) ;"
        },
        {
            "Word": "publicMethod",
            "WordID": "2",
            "SentID": 4104,
            "TokenID": "2",
            "Context": "if ( publicMethod && ! remotelyAccessible ) {"
        },
        {
            "Word": "publicMethod",
            "WordID": "3",
            "SentID": 4105,
            "TokenID": "3",
            "Context": "if ( ! publicMethod ) {"
        },
        {
            "Word": "publicMethod",
            "WordID": "4",
            "SentID": 4106,
            "TokenID": "0",
            "Context": "publicMethod = publicType ;"
        },
        {
            "Word": "publicMethod",
            "WordID": "5",
            "SentID": 4109,
            "TokenID": "0",
            "Context": "publicMethod = false ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "8",
            "SentID": 4112,
            "TokenID": "2",
            "Context": "if ( managedMethod == null ) {"
        },
        {
            "Word": "interfaceMethod",
            "WordID": "3",
            "SentID": 4113,
            "TokenID": "7",
            "Context": "managedMethod = new ManagedMethod ( this , interfaceMethod ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "10",
            "SentID": 4114,
            "TokenID": "0",
            "Context": "managedMethod . setRequestPath ( methodPath != null ? methodPath . value ( ) : null ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "11",
            "SentID": 4115,
            "TokenID": "0",
            "Context": "managedMethod . setRemotelyAccessible ( remoteMethod ) ;"
        },
        {
            "Word": "remoteMethod",
            "WordID": "6",
            "SentID": 4115,
            "TokenID": "4",
            "Context": "managedMethod . setRemotelyAccessible ( remoteMethod ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "12",
            "SentID": 4116,
            "TokenID": "0",
            "Context": "managedMethod . setAccess ( publicMethod ? Access . PUBLIC : Access . PRIVATE ) ;"
        },
        {
            "Word": "publicMethod",
            "WordID": "6",
            "SentID": 4116,
            "TokenID": "4",
            "Context": "managedMethod . setAccess ( publicMethod ? Access . PUBLIC : Access . PRIVATE ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "13",
            "SentID": 4129,
            "TokenID": "8",
            "Context": "if ( instanceType . isPROXY ( ) && managedMethod == null ) {"
        },
        {
            "Word": "managedMethod",
            "WordID": "14",
            "SentID": 4131,
            "TokenID": "0",
            "Context": "managedMethod . setTransactional ( true ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "15",
            "SentID": 4132,
            "TokenID": "0",
            "Context": "managedMethod . setImmutable ( immutable ) ;"
        },
        {
            "Word": "asynchronousMethod",
            "WordID": "2",
            "SentID": 4134,
            "TokenID": "2",
            "Context": "if ( asynchronousMethod ) {"
        },
        {
            "Word": "managedMethod",
            "WordID": "16",
            "SentID": 4136,
            "TokenID": "0",
            "Context": "managedMethod . setAsynchronous ( asynchronousMethod ) ;"
        },
        {
            "Word": "asynchronousMethod",
            "WordID": "3",
            "SentID": 4136,
            "TokenID": "4",
            "Context": "managedMethod . setAsynchronous ( asynchronousMethod ) ;"
        },
        {
            "Word": "cronMethod",
            "WordID": "2",
            "SentID": 4138,
            "TokenID": "2",
            "Context": "if ( cronMethod != null ) {"
        },
        {
            "Word": "managedMethod",
            "WordID": "17",
            "SentID": 4140,
            "TokenID": "0",
            "Context": "managedMethod . setCronExpression ( cronMethod . value ( ) ) ;"
        },
        {
            "Word": "cronMethod",
            "WordID": "3",
            "SentID": 4140,
            "TokenID": "4",
            "Context": "managedMethod . setCronExpression ( cronMethod . value ( ) ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "18",
            "SentID": 4141,
            "TokenID": "4",
            "Context": "cronMethodsPool . add ( managedMethod ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "19",
            "SentID": 4143,
            "TokenID": "2",
            "Context": "if ( managedMethod != null ) {"
        },
        {
            "Word": "interfaceMethod",
            "WordID": "4",
            "SentID": 4144,
            "TokenID": "4",
            "Context": "methodsPool . put ( interfaceMethod , managedMethod ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "20",
            "SentID": 4144,
            "TokenID": "6",
            "Context": "methodsPool . put ( interfaceMethod , managedMethod ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "21",
            "SentID": 4145,
            "TokenID": "2",
            "Context": "if ( managedMethod . isRemotelyAccessible ( ) && netMethodsPool . put ( method . getName ( ) , managedMethod ) != null ) {"
        },
        {
            "Word": "method",
            "WordID": "22",
            "SentID": 4145,
            "TokenID": "12",
            "Context": "if ( managedMethod . isRemotelyAccessible ( ) && netMethodsPool . put ( method . getName ( ) , managedMethod ) != null ) {"
        },
        {
            "Word": "managedMethod",
            "WordID": "22",
            "SentID": 4145,
            "TokenID": "18",
            "Context": "if ( managedMethod . isRemotelyAccessible ( ) && netMethodsPool . put ( method . getName ( ) , managedMethod ) != null ) {"
        },
        {
            "Word": "method",
            "WordID": "24",
            "SentID": 4251,
            "TokenID": "3",
            "Context": "T annotation = method . getAnnotation ( annotationClass ) ;"
        },
        {
            "Word": "method",
            "WordID": "25",
            "SentID": 4252,
            "TokenID": "8",
            "Context": "for ( Class < ? > interfaceClass : method . getDeclaringClass ( ) . getInterfaces ( ) ) {"
        },
        {
            "Word": "getMethod",
            "WordID": "6",
            "SentID": 4253,
            "TokenID": "4",
            "Context": "annotation = interfaceClass . getMethod ( method . getName ( ) , method . getParameterTypes ( ) ) . getAnnotation ( annotationClass ) ;"
        },
        {
            "Word": "getInterfaceMethod",
            "WordID": "2",
            "SentID": 4255,
            "TokenID": "4",
            "Context": "} private static Method getInterfaceMethod ( Method method ) {"
        },
        {
            "Word": "getMethod",
            "WordID": "7",
            "SentID": 4256,
            "TokenID": "3",
            "Context": "return interfaceClass . getMethod ( method . getName ( ) , method . getParameterTypes ( ) ) ;"
        },
        {
            "Word": "allowedMethods",
            "WordID": "1",
            "SentID": 4410,
            "TokenID": "0",
            "Context": "allowedMethods = unmodifiableSet ( stream ( response . getHeaders ( \"Allow\" ) )"
        },
        {
            "Word": "method",
            "WordID": "33",
            "SentID": 4414,
            "TokenID": "9",
            "Context": "} protected Optional < Boolean > isMethodAllowed ( String method ) {"
        },
        {
            "Word": "method",
            "WordID": "37",
            "SentID": 4663,
            "TokenID": "8",
            "Context": "public Object invoke ( Object proxy , Method method , Object [ ] args ) throws Throwable {"
        },
        {
            "Word": "method",
            "WordID": "38",
            "SentID": 4665,
            "TokenID": "1",
            "Context": "return method . invoke ( instance , args ) ;"
        },
        {
            "Word": "ManagedMethod",
            "WordID": "4",
            "SentID": 4707,
            "TokenID": "6",
            "Context": "invocationMeters . add ( ( ( ManagedMethod ) managedMethod ) . getMeter ( ) ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "23",
            "SentID": 4707,
            "TokenID": "8",
            "Context": "invocationMeters . add ( ( ( ManagedMethod ) managedMethod ) . getMeter ( ) ) ;"
        },
        {
            "Word": "getWriteMethod",
            "WordID": "1",
            "SentID": 4886,
            "TokenID": "4",
            "Context": "if ( property . getWriteMethod ( ) == null ) {"
        },
        {
            "Word": "managedMethod",
            "WordID": "24",
            "SentID": 4966,
            "TokenID": "8",
            "Context": "} public Object [ ] preProcessArguments ( ManagedMethodSPI managedMethod , Object ... args ) {"
        },
        {
            "Word": "managedMethod",
            "WordID": "25",
            "SentID": 4967,
            "TokenID": "4",
            "Context": "final ManagedClassSPI managedClass = managedMethod . getDeclaringClass ( ) ;"
        },
        {
            "Word": "managedMethod",
            "WordID": "26",
            "SentID": 4968,
            "TokenID": "4",
            "Context": "final Method method = managedMethod . getMethod ( ) ;"
        },
        {
            "Word": "getMethod",
            "WordID": "10",
            "SentID": 4968,
            "TokenID": "6",
            "Context": "final Method method = managedMethod . getMethod ( ) ;"
        },
        {
            "Labels": [
                "\"Method Retrieval and Management in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Method",
            "Semantic": "Network",
            "Syntactic": "Object, Method",
            "Description": "Objects and methods with \"method\" as a substring, often related to network",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Syntactic",
            "Q6_Answer": "None"
        }
    ],
    "211": [
        {
            "Word": "getClass",
            "WordID": "1",
            "SentID": 1172,
            "TokenID": "2",
            "Context": "objWithKeyParam . getClass ( ) ,"
        },
        {
            "Word": "getClass",
            "WordID": "2",
            "SentID": 2842,
            "TokenID": "10",
            "Context": "( returnedObj == null ) ? null : returnedObj . getClass ( ) . getName ( ) ) + \"'.\" ,"
        },
        {
            "Word": "clazz",
            "WordID": "2",
            "SentID": 3684,
            "TokenID": "9",
            "Context": "return extensionContext . getStore ( namespace ( extensionContext , clazz ) ) ;"
        },
        {
            "Word": "clazz",
            "WordID": "4",
            "SentID": 3687,
            "TokenID": "7",
            "Context": "return ExtensionContext . Namespace . create ( clazz , extensionContext ) ;"
        },
        {
            "Word": "getRequiredTestClass",
            "WordID": "1",
            "SentID": 3690,
            "TokenID": "4",
            "Context": "getSystemProperties ( extensionContext . getRequiredTestClass ( ) ) ;"
        },
        {
            "Word": "getClass",
            "WordID": "3",
            "SentID": 3801,
            "TokenID": "10",
            "Context": "System . out . println ( \"analyzer=\" + analyzer . getClass ( ) . getName ( ) ) ;"
        },
        {
            "Word": "setDriverClass",
            "WordID": "1",
            "SentID": 3938,
            "TokenID": "2",
            "Context": "dataSource . setDriverClass ( ( Class < Driver > ) Class . forName ( driverClassName ) ) ;"
        },
        {
            "Word": "getDeclaringClass",
            "WordID": "1",
            "SentID": 4000,
            "TokenID": "9",
            "Context": "Object instance = container . getInstance ( method . getDeclaringClass ( ) ) ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "1",
            "SentID": 4064,
            "TokenID": "5",
            "Context": "Controller controllerAnnotation = getAnnotation ( implementationClass , Controller . class ) ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "2",
            "SentID": 4068,
            "TokenID": "5",
            "Context": "Service serviceAnnotation = getAnnotation ( implementationClass , Service . class ) ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "3",
            "SentID": 4071,
            "TokenID": "5",
            "Context": "Remote remoteAnnotation = getAnnotation ( implementationClass , Remote . class ) ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "4",
            "SentID": 4073,
            "TokenID": "5",
            "Context": "RequestPath requestPathAnnotation = getAnnotation ( implementationClass , RequestPath . class ) ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "5",
            "SentID": 4080,
            "TokenID": "5",
            "Context": "boolean transactionalType = hasAnnotation ( implementationClass , Transactional . class ) ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "6",
            "SentID": 4081,
            "TokenID": "5",
            "Context": "boolean immutableType = hasAnnotation ( implementationClass , Immutable . class ) ;"
        },
        {
            "Word": "getInterceptorClass",
            "WordID": "1",
            "SentID": 4084,
            "TokenID": "8",
            "Context": "Class < ? extends Interceptor > classInterceptor = getInterceptorClass ( implementationClass ) ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "7",
            "SentID": 4084,
            "TokenID": "10",
            "Context": "Class < ? extends Interceptor > classInterceptor = getInterceptorClass ( implementationClass ) ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "8",
            "SentID": 4085,
            "TokenID": "5",
            "Context": "boolean publicType = hasAnnotation ( implementationClass , Public . class ) ;"
        },
        {
            "Word": "getInterceptorClass",
            "WordID": "2",
            "SentID": 4097,
            "TokenID": "8",
            "Context": "Class < ? extends Interceptor > methodInterceptor = getInterceptorClass ( method ) ;"
        },
        {
            "Word": "loadImplementationClass",
            "WordID": "1",
            "SentID": 4150,
            "TokenID": "6",
            "Context": "} private Class < ? > loadImplementationClass ( Config descriptor ) throws ConfigException {"
        },
        {
            "Word": "implementationClass",
            "WordID": "11",
            "SentID": 4155,
            "TokenID": "4",
            "Context": "Class < ? > implementationClass = Classes . forOptionalName ( implementationName ) ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "14",
            "SentID": 4158,
            "TokenID": "3",
            "Context": "int implementationModifiers = implementationClass . getModifiers ( ) ;"
        },
        {
            "Word": "interfaceClass",
            "WordID": "6",
            "SentID": 4185,
            "TokenID": "5",
            "Context": "interfaceClasses [ i ] = interfaceClass ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "20",
            "SentID": 4199,
            "TokenID": "13",
            "Context": "} private static Constructor < ? > getDeclaredConstructor ( Class < ? > implementationClass ) {"
        },
        {
            "Word": "clazz",
            "WordID": "6",
            "SentID": 4213,
            "TokenID": "5",
            "Context": "for ( Field field : clazz . getDeclaredFields ( ) ) {"
        },
        {
            "Word": "implementationClass",
            "WordID": "22",
            "SentID": 4224,
            "TokenID": "7",
            "Context": "Field field = Classes . getOptionalField ( implementationClass , fieldName ) ;"
        },
        {
            "Word": "implementationClass",
            "WordID": "24",
            "SentID": 4234,
            "TokenID": "4",
            "Context": "builder . append ( implementationClass . getName ( ) ) ;"
        },
        {
            "Word": "interfaceClass",
            "WordID": "8",
            "SentID": 4236,
            "TokenID": "4",
            "Context": "builder . append ( interfaceClass . getName ( ) ) ;"
        },
        {
            "Word": "annotationClass",
            "WordID": "1",
            "SentID": 4242,
            "TokenID": "21",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Class < ? > clazz , Class < T > annotationClass ) {"
        },
        {
            "Word": "clazz",
            "WordID": "8",
            "SentID": 4243,
            "TokenID": "3",
            "Context": "T annotation = clazz . getAnnotation ( annotationClass ) ;"
        },
        {
            "Word": "clazz",
            "WordID": "9",
            "SentID": 4244,
            "TokenID": "8",
            "Context": "for ( Class < ? > interfaceClass : clazz . getInterfaces ( ) ) {"
        },
        {
            "Word": "interfaceClass",
            "WordID": "10",
            "SentID": 4245,
            "TokenID": "2",
            "Context": "annotation = interfaceClass . getAnnotation ( annotationClass ) ;"
        },
        {
            "Word": "annotationClass",
            "WordID": "4",
            "SentID": 4248,
            "TokenID": "18",
            "Context": "} private static boolean hasAnnotation ( Class < ? > clazz , Class < ? extends Annotation > annotationClass ) {"
        },
        {
            "Word": "clazz",
            "WordID": "11",
            "SentID": 4249,
            "TokenID": "3",
            "Context": "Annotation annotation = clazz . getAnnotation ( annotationClass ) ;"
        },
        {
            "Word": "annotationClass",
            "WordID": "6",
            "SentID": 4250,
            "TokenID": "18",
            "Context": "} private static < T extends Annotation > T getAnnotation ( Method method , Class < T > annotationClass ) {"
        },
        {
            "Word": "getDeclaringClass",
            "WordID": "2",
            "SentID": 4252,
            "TokenID": "10",
            "Context": "for ( Class < ? > interfaceClass : method . getDeclaringClass ( ) . getInterfaces ( ) ) {"
        },
        {
            "Word": "interfaceClass",
            "WordID": "12",
            "SentID": 4253,
            "TokenID": "2",
            "Context": "annotation = interfaceClass . getMethod ( method . getName ( ) , method . getParameterTypes ( ) ) . getAnnotation ( annotationClass ) ;"
        },
        {
            "Word": "interfaceClass",
            "WordID": "13",
            "SentID": 4256,
            "TokenID": "1",
            "Context": "return interfaceClass . getMethod ( method . getName ( ) , method . getParameterTypes ( ) ) ;"
        },
        {
            "Word": "getInterceptorClass",
            "WordID": "3",
            "SentID": 4257,
            "TokenID": "9",
            "Context": "} private static Class < ? extends Interceptor > getInterceptorClass ( Class < ? > clazz ) {"
        },
        {
            "Word": "clazz",
            "WordID": "13",
            "SentID": 4258,
            "TokenID": "5",
            "Context": "Intercepted intercepted = getAnnotation ( clazz , Intercepted . class ) ;"
        },
        {
            "Word": "getInterceptorClass",
            "WordID": "4",
            "SentID": 4260,
            "TokenID": "9",
            "Context": "} private static Class < ? extends Interceptor > getInterceptorClass ( Method method ) {"
        },
        {
            "Word": "stackTraceClass",
            "WordID": "2",
            "SentID": 4282,
            "TokenID": "4",
            "Context": "builder . append ( stackTraceClass . getName ( ) ) ;"
        },
        {
            "Word": "getManagedClass",
            "WordID": "1",
            "SentID": 4287,
            "TokenID": "5",
            "Context": "ManagedClassSPI dependencyManagedClass = container . getManagedClass ( type ) ;"
        },
        {
            "Word": "hostManagedClass",
            "WordID": "3",
            "SentID": 4288,
            "TokenID": "4",
            "Context": "if ( isProxyRequired ( hostManagedClass , dependencyManagedClass ) ) {"
        },
        {
            "Word": "dependencyManagedClass",
            "WordID": "2",
            "SentID": 4288,
            "TokenID": "6",
            "Context": "if ( isProxyRequired ( hostManagedClass , dependencyManagedClass ) ) {"
        },
        {
            "Word": "getImplementationClass",
            "WordID": "1",
            "SentID": 4290,
            "TokenID": "7",
            "Context": "return Proxy . newProxyInstance ( dependencyManagedClass . getImplementationClass ( ) . getClassLoader ( ) , dependencyManagedClass . getInterfaceClasses ( ) , handler ) ;"
        },
        {
            "Word": "getInterfaceClass",
            "WordID": "1",
            "SentID": 4423,
            "TokenID": "19",
            "Context": "return getRemoteInstance ( managedClass . getImplementationURL ( ) , ( Class < ? super T > ) managedClass . getInterfaceClass ( ) ) ;"
        },
        {
            "Word": "interfaceClass",
            "WordID": "14",
            "SentID": 4424,
            "TokenID": "16",
            "Context": "public < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) throws UnsupportedProtocolException {"
        },
        {
            "Word": "interfaceClass",
            "WordID": "16",
            "SentID": 4460,
            "TokenID": "1",
            "Context": "String interfaceClass = classDescriptor . getAttribute ( \"interface\" ) ;"
        },
        {
            "Word": "ManagedClass",
            "WordID": "1",
            "SentID": 4467,
            "TokenID": "0",
            "Context": "ManagedClass managedClass = new ManagedClass ( this , classDescriptor ) ;"
        },
        {
            "Word": "ManagedClass",
            "WordID": "2",
            "SentID": 4467,
            "TokenID": "4",
            "Context": "ManagedClass managedClass = new ManagedClass ( this , classDescriptor ) ;"
        },
        {
            "Word": "interfaceClass",
            "WordID": "19",
            "SentID": 4469,
            "TokenID": "4",
            "Context": "classesPool . put ( interfaceClass , managedClass ) ;"
        },
        {
            "Word": "managedClass",
            "WordID": "12",
            "SentID": 4469,
            "TokenID": "6",
            "Context": "classesPool . put ( interfaceClass , managedClass ) ;"
        },
        {
            "Word": "postProcessClass",
            "WordID": "1",
            "SentID": 4471,
            "TokenID": "2",
            "Context": "classProcessor . postProcessClass ( managedClass ) ;"
        },
        {
            "Word": "managedClass",
            "WordID": "13",
            "SentID": 4471,
            "TokenID": "4",
            "Context": "classProcessor . postProcessClass ( managedClass ) ;"
        },
        {
            "Word": "getImplementationClass",
            "WordID": "2",
            "SentID": 4475,
            "TokenID": "12",
            "Context": "if ( appContext != null && Types . isKindOf ( appContext . getImplementationClass ( ) , ContainerSPI . class ) ) {"
        },
        {
            "Word": "managedClass",
            "WordID": "16",
            "SentID": 4483,
            "TokenID": "4",
            "Context": "sortedClasses . add ( managedClass ) ;"
        },
        {
            "Word": "getInterfaceClass",
            "WordID": "2",
            "SentID": 4485,
            "TokenID": "12",
            "Context": "getInstance ( ( Class < ? super Object > ) managedClass . getInterfaceClass ( ) ) ;"
        },
        {
            "Word": "getImplementationClass",
            "WordID": "3",
            "SentID": 4489,
            "TokenID": "8",
            "Context": "if ( Types . isKindOf ( managedClass . getImplementationClass ( ) , ManagedPreDestroy . class ) ) {"
        },
        {
            "Word": "interfaceClass",
            "WordID": "20",
            "SentID": 4502,
            "TokenID": "13",
            "Context": "public < T > T getInstance ( Class < ? super T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "interfaceClass",
            "WordID": "21",
            "SentID": 4503,
            "TokenID": "7",
            "Context": "ManagedClassSPI managedClass = classesPool . get ( interfaceClass ) ;"
        },
        {
            "Word": "managedClass",
            "WordID": "24",
            "SentID": 4505,
            "TokenID": "3",
            "Context": "return getInstance ( managedClass , instanceKey , args ) ;"
        },
        {
            "Word": "managedClass",
            "WordID": "27",
            "SentID": 4508,
            "TokenID": "6",
            "Context": "args = argumentsProcessor . preProcessArguments ( managedClass , args ) ;"
        },
        {
            "Word": "managedClass",
            "WordID": "28",
            "SentID": 4509,
            "TokenID": "5",
            "Context": "return instanceFactory . newInstance ( managedClass , args ) ;"
        },
        {
            "Word": "managedClass",
            "WordID": "29",
            "SentID": 4515,
            "TokenID": "6",
            "Context": "instance = instanceFactory . newInstance ( managedClass , args ) ;"
        },
        {
            "Word": "converterClass",
            "WordID": "1",
            "SentID": 4535,
            "TokenID": "6",
            "Context": "Class < ? extends Converter > converterClass = Classes . forOptionalName ( converterName ) ;"
        },
        {
            "Word": "pojoClass",
            "WordID": "1",
            "SentID": 4545,
            "TokenID": "4",
            "Context": "Class < ? > pojoClass = Classes . forOptionalName ( pojoClassName ) ;"
        },
        {
            "Word": "pojoClass",
            "WordID": "3",
            "SentID": 4551,
            "TokenID": "7",
            "Context": "Field staticField = Classes . getOptionalField ( pojoClass , fieldName ) ;"
        },
        {
            "Word": "managedClass",
            "WordID": "32",
            "SentID": 4558,
            "TokenID": "10",
            "Context": "Classes . setFieldValue ( instance , dependency , getDependencyValue ( managedClass , dependency . getType ( ) ) ) ;"
        },
        {
            "Word": "valueType",
            "WordID": "4",
            "SentID": 4621,
            "TokenID": "14",
            "Context": "public < T > T asObject ( String string , Class < T > valueType ) {"
        },
        {
            "Word": "valueType",
            "WordID": "5",
            "SentID": 4652,
            "TokenID": "14",
            "Context": "public < T > T asObject ( String string , Class < T > valueType ) throws IllegalArgumentException , ConverterException {"
        },
        {
            "Word": "interfaceClass",
            "WordID": "22",
            "SentID": 4664,
            "TokenID": "7",
            "Context": "T instance = appFactory . getInstance ( interfaceClass ) ;"
        },
        {
            "Word": "getImplementationClass",
            "WordID": "4",
            "SentID": 4830,
            "TokenID": "6",
            "Context": "final ClassLoader classLoader = managedClass . getImplementationClass ( ) . getClassLoader ( ) ;"
        },
        {
            "Word": "interfaceClass",
            "WordID": "23",
            "SentID": 4841,
            "TokenID": "13",
            "Context": "} public static < T > T getInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "interfaceClass",
            "WordID": "25",
            "SentID": 4843,
            "TokenID": "16",
            "Context": "} public static < T > T getInstance ( String instanceName , Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "interfaceClass",
            "WordID": "27",
            "SentID": 4845,
            "TokenID": "13",
            "Context": "} public static < T > T getOptionalInstance ( Class < T > interfaceClass , Object ... args ) {"
        },
        {
            "Word": "interfaceClass",
            "WordID": "29",
            "SentID": 4847,
            "TokenID": "18",
            "Context": "} public static < T > T getRemoteInstance ( String implementationURL , Class < ? super T > interfaceClass ) {"
        },
        {
            "Word": "getImplementationClass",
            "WordID": "5",
            "SentID": 4962,
            "TokenID": "4",
            "Context": "if ( managedClass . getImplementationClass ( ) == null ) {"
        },
        {
            "Word": "managedClass",
            "WordID": "44",
            "SentID": 4965,
            "TokenID": "3",
            "Context": "return preProcessArguments ( managedClass , constructor , types , args ) ;"
        },
        {
            "Word": "getDeclaringClass",
            "WordID": "3",
            "SentID": 4967,
            "TokenID": "6",
            "Context": "final ManagedClassSPI managedClass = managedMethod . getDeclaringClass ( ) ;"
        },
        {
            "Word": "managedClass",
            "WordID": "46",
            "SentID": 4970,
            "TokenID": "3",
            "Context": "return preProcessArguments ( managedClass , method , types , args ) ;"
        },
        {
            "Word": "managedClass",
            "WordID": "48",
            "SentID": 4974,
            "TokenID": "7",
            "Context": "args [ i ] = getDependencyValue ( managedClass , formalParameters [ i ] ) ;"
        },
        {
            "Labels": [
                "\"Class Manipulation and Management in Java Programming\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Class",
            "Syntactic": "variables, methods",
            "Semantic": "Class Manipulation, Class Management",
            "Description": "Variables and Methods containing the substring \"Class\" used for class management and class manipulation",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "1": [
        {
            "Word": "initNewRequest",
            "WordID": "1",
            "SentID": 1249,
            "TokenID": "5",
            "Context": "String uniqueReqId = this . initNewRequest ( ) ;"
        },
        {
            "Word": "initNewRequest",
            "WordID": "2",
            "SentID": 2720,
            "TokenID": "4",
            "Context": "} public synchronized String initNewRequest ( ) {"
        },
        {
            "Word": "request",
            "WordID": "3",
            "SentID": 3774,
            "TokenID": "7",
            "Context": "return PageUtils . findAllowRobots ( servletContext , request , response , page ) ;"
        },
        {
            "Word": "response",
            "WordID": "2",
            "SentID": 3774,
            "TokenID": "9",
            "Context": "return PageUtils . findAllowRobots ( servletContext , request , response , page ) ;"
        },
        {
            "Word": "handleRequest",
            "WordID": "1",
            "SentID": 3990,
            "TokenID": "2",
            "Context": "protected void handleRequest ( RequestContext context ) throws IOException {"
        },
        {
            "Word": "getRequest",
            "WordID": "1",
            "SentID": 3991,
            "TokenID": "5",
            "Context": "HttpServletRequest httpRequest = context . getRequest ( ) ;"
        },
        {
            "Word": "getResponse",
            "WordID": "1",
            "SentID": 3992,
            "TokenID": "5",
            "Context": "HttpServletResponse httpResponse = context . getResponse ( ) ;"
        },
        {
            "Word": "sendBadRequest",
            "WordID": "1",
            "SentID": 4005,
            "TokenID": "0",
            "Context": "sendBadRequest ( context ) ;"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "3",
            "SentID": 4012,
            "TokenID": "4",
            "Context": "httpResponse . setStatus ( HttpServletResponse . SC_NO_CONTENT ) ;"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "4",
            "SentID": 4014,
            "TokenID": "4",
            "Context": "httpResponse . setStatus ( HttpServletResponse . SC_OK ) ;"
        },
        {
            "Word": "request",
            "WordID": "5",
            "SentID": 4329,
            "TokenID": "5",
            "Context": "HttpResponse response = execute ( request ) ;"
        },
        {
            "Word": "response",
            "WordID": "4",
            "SentID": 4330,
            "TokenID": "2",
            "Context": "handleResponse ( response , request ) ;"
        },
        {
            "Word": "request",
            "WordID": "6",
            "SentID": 4330,
            "TokenID": "4",
            "Context": "handleResponse ( response , request ) ;"
        },
        {
            "Word": "request",
            "WordID": "9",
            "SentID": 4333,
            "TokenID": "5",
            "Context": "return executor . execute ( request ) . returnResponse ( ) ;"
        },
        {
            "Word": "response",
            "WordID": "6",
            "SentID": 4335,
            "TokenID": "2",
            "Context": "handleLinks ( response ) ;"
        },
        {
            "Word": "response",
            "WordID": "7",
            "SentID": 4336,
            "TokenID": "2",
            "Context": "handleCapabilities ( response ) ;"
        },
        {
            "Word": "response",
            "WordID": "8",
            "SentID": 4337,
            "TokenID": "2",
            "Context": "handleErrors ( response , request ) ;"
        },
        {
            "Word": "request",
            "WordID": "11",
            "SentID": 4337,
            "TokenID": "4",
            "Context": "handleErrors ( response , request ) ;"
        },
        {
            "Word": "response",
            "WordID": "10",
            "SentID": 4339,
            "TokenID": "3",
            "Context": "StatusLine statusLine = response . getStatusLine ( ) ;"
        },
        {
            "Word": "response",
            "WordID": "11",
            "SentID": 4341,
            "TokenID": "3",
            "Context": "HttpEntity entity = response . getEntity ( ) ;"
        },
        {
            "Word": "SC_BAD_REQUEST",
            "WordID": "1",
            "SentID": 4354,
            "TokenID": "3",
            "Context": "case HttpStatus . SC_BAD_REQUEST :"
        },
        {
            "Word": "response",
            "WordID": "13",
            "SentID": 4372,
            "TokenID": "2",
            "Context": "handleHeaderLinks ( response , links , linkTemplates ) ;"
        },
        {
            "Word": "response",
            "WordID": "15",
            "SentID": 4378,
            "TokenID": "2",
            "Context": "getLinkHeaders ( response ) . forEach ( header -> {"
        },
        {
            "Word": "response",
            "WordID": "20",
            "SentID": 4618,
            "TokenID": "0",
            "Context": "response . getElements ( ) . stream ( ) . forEach ( observer :: onNext ) ;"
        },
        {
            "Word": "response",
            "WordID": "21",
            "SentID": 4619,
            "TokenID": "2",
            "Context": "if ( response . isEndReached ( ) ) {"
        },
        {
            "Word": "response",
            "WordID": "22",
            "SentID": 4620,
            "TokenID": "2",
            "Context": "currentStartIndex = response . getTo ( ) + 1 ;"
        },
        {
            "Word": "httpRequest",
            "WordID": "19",
            "SentID": 4666,
            "TokenID": "6",
            "Context": "} public void attach ( HttpServletRequest httpRequest , HttpServletResponse httpResponse ) {"
        },
        {
            "Word": "httpResponse",
            "WordID": "9",
            "SentID": 4666,
            "TokenID": "9",
            "Context": "} public void attach ( HttpServletRequest httpRequest , HttpServletResponse httpResponse ) {"
        },
        {
            "Word": "httpRequest",
            "WordID": "22",
            "SentID": 4672,
            "TokenID": "2",
            "Context": "requestPath = httpRequest . getRequestURI ( ) . substring ( httpRequest . getContextPath ( ) . length ( ) ) ;"
        },
        {
            "Word": "httpRequest",
            "WordID": "23",
            "SentID": 4672,
            "TokenID": "10",
            "Context": "requestPath = httpRequest . getRequestURI ( ) . substring ( httpRequest . getContextPath ( ) . length ( ) ) ;"
        },
        {
            "Word": "httpRequest",
            "WordID": "26",
            "SentID": 4685,
            "TokenID": "5",
            "Context": "cookies = new Cookies ( httpRequest , httpResponse ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "12",
            "SentID": 4685,
            "TokenID": "7",
            "Context": "cookies = new Cookies ( httpRequest , httpResponse ) ;"
        },
        {
            "Word": "httpRequest",
            "WordID": "35",
            "SentID": 4747,
            "TokenID": "5",
            "Context": "protected void service ( HttpServletRequest httpRequest , HttpServletResponse httpResponse ) throws IOException , ServletException {"
        },
        {
            "Word": "httpResponse",
            "WordID": "13",
            "SentID": 4747,
            "TokenID": "8",
            "Context": "protected void service ( HttpServletRequest httpRequest , HttpServletResponse httpResponse ) throws IOException , ServletException {"
        },
        {
            "Word": "httpRequest",
            "WordID": "36",
            "SentID": 4748,
            "TokenID": "6",
            "Context": "logContext . put ( LOG_CONTEXT_APP , httpRequest . getContextPath ( ) . isEmpty ( ) ? TinyContainer . ROOT_CONTEXT : httpRequest . getContextPath ( ) . substring ( 1 ) ) ;"
        },
        {
            "Word": "httpRequest",
            "WordID": "37",
            "SentID": 4748,
            "TokenID": "20",
            "Context": "logContext . put ( LOG_CONTEXT_APP , httpRequest . getContextPath ( ) . isEmpty ( ) ? TinyContainer . ROOT_CONTEXT : httpRequest . getContextPath ( ) . substring ( 1 ) ) ;"
        },
        {
            "Word": "httpRequest",
            "WordID": "41",
            "SentID": 4755,
            "TokenID": "4",
            "Context": "context . attach ( httpRequest , httpResponse ) ;"
        },
        {
            "Word": "httpResponse",
            "WordID": "14",
            "SentID": 4755,
            "TokenID": "6",
            "Context": "context . attach ( httpRequest , httpResponse ) ;"
        },
        {
            "Word": "handleRequest",
            "WordID": "2",
            "SentID": 4756,
            "TokenID": "0",
            "Context": "handleRequest ( context ) ;"
        },
        {
            "Word": "getResponse",
            "WordID": "2",
            "SentID": 4775,
            "TokenID": "6",
            "Context": "final HttpServletResponse httpResponse = context . getResponse ( ) ;"
        },
        {
            "Word": "getRequest",
            "WordID": "2",
            "SentID": 4778,
            "TokenID": "8",
            "Context": "if ( HttpHeader . isXHR ( context . getRequest ( ) ) && loginPage != null ) {"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "9",
            "SentID": 4780,
            "TokenID": "4",
            "Context": "httpResponse . setStatus ( HttpServletResponse . SC_UNAUTHORIZED ) ;"
        },
        {
            "Word": "sendBadRequest",
            "WordID": "2",
            "SentID": 4781,
            "TokenID": "4",
            "Context": "} protected static void sendBadRequest ( RequestContext context ) throws IOException {"
        },
        {
            "Word": "getResponse",
            "WordID": "3",
            "SentID": 4783,
            "TokenID": "2",
            "Context": "context . getResponse ( ) . sendError ( HttpServletResponse . SC_BAD_REQUEST , context . getRequestURI ( ) ) ;"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "10",
            "SentID": 4783,
            "TokenID": "8",
            "Context": "context . getResponse ( ) . sendError ( HttpServletResponse . SC_BAD_REQUEST , context . getRequestURI ( ) ) ;"
        },
        {
            "Word": "SC_BAD_REQUEST",
            "WordID": "2",
            "SentID": 4783,
            "TokenID": "10",
            "Context": "context . getResponse ( ) . sendError ( HttpServletResponse . SC_BAD_REQUEST , context . getRequestURI ( ) ) ;"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "11",
            "SentID": 4785,
            "TokenID": "10",
            "Context": "sendJsonObject ( context , new RemoteException ( exception ) , HttpServletResponse . SC_NOT_FOUND ) ;"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "12",
            "SentID": 4791,
            "TokenID": "6",
            "Context": "sendJsonObject ( context , throwable , HttpServletResponse . SC_BAD_REQUEST ) ;"
        },
        {
            "Word": "SC_BAD_REQUEST",
            "WordID": "3",
            "SentID": 4791,
            "TokenID": "8",
            "Context": "sendJsonObject ( context , throwable , HttpServletResponse . SC_BAD_REQUEST ) ;"
        },
        {
            "Word": "HttpServletResponse",
            "WordID": "13",
            "SentID": 4793,
            "TokenID": "10",
            "Context": "sendJsonObject ( context , new RemoteException ( throwable ) , HttpServletResponse . SC_INTERNAL_SERVER_ERROR ) ;"
        },
        {
            "Word": "response",
            "WordID": "24",
            "SentID": 4834,
            "TokenID": "3",
            "Context": "return stream ( response . getHeaders ( \"Link\" ) )"
        },
        {
            "Labels": [
                "\"HTTP Request and Response Handling\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "Response, Request",
            "Semantic": "Network",
            "Syntactic": "variables",
            "Description": "variables containing \"Response\" or \"Request\" as substrings, often related to network",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Semantic",
            "Q6_Answer": "None"
        }
    ],
    "499": [
        {
            "Word": "UUID",
            "WordID": "1",
            "SentID": 1258,
            "TokenID": "4",
            "Context": "listingToSend . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "randomUUID",
            "WordID": "1",
            "SentID": 1258,
            "TokenID": "6",
            "Context": "listingToSend . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "TimeUnit",
            "WordID": "1",
            "SentID": 1266,
            "TokenID": "6",
            "Context": "this . getTimeoutInMillis ( ) , TimeUnit . MILLISECONDS ) ;"
        },
        {
            "Word": "UUID",
            "WordID": "2",
            "SentID": 1464,
            "TokenID": "7",
            "Context": "formsToFetchForLocalCacheArr [ index ] . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "randomUUID",
            "WordID": "2",
            "SentID": 1464,
            "TokenID": "9",
            "Context": "formsToFetchForLocalCacheArr [ index ] . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "TimeUnit",
            "WordID": "2",
            "SentID": 1595,
            "TokenID": "9",
            "Context": "return this . login ( usernameParam , passwordParam , TimeUnit . HOURS . toSeconds ( 9 ) ) ;"
        },
        {
            "Word": "UUID",
            "WordID": "3",
            "SentID": 2235,
            "TokenID": "4",
            "Context": "itemToSend . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "randomUUID",
            "WordID": "3",
            "SentID": 2235,
            "TokenID": "6",
            "Context": "itemToSend . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "TimeUnit",
            "WordID": "3",
            "SentID": 2576,
            "TokenID": "0",
            "Context": "TimeUnit . MINUTES . toMillis ( 10 ) ) ;"
        },
        {
            "Word": "TimeUnit",
            "WordID": "4",
            "SentID": 2645,
            "TokenID": "6",
            "Context": "System . currentTimeMillis ( ) - TimeUnit . DAYS . toMillis ( 7 )"
        },
        {
            "Word": "UUID",
            "WordID": "4",
            "SentID": 2721,
            "TokenID": "3",
            "Context": "String returnVal = UUID . randomUUID ( ) . toString ( ) ;"
        },
        {
            "Word": "randomUUID",
            "WordID": "4",
            "SentID": 2721,
            "TokenID": "5",
            "Context": "String returnVal = UUID . randomUUID ( ) . toString ( ) ;"
        },
        {
            "Word": "UUID",
            "WordID": "5",
            "SentID": 2745,
            "TokenID": "4",
            "Context": "baseToSetEchoOnIfNotSetParam . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "randomUUID",
            "WordID": "5",
            "SentID": 2745,
            "TokenID": "6",
            "Context": "baseToSetEchoOnIfNotSetParam . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "UUID",
            "WordID": "6",
            "SentID": 3314,
            "TokenID": "4",
            "Context": "formToCreateParam . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "randomUUID",
            "WordID": "6",
            "SentID": 3314,
            "TokenID": "6",
            "Context": "formToCreateParam . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ;"
        },
        {
            "Word": "TimeUnit",
            "WordID": "5",
            "SentID": 4717,
            "TokenID": "11",
            "Context": "if ( ! eventsQueue . offer ( event , EVENTS_QUEUE_PUSH_TIMEOUT , TimeUnit . MILLISECONDS ) ) {"
        },
        {
            "Word": "TimeUnit",
            "WordID": "6",
            "SentID": 4726,
            "TokenID": "8",
            "Context": "event = eventsQueue . poll ( keepAlivePeriod , TimeUnit . MILLISECONDS ) ;"
        },
        {
            "Word": "Unit",
            "WordID": "1",
            "SentID": 4862,
            "TokenID": "8",
            "Context": "filterField . setWidth ( 100 , Sizeable . Unit . PERCENTAGE ) ;"
        },
        {
            "Word": "Unit",
            "WordID": "2",
            "SentID": 4888,
            "TokenID": "6",
            "Context": "component . setWidth ( 100 , Unit . PERCENTAGE ) ;"
        },
        {
            "Labels": [
                "\"Generating Random UUID and Time Unit Manipulation in Java\""
            ],
            "Meaningful": "Yes",
            "Lexicographic": "UUID, Unit, Time, Random",
            "Semantic": "Parameters, Setters",
            "Syntactic": "Objects",
            "Description": "Objects containing substrings of \"UUID\", \"Unit\", \"Time\",  or \"Random\" as substrings. Many are having setters called on them.",
            "Q1_Answer": "Acceptable",
            "Q2_Answer": "Precise",
            "Q3_Answer": "Superior",
            "Q4_Answer": "",
            "Q5_Answer": "Lexicographic",
            "Q6_Answer": "None"
        }
    ]
}